(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.microtonal_utils=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){const{fractionalPart,cachedLog2}=require("./utils.js");const pf=require("primes-and-factors");const Fraction=require("fraction.js");const Interval=require("./interval.js");const{edoApprox}=require("./edo.js");const{ratioPermsByNo2sHeight,ratioPermsByHeight,ratiosWithDenom,ratiosInOddLimit}=require("./sets.js");const epsilon=1e-5;function bestRationalApproxsByNo2sHeightIterationSize(primeLimit){if(primeLimit){return Math.ceil(2e3/primeLimit+(primeLimit+1)/2)}return 100}function bestRationalApproxsByNo2sHeight(a,b,opts){if(!opts){if(typeof b=="object"&&b!=null){opts=b;b=undefined}else{opts={}}}const intv=Interval(a,b);const intv_logval=intv.valueOf_log();let{cutoff,primeLimit,oddLimit,startIteration,numIterations,useExactDiffs,debug}=opts;if(debug){console.time("bestRationalApproxsByNo2sHeight")}const iterationSize=bestRationalApproxsByNo2sHeightIterationSize(primeLimit);if(primeLimit&&primeLimit<=2){oddLimit=1}if(cutoff==undefined){cutoff=Interval(2).pow(1,12).sqrt()}if(startIteration==undefined){startIteration=0}if(numIterations==undefined){numIterations=1}const startOdd=2*startIteration*iterationSize+1;const endOdd=2*(startIteration+numIterations)*iterationSize+1;let[foundExact,ret]=[false,[]];let[dist_bound,approx_dist_bound]=[cutoff,cutoff.valueOf_log()+epsilon];for(const[i,perms]of ratioPermsByNo2sHeight(startOdd,endOdd,{primeLimit:primeLimit})){let to_add=[];let[new_dist_bound,new_approx_dist_bound]=[dist_bound,approx_dist_bound];for(const[j_no2s,j_no2s_logval]of perms){const j_approx_dist=Math.abs(fractionalPart(j_no2s_logval-intv_logval));if(j_approx_dist<approx_dist_bound){const j_diff=j_no2s.div(intv).reb();const j=j_no2s.mul(Interval(2).pow(intv.expOf(2).add(j_diff.expOf(2))));if(!oddLimit||j.inOddLimit(oddLimit)){const j_dist=j_diff.distance();if(j_dist.compare(dist_bound)<=0){new_dist_bound=j_dist;new_approx_dist_bound=j_approx_dist+epsilon;to_add.push([j,j_diff,j_dist])}}}}to_add.sort(function([a,a_diff,a_dist],[b,b_diff,b_dist]){if(b_dist.equals(a_dist)){return a_diff.compare(b_diff)}return b_dist.compare(a_dist)});for(const[j,j_diff,j_dist]of to_add){ret.push({ratio:j.toFrac(),diff:useExactDiffs?j_diff:j_diff.toCents()})}[dist_bound,approx_dist_bound]=[new_dist_bound,new_approx_dist_bound];if(dist_bound.equals(1)){foundExact=true;break}}if(debug){console.timeEnd("bestRationalApproxsByNo2sHeight");if(foundExact){console.log("bestRationalApproxsByNo2sHeight: exhausted")}}return[foundExact,ret]}function bestRationalApproxsByHeightIterationSize(primeLimit){return 16*bestRationalApproxsByNo2sHeightIterationSize(primeLimit)}function bestRationalApproxsByHeight(a,b,opts){if(!opts){if(typeof b=="object"&&b!=null){opts=b;b=undefined}else{opts={}}}const intv=Interval(a,b);const intv_logval=intv.valueOf_log();let{cutoff,primeLimit,oddLimit,startIteration,numIterations,useExactDiffs,debug}=opts;if(debug){console.time("bestRationalApproxsByHeight")}const iterationSize=bestRationalApproxsByHeightIterationSize(primeLimit);if(primeLimit&&primeLimit<=2){oddLimit=1}if(cutoff==undefined){cutoff=Interval(2).pow(1,12).sqrt()}if(startIteration==undefined){startIteration=0}if(numIterations==undefined){numIterations=1}const start=startIteration*iterationSize+1;const end=(startIteration+numIterations)*iterationSize+1;let[foundExact,ret]=[false,[]];let[dist_bound,approx_dist_bound]=[cutoff,cutoff.valueOf_log()+epsilon];for(const[i,perms]of ratioPermsByHeight(start,end,{primeLimit:primeLimit,oddLimit:oddLimit})){let to_add=[];let[new_dist_bound,new_approx_dist_bound]=[dist_bound,approx_dist_bound];for(const[j,j_logval]of perms){const j_approx_dist=Math.abs(j_logval-intv_logval);if(j_approx_dist<approx_dist_bound){const j_diff=j.div(intv);const j_dist=j_diff.distance();if(j_dist.compare(dist_bound)<=0){new_dist_bound=j_dist;new_approx_dist_bound=j_approx_dist+epsilon;to_add.push([j,j_diff,j_dist])}}}to_add.sort(function([a,a_diff,a_dist],[b,b_diff,b_dist]){if(b_dist.equals(a_dist)){return a_diff.compare(b_diff)}return b_dist.compare(a_dist)});for(const[j,j_diff,j_dist]of to_add){ret.push({ratio:j.toFrac(),diff:useExactDiffs?j_diff:j_diff.toCents()})}[dist_bound,approx_dist_bound]=[new_dist_bound,new_approx_dist_bound];if(dist_bound.equals(1)){foundExact=true;break}}if(debug){console.timeEnd("bestRationalApproxsByHeight");if(foundExact){console.log("bestRationalApproxsByHeight: exhausted")}}return[foundExact,ret]}function bestRationalApproxsByDenom(a,b,opts){if(!opts){if(typeof b=="object"&&b!=null){opts=b;b=undefined}else{opts={}}}const intv=Interval(a,b);const intv_logval=intv.valueOf_log();let{cutoff,primeLimit,oddLimit,startIteration,numIterations,iterationSize,useExactDiffs,debug}=opts;if(debug){console.time("bestRationalApproxsByDenom")}if(cutoff==undefined){cutoff=Interval(2).pow(1,12).sqrt()}if(startIteration==undefined){startIteration=0}if(numIterations==undefined){numIterations=1}if(iterationSize==undefined){iterationSize=100}let d_max=(startIteration+numIterations)*iterationSize+1;let[foundExact,ret]=[false,[]];let dist_bound=cutoff;for(let d=startIteration*iterationSize+1;!foundExact&&d<d_max;d++){const ropts={lo:intv.div(dist_bound),hi:intv.mul(dist_bound),primeLimit:primeLimit,oddLimit:oddLimit};for(const r of ratiosWithDenom(d,ropts)){const i=Interval(r);const diff=i.div(intv);const dist=diff.distance();if(dist.compare(dist_bound)<=0){dist_bound=dist;ret.push({ratio:r,diff:useExactDiffs?diff:diff.toCents()});if(dist_bound.equals(1)){foundExact=true;break}}}}if(debug){console.timeEnd("bestRationalApproxsByDenom")}return[foundExact,ret]}function bestRationalApproxsByDiff(a,b,opts){if(!opts){if(typeof b=="object"&&b!=null){opts=b;b=undefined}else{opts={}}}const intv=Interval(a,b);let{cutoff,primeLimit,oddLimit,useExactDiffs,debug}=opts;if(!isFinite(oddLimit)||oddLimit<=0){throw new Error("no valid odd limit given to bestRationalApproxsByDiff!")}if(debug){console.time("bestRationalApproxsByDiff")}if(cutoff==undefined){cutoff=Interval(2).pow(1,12).sqrt()}const ropts={lo:intv.div(cutoff),hi:intv.mul(cutoff),primeLimit:primeLimit};let ret=[];for(const r of ratiosInOddLimit(oddLimit,ropts)){const j=Interval(r);const diff=j.div(intv);const dist=diff.distance();const approx_dist=dist.valueOf_log();const to_add={ratio:r,diff:diff,dist:dist,dist_bound:approx_dist+epsilon};let added=false;for(let i=0;!added&&i<ret.length;i++){if(approx_dist<ret[i].dist_bound&&(dist.equals(ret[i].dist)&&diff.compare(ret[i].diff)<0||dist.compare(ret[i].dist)<0)){ret.splice(i,0,to_add);added=true}}if(!added){ret.push(to_add)}}if(debug){console.timeEnd("bestRationalApproxsByDiff")}return ret.map(x=>({ratio:x.ratio,diff:useExactDiffs?x.diff:x.diff.toCents()}))}function bestEDOApproxsByEDO(a,b,opts){if(!opts){if(typeof b=="object"&&b!=null){opts=b;b=undefined}else{opts={}}}const intv=Interval(a,b);const intv_logval=intv.valueOf_log();if(opts==undefined){opts={}}let{cutoff,startEDO,endEDO,useExactDiffs}=opts;if(cutoff==undefined){cutoff=Interval(2).pow(1,12).sqrt()}if(startEDO==undefined){startEDO=5}if(endEDO==undefined){endEDO=60}let[foundExact,ret]=[false,[]];let[dist_bound,approx_dist_bound]=[cutoff,cutoff.valueOf_log()+epsilon];for(let edo=startEDO;edo<=endEDO;edo++){const steps=edoApprox(edo,intv);const approx_dist=Math.abs(steps/edo-intv_logval);if(approx_dist<approx_dist_bound){const diff=Interval(2).pow(steps,edo).div(intv);const dist=diff.distance();if(dist.equals(dist_bound)&&ret.length>0){ret[ret.length-1].steps.push([steps,edo])}else if(dist.compare(dist_bound)<=0&&!foundExact){dist_bound=dist;approx_dist_bound=approx_dist+epsilon;ret.push({steps:[[steps,edo]],diff:useExactDiffs?diff:diff.toCents()});if(dist_bound.equals(1)){foundExact=true}}}}return ret}function bestEDOApproxsByDiff(a,b,opts){if(!opts){if(typeof b=="object"&&b!=null){opts=b;b=undefined}else{opts={}}}const intv=Interval(a,b);if(opts==undefined){opts={}}let{startEDO,endEDO,useExactDiffs}=opts;if(startEDO==undefined){startEDO=5}if(endEDO==undefined){endEDO=60}let ret=[];for(let edo=startEDO;edo<=endEDO;edo++){const steps=edoApprox(edo,intv);const diff=Interval(2).pow(steps,edo).div(intv);const dist=diff.distance();const approx_dist=dist.valueOf_log();const to_add={steps:[[steps,edo]],diff:diff,dist:dist,dist_bound:approx_dist+epsilon};let added=false;for(let i=0;!added&&i<ret.length;i++){if(approx_dist<ret[i].dist_bound){if(diff.equals(ret[i].diff)){ret[i].steps.push([steps,edo]);added=true}else if(dist.compare(ret[i].dist)<0){ret.splice(i,0,to_add);added=true}}}if(!added){ret.push(to_add)}}return ret.map(x=>({steps:x.steps,diff:useExactDiffs?x.diff:x.diff.toCents()}))}module.exports.bestRationalApproxsByNo2sHeightIterationSize=bestRationalApproxsByNo2sHeightIterationSize;module.exports.bestRationalApproxsByNo2sHeight=bestRationalApproxsByNo2sHeight;module.exports.bestRationalApproxsByHeightIterationSize=bestRationalApproxsByHeightIterationSize;module.exports.bestRationalApproxsByHeight=bestRationalApproxsByHeight;module.exports.bestRationalApproxsByDenom=bestRationalApproxsByDenom;module.exports.bestRationalApproxsByDiff=bestRationalApproxsByDiff;module.exports.bestEDOApproxsByEDO=bestEDOApproxsByEDO;module.exports.bestEDOApproxsByDiff=bestEDOApproxsByDiff},{"./edo.js":3,"./interval.js":7,"./sets.js":12,"./utils.js":13,"fraction.js":16,"primes-and-factors":20}],2:[function(require,module,exports){const{mod}=require("./utils.js");const{gcd}=require("mathutils");const pf=require("primes-and-factors");const Fraction=require("fraction.js");const Interval=require("./interval.js");const{pyDegreeString,pyNote}=require("./pythagorean.js");const colorRegions=[Interval([Fraction(1,24)]),Interval([Fraction(5,24)]),Interval([Fraction(9,24)]),Interval([Fraction(12,24)]),Interval([Fraction(15,24)]),Interval([Fraction(19,24)]),Interval([Fraction(23,24)]),Interval([Fraction(24,24)])];let colorCache_var={};function colorPrimeZDegree(p){if(colorCache_var[p]){return colorCache_var[p]}if(!pf.isPrime(p)){throw new Error("colorPrimeZDegree not given a prime")}const i=Interval(p).red();const dNo2=colorRegions.findIndex(hi=>i.compare(hi)<0);const d=dNo2-7*i.div(p).valueOf_log();colorCache_var[p]=d;return d}function colorZDegree(a,b){const i=Interval(a,b);let zd=0;for(const[p,e]of i.factors()){zd+=colorPrimeZDegree(p)*e.valueOf()}return zd}function colorDegree(a,b){const zd=colorZDegree(a,b);return zd==0?1:zd+Math.sign(zd)}function colorMagnitude(a,b){const i=Interval(a,b);let sum=Fraction(0);for(const[p,e]of i.factors()){if(p>2){sum=sum.add(e)}}return Math.round(sum.valueOf()/7)}function colorPrimePrefix(p,v,abbreviate){if(v!="e"&&v!="o"&&v!="u"){throw new Error("Invalid vowel passed to colorPrimePrefix")}if(p==2){if(v=="e"){return"bi"}return""}if(p==3){if(v=="e"){return"tri"}return"w"+(abbreviate?"":"a")}if(p==5){if(v=="e"){return"quin"}if(v=="o"){return"y"+(abbreviate?"":v)}if(v=="u"){return"g"+(abbreviate?"":v)}}if(p==7){if(v=="e"){return"sep"}if(v=="o"){return"z"+(abbreviate?"":v)}if(v=="u"){return"r"+(abbreviate?"":v)}}if(abbreviate&&v!="e"){if(p==11){return"1"+v}if(p==13){return"3"+v}return p+v}else{if(p==11){return"l"+v}if(p>67){throw new Error("Prime larger than 67 passed to colorPrimePrefix")}const[tens,ones]=[Math.floor(p/10),p%10];return{1:"",2:"twe",3:"thi",4:"fo",5:"fi",6:"si"}[tens]+{1:"w",3:"th",7:"s",9:"n"}[ones]+v}}function colorMultiPrefix(n){const fs=pf.getPrimeExponentObject(n);let fs_arr=[];if(fs[2]%2){fs_arr.push([2,fs[2]%2])}if(fs[3]){fs_arr.push([3,fs[3]])}if(fs[2]>1){fs_arr.push([4,Math.floor(fs[2]/2)])}delete fs[2];delete fs[3];fs_arr=fs_arr.concat(Object.entries(fs));let res="";for(const[p,e]of fs_arr){const prefix=p==4?"quad":colorPrimePrefix(p,"e");res=prefix.repeat(e.valueOf())+res}return res}function colorFactorPrefix(p,e,opts){if(e==0){return""}if(opts==undefined){opts={}}const{verbosity,useExps,useHTMLExps}=opts;if(verbosity==undefined){verbosity=0}const base=colorPrimePrefix(p,e>0?"o":"u",verbosity==0);const eAbs=Math.abs(e);if(verbosity==0){if(eAbs==1){return base}if(eAbs==2){return base+base[base.length-1]}if(useHTMLExps){return base+"<sup>"+eAbs+"</sup>"}if(useExps){if((""+eAbs).length==1){return base+"^"+eAbs}else{return base+"^("+eAbs+")"}}return base+base[base.length-1].repeat(eAbs-1)}else{if(eAbs==1){return base}if(eAbs==2){return base+base}return colorMultiPrefix(eAbs)+base+"-a"}}function findRuns(factors){let[runs,current_run,current_run_val]=[[],[],undefined];for(let i=0;i<factors.length;i++){if(current_run_val!=undefined){if(Math.abs(factors[i][1])==current_run_val){current_run.push([factors[i][0],Math.sign(factors[i][1])])}else{runs.push([current_run,current_run_val]);[current_run,current_run_val]=[[],undefined]}}if(current_run_val==undefined){current_run.push([factors[i][0],Math.sign(factors[i][1])]);current_run_val=Math.abs(factors[i][1])}}if(current_run_val!=undefined){runs.push([current_run,current_run_val])}return runs}function colorPrefix(a,b,opts){if(!opts&&typeof b=="object"&&b!=null){opts=b;b=undefined}let{verbosity,addCosAfterDeg,hideMagnitude,useFullMagnitude,keepTrailingHyphen,useExps,useHTMLExps}=opts||{};if(verbosity==undefined){verbosity=0}if(addCosAfterDeg==undefined){addCosAfterDeg=13}let i=Interval(a,b);if(!i.isFrac()){throw new Error("Non-ratio has no color name")}let[cos,coStr]=[0,""];const[i_logval,d]=[i.valueOf_log(),colorDegree(i)];if(i_logval>=1&&(d>addCosAfterDeg||d<-addCosAfterDeg)){cos=Math.floor(i_logval);i=i.div(Interval(2).pow(cos))}if(verbosity==0){if(cos==0){coStr=""}else if(cos==1){coStr="c"}else if(cos==2){coStr="cc"}else if(useHTMLExps){coStr="c<sup>"+cos+"</sup>"}else if(useExps){if((""+cos).length==1){coStr="c^"+cos}else{coStr="c^("+cos+")"}}else{coStr="c".repeat(cos)}}else{if(cos==1){coStr="co"}if(cos==2){coStr="coco"}if(cos>=3){coStr=colorMultiPrefix(cos)+"co"}}let iNo23=i.factorOut(2)[1].factorOut(3)[1];let factors=iNo23.factors();let[mAbs,mStr]=[0,""];const m=colorMagnitude(i);if(m!=0&&!hideMagnitude){mAbs=Math.abs(m);if(verbosity==0){const c=m>0?"L":"s";if(mAbs==0){mStr=""}else if(mAbs==1){mStr=c}else if(mAbs==2){mStr=c+c}else if(useHTMLExps){mStr=c+"<sup>"+mAbs+"</sup>"}else if(useExps){if((""+mAbs).length==1){mStr=c+"^"+mAbs}else{mStr=c+"^("+mAbs+")"}}else{mStr=c.repeat(mAbs)}}else if(!useFullMagnitude){mStr=m>0?"la":"sa";if(mAbs==2){mStr=mStr+mStr}if(mAbs>=3){mStr=colorMultiPrefix(mAbs)+mStr}}else{mStr=m>0?"large ":"small ";if(mAbs>1){mStr=mAbs+"-"+mStr}}}let pStr="";if(factors.length==0){pStr=colorFactorPrefix(3,1,opts)}else if(verbosity!=0){for(const[ps,e]of findRuns(factors)){const psStrs=ps.map(([p,si])=>colorFactorPrefix(p,si,opts));if(e==1){pStr=psStrs.reverse().join("")+pStr}else if(e==2&&ps.length==1){pStr=psStrs[0]+psStrs[0]+pStr}else{pStr=colorMultiPrefix(e)+psStrs.reverse().join("")+"-a"+pStr}}}else{for(const[p,e]of factors){pStr=colorFactorPrefix(p,e.valueOf(),opts)+pStr}}if(!keepTrailingHyphen){pStr=pStr.replace(/-a$/,"")}let[hy1,hy2]=["",""];if(verbosity!=0){let coNoHyphen=cos<=1;let mNoHyphen=mAbs<=1;let pNoHyphen=factors.length==0||factors.length==1&&Math.abs(factors[0][1])==1;if(mAbs==0){if(!(coNoHyphen||pNoHyphen)){hy2="-"}}else{if(!(coNoHyphen||mNoHyphen)){hy1="-"}if(!(mNoHyphen||pNoHyphen)){hy2="-"}}}let res=coStr+hy1+mStr+hy2+pStr;if(res=="lo"){return"ilo"}if(res=="so"){return"iso"}if(res=="no"){return"ino"}if(res=="nu"){return"inu"}return res}function colorSymb(a,b,opts){if(!opts&&typeof b=="object"&&b!=null){opts=b;b=undefined}let{verbosity,addCosAfterDeg,useFullMagnitude,useWordNegative,useExps,useHTMLExps}=opts||{};if(verbosity==undefined){verbosity=0}if(addCosAfterDeg==undefined){addCosAfterDeg=13}const optsToPass={verbosity:verbosity,addCosAfterDeg:addCosAfterDeg,useFullMagnitude:useFullMagnitude,useExps:useExps,useHTMLExps:useHTMLExps};const i=Interval(a,b);const i_logval=i.valueOf_log();let d=colorDegree(i);if(i_logval>=1&&(d>addCosAfterDeg||d<-addCosAfterDeg)){const cos=Math.floor(i_logval);d=colorDegree(i.div(Interval(2).pow(cos)))}const spacer_str=verbosity>0?" ":"";const neg_str=verbosity>0&&d<0?useWordNegative?"negative ":"-":"";const d_str=pyDegreeString(d,verbosity);return colorPrefix(i,optsToPass)+spacer_str+neg_str+d_str}function colorFromSymb(cos,m,iNo23,d,logCorrections){iNo23=Interval(iNo23);if(iNo23.hasExp(2)||iNo23.hasExp(3)){throw new Error("Second argument to colorFromSymb has a factor of 2 or 3")}const zd=d-Math.sign(d);const zdNo23=colorZDegree(iNo23);const zd_diff=zd-zdNo23;const mNo2=colorMagnitude(iNo23.mul(Interval(3).pow(2*zd_diff)));const k=m-mNo2;const e2=-3*zd_diff-11*k;const e3=2*zd_diff+7*k;if(logCorrections){const e3_xenWiki=mod(2*zd-2*zdNo23+3,7)+7*m-3;const e2_xenWiki=(zd-zdNo23-11*e3_xenWiki)/7;if(e2!=e2_xenWiki||e3!=e3_xenWiki){const ab1="a="+e2_xenWiki+",b="+e3_xenWiki;const ab2="a="+e2+",b="+e3;console.log("Corrected ratio-from-color formula: "+ab1+" ~> "+ab2)}}return iNo23.mul(Interval([cos+e2,e3]))}function colorNote(a,b,opts){if(!opts&&typeof b=="object"&&b!=null){opts=b;b=undefined}let{verbosity,useASCII,addHTMLExps}=opts||{};if(verbosity==undefined){verbosity=0}const optsToPass={verbosity:verbosity,addCosAfterDeg:Infinity,hideMagnitude:true,addHTMLExps:addHTMLExps};const i=Interval(a,b);let[e2,iNo2]=i.factorOut(2);let[e3,iNo23]=iNo2.factorOut(3);if(iNo23.equals(1)){return pyNote(i,useASCII)}for(const[p,e]of iNo23.factors()){const j=colorFromSymb(0,0,Interval(p),1).pow(e);e2=e2.sub(j.expOf(2));e3=e3.sub(j.expOf(3))}const pyi=Interval([e2,e3]);return colorPrefix(iNo23,optsToPass)+(verbosity>0?" ":"")+pyNote(pyi,useASCII)}function colorFromNote(iNo23,pyi){let[e2,e3]=[pyi.expOf(2),pyi.expOf(3)];for(const[p,e]of iNo23.factors()){const j=colorFromSymb(0,0,Interval(p),1).pow(e);e2=e2.add(j.expOf(2));e3=e3.add(j.expOf(3))}return Interval([e2,e3]).mul(iNo23)}function colorTemperament(a,b){const i=Interval(a,b);if(i.compare(1)<0){throw new Error("Comma passed to `colorTempermentName` must be > 1")}const iRed=i.red();const[m,d]=[colorMagnitude(iRed),colorDegree(iRed)];const iNo23=i.factorOut(2)[1].factorOut(3)[1];let segOffset=1;let last_diff=iRed.distance();let curr_diff=colorFromSymb(0,m,iNo23,d-1).red().distance();while(curr_diff.compare(last_diff)<0){segOffset++;last_diff=curr_diff;curr_diff=colorFromSymb(0,m,iNo23,d-segOffset).red().distance()}const segOffsetStr=colorMultiPrefix(segOffset);const colorStr=colorPrefix(i,{verbosity:1,addCosAfterDeg:0,useFullMagnitude:false});return colorStr+segOffsetStr}module["exports"].colorPrimeZDegree=colorPrimeZDegree;module["exports"].colorZDegree=colorZDegree;module["exports"].colorDegree=colorDegree;module["exports"].colorMagnitude=colorMagnitude;module["exports"].colorPrimePrefix=colorPrimePrefix;module["exports"].colorMultiPrefix=colorMultiPrefix;module["exports"].colorFactorPrefix=colorFactorPrefix;module["exports"].colorPrefix=colorPrefix;module["exports"].colorSymb=colorSymb;module["exports"].colorFromSymb=colorFromSymb;module["exports"].colorNote=colorNote;module["exports"].colorFromNote=colorFromNote;module["exports"].colorTemperament=colorTemperament},{"./interval.js":7,"./pythagorean.js":11,"./utils.js":13,"fraction.js":16,mathutils:17,"primes-and-factors":20}],3:[function(require,module,exports){const{mod}=require("./utils.js");const{gcd,egcd}=require("mathutils");const Fraction=require("fraction.js");const Interval=require("./interval.js");const py=require("./pythagorean.js");function edoApprox(edo,a,b){return Math.round(edo*Interval(a,b).toCents()/1200)}function edoPy(edo,a,b){const i=Interval(a,b);const g=Fraction(py.pyGenerator(i)*edoApprox(edo,3,2),4);const p=py.pyOctaves(i);if(g.d!=1){throw new Error(edo+"-EDO has no "+py.pySymb(i,{verbosity:1})+" interval")}return g.s*g.n+p*edo}function edoPyInv(edo,n){const p5=edoApprox(edo,3,2);const[d,x,y]=egcd(p5,4*edo);if(4*n%d==0){const[g,o]=[x*(4*n/d),y*(4*n/d)];const edo_2d=Math.floor((4*edo/d-1)/2);const g_bal=mod(g+edo_2d,4*edo/d)-edo_2d;const o_bal=o-p5*((g_bal-g)/(4*edo));return Interval(3,2).pow(g_bal,4).mul(Interval(2).pow(o_bal))}}function edoPyComma(edo){const p5=edoApprox(edo,3,2);const d=gcd(p5,4*edo);return Interval(3,2).pow(-4*edo/d,4).mul(Interval(2).pow(p5/d))}function edoHasNeutrals(edo){return edoApprox(edo,3,2)%2==0}function edoHasSemiNeutrals(edo){return edoApprox(edo,3,2)%4==0}function fillGens(edo,g,lo,hi){let steps=[];for(let i=0;i<edo;i++){steps.push(Array(0))}if(lo<=0&&0<=hi){steps[0].push(0)}for(let k=1;k<=Math.max(Math.abs(lo),Math.abs(hi));k++){if(lo<=k&&k<=hi){steps[mod(k*g,edo)].push(k)}if(lo<=-k&&-k<=hi){steps[mod(-k*g,edo)].push(-k)}}return steps}function addUpdns(edo,steps){let new_steps=steps.map(_=>Array(0));let[last_below,last_above]=[0,edo];for(let i=0;i<edo;i++){if(steps[i].length==0){new_steps[i].push(...steps[last_below].map(k=>[i-last_below,k]))}else{new_steps[i].push(...steps[i].map(k=>[0,k]));last_below=i}const j=edo-1-i;if(steps[j].length==0){new_steps[j].push(...steps[mod(last_above,edo)].map(k=>[j-last_above,k]))}else{last_above=j}}for(let i=0;i<edo;i++){let[minUpdns,hasNonNeutral]=[edo,false];for(const[uds,k]of new_steps[i]){minUpdns=Math.min(minUpdns,Math.abs(uds));hasNonNeutral=hasNonNeutral||Number.isInteger(k)}new_steps[i]=new_steps[i].filter(udsk=>Math.abs(udsk[0])<=minUpdns&&(!hasNonNeutral||Number.isInteger(udsk[1]))).sort((a,b)=>a[0]==b[0]?Math.abs(a[1])-Math.abs(b[1]):b[0]-a[0])}return new_steps}function cvtGensToPy(edo,steps){for(let i=0;i<edo;i++){for(let j=0;j<steps[i].length;j++){let v=Interval(steps[i][j][1]==0&&steps[i][j][0]<0?2:1);steps[i][j][1]=Interval(3,2).pow(steps[i][j][1]).red().mul(v)}}return steps}let upsdnsSymbCache_var={};function updnsSymbCache(edo){if(upsdnsSymbCache_var[edo]){return upsdnsSymbCache_var[edo]}const fifth=edoApprox(edo,3,2);let[lo,hi]=[-6,6];if(fifth/edo==4/7){[lo,hi]=[-1.5,1.5]}if(fifth/edo==3/5){[lo,hi]=[-4,4]}let steps;if(fifth%2!=0){steps=fillGens(edo,fifth,lo,hi)}else{steps=fillGens(edo,fifth/2,2*lo,2*hi);for(let i=0;i<edo;i++){steps[i]=steps[i].filter(k=>k%2==0||Math.abs(k)<=6).map(k=>k/2)}}steps=cvtGensToPy(edo,addUpdns(edo,steps));upsdnsSymbCache_var[edo]=steps;return steps}function updnsSymb(edo,n){const nr=mod(n,edo);const vs=Interval(2).pow(n-nr,edo);const cache=updnsSymbCache(edo)[nr];let ret=[];for(let i=0;i<cache.length;i++){const updns=(cache[i][0]>0?"^":"v").repeat(Math.abs(cache[i][0]));const str=updns+py.pySymb(cache[i][1].mul(vs));ret.push(str.replace("n","~").replace("sA","~").replace("sd","~"))}return ret}let upsdnsNoteCache_var={};function updnsNoteCache(edo){if(upsdnsNoteCache_var[edo]){return upsdnsNoteCache_var[edo]}const fifth=edoApprox(edo,3,2);let[lo,hi]=[-9,7];if(fifth/edo==4/7){[lo,hi]=[-4,2]}if(fifth/edo>4/7&&fifth/edo<7/12){[lo,hi]=[-11,9]}const steps=cvtGensToPy(edo,addUpdns(edo,fillGens(edo,fifth,lo,hi)));upsdnsNoteCache_var[edo]=steps;return steps}function updnsNote(edo,n,useASCII){const nr=mod(n,edo);const vs=Interval(2).pow(n-nr,edo);const cache=updnsNoteCache(edo)[nr];let ret=[];for(let i=0;i<cache.length;i++){const updns=(cache[i][0]>0?"^":"v").repeat(Math.abs(cache[i][0]));const str=updns+py.pyNote(cache[i][1].mul(vs),useASCII);ret.push(str)}return ret}module["exports"].edoApprox=edoApprox;module["exports"].edoPy=edoPy;module["exports"].edoPyInv=edoPyInv;module["exports"].edoPyComma=edoPyComma;module["exports"].edoHasNeutrals=edoHasNeutrals;module["exports"].edoHasSemiNeutrals=edoHasSemiNeutrals;module["exports"].updnsSymbCache=updnsSymbCache;module["exports"].updnsSymb=updnsSymb;module["exports"].updnsNoteCache=updnsNoteCache;module["exports"].updnsNote=updnsNote},{"./interval.js":7,"./pythagorean.js":11,"./utils.js":13,"fraction.js":16,mathutils:17}],4:[function(require,module,exports){const pf=require("primes-and-factors");const ntw=require("number-to-words");const Fraction=require("fraction.js");const Interval=require("./interval.js");const{pyInterval,pySymb,pyGenerator}=require("./pythagorean.js");const{fjsComma,fjsFifthShift,fjsAccidentals,nfjsSpec}=require("./fjs.js");const{updnsSymbCache}=require("./edo.js");const primeNames={5:["classic","cls."],7:["septimal","sep."],11:["undecimal","und."],13:["tridecimal","trid."],17:["septendecimal","sepd."],19:["undevicesimal","undv."]};function enNames(a,b,opts){if(!opts&&typeof b=="object"&&b!=null){opts=b;b=undefined}const intv=Interval(a,b);const abbreviate=(opts||{}).abbreviate?1:0;const verbosity=abbreviate?1:2;const prefEDO=(opts||{}).prefEDO;let nms=[];if(intv.equals(Interval(2).sqrt())){nms.push("tritone")}if(intv.equals(pyInterval(-2,-1.5))){nms.push("Pythagorean comma")}for(const p in primeNames){const comma=fjsComma(p);const inv_str=intv.compare(1)<0?" (inverted)":"";if(intv.equals(comma)||intv.equals(comma.recip())){nms.push((p==5?"syntonic":primeNames[p][0])+" comma"+inv_str)}}if(intv.toMonzo().length==1&&intv.expOf(2).d==1&&intv.expOf(2).n>1){const invStr=intv.expOf(2)<0?" (inverted)":"";nms.push(ntw.toWords(intv.expOf(2).n)+" octaves"+invStr)}const fjs=fjsAccidentals(a,b,nfjsSpec);if(fjs){let pyi_symb=pySymb(fjs.pyi,{verbosity:verbosity});const resFact=intv.factors().filter(([p,_])=>p>3);if(resFact.length==0){if(intv.hasExp(3)){nms.push((abbreviate?"py. ":"Pythagorean ")+pyi_symb)}else{nms.push(pyi_symb)}}else if(resFact.length==1){const[p,e]=resFact[0];if(primeNames[p]&&e.d==1&&pyGenerator(fjs.pyi)!=0){const fifthShift=fjsFifthShift(p,nfjsSpec);const g=fjs.pyi.expOf(3);if(e.s==fifthShift.s*g.s&&g.d==fifthShift.d){let multiplicityMatches=false;if(fifthShift.d==1){if(g.n==6){multiplicityMatches=e.n==2}else{multiplicityMatches=e.n==2+Math.floor((g.n-6)/7)}}if(fifthShift.d==2){multiplicityMatches=g.n<=11&&e.n==1}if(multiplicityMatches){if(Math.abs(pyGenerator(fjs.pyi))==4){const typ=intv.compare(fjs.pyi)>0?"super":"sub";if(abbreviate){pyi_symb=pyi_symb.replace("perfect",typ)}else{pyi_symb=pyi_symb.replace("perfect ",typ+"-")}}nms.push(primeNames[p][abbreviate]+" "+pyi_symb.replace("perfect ",""))}}}}}else if(intv.toMonzo().length<=1){const e2=intv.expOf(2);const edo=prefEDO?prefEDO:e2.d;const edo_str=edo+"-EDO ";let intv_strs=[];if(e2.mul(edo).d==1&&(prefEDO||edo<=60)){const n=e2.s*e2.mul(edo).n;const n_mod=(n%edo+edo)%edo;for(const[uds,pyi_red]of updnsSymbCache(edo)[n_mod]){const pyi=pyi_red.mul(Interval(2).pow((n-n_mod)/edo));let uds_str="";if(uds==1){uds_str="up"}else if(uds==-1){uds_str="down"}else if(uds==2&&!abbreviate){uds_str="double-up "}else if(uds==-2&&!abbreviate){uds_str="double-down "}else if(uds>=2){uds_str=uds+"-up "}else if(uds<=-2){uds_str=uds+"-down "}let pyi_symb=pySymb(pyi,{verbosity:verbosity});if((uds==1||uds==-1)&&!abbreviate){pyi_symb=pyi_symb.replace("perfect ","-")}else if(uds!=0){pyi_symb=pyi_symb.replace("perfect","")}intv_strs.push(uds_str+pyi_symb)}nms.push(edo_str+intv_strs.join(" / "))}}if(intv.equals(pyInterval(2,-1.5))){nms.push("Pythagorean comma (inverted)")}if(intv.isFrac()){const{n,d}=intv.toFrac();if(d==1&&n>1){nms.push(ntw.toOrdinal(n)+" harmonic")}if(n==1&&d>1){nms.push(ntw.toOrdinal(d)+" harmonic (inverted)")}}return nms}module.exports.enNames=enNames},{"./edo.js":3,"./fjs.js":5,"./interval.js":7,"./pythagorean.js":11,"fraction.js":16,"number-to-words":19,"primes-and-factors":20}],5:[function(require,module,exports){const pf=require("primes-and-factors");const Fraction=require("fraction.js");const Interval=require("./interval.js");const py=require("./pythagorean.js");function FJSLike(RoT,fifthSeq,hasNeutrals,hasSemiNeutrals){if(!(this instanceof FJSLike)){return new FJSLike(RoT,fifthSeq,hasNeutrals,hasSemiNeutrals)}this.RoT=RoT;this.fifthSeq=fifthSeq;this.hasNeutrals=!!hasNeutrals;this.hasSemiNeutrals=!!hasSemiNeutrals}const fjsRoT=Interval(65,63);function*fjsFifthSeq(){yield Fraction(0);for(let g=1;true;g++){yield Fraction(g);yield Fraction(-g)}}const fjsSpec=FJSLike(fjsRoT,fjsFifthSeq,false,false);const nfjsRoT=py.pyInterval(2,-1);function*nfjsFifthSeq(){yield Fraction(0);for(let g=1;g<=6;g++){yield Fraction(g);yield Fraction(-g)}for(let g=1;g<=6;g++){yield Fraction(2*g-1,2);yield Fraction(1-2*g,2)}}const nfjsSpec=FJSLike(nfjsRoT,nfjsFifthSeq,true,false);function fjsRegions(spec){if(!spec){spec=fjsSpec}else if(spec.RoT.compare(Interval(2).sqrt())>=0){throw new Error("RoT too big")}else if(spec.RoT.compare(Interval(1))<=0){throw new Error("RoT < 1")}let index=0;let regions=[{lo:Interval(1),hi:Interval(2),fifthShift:undefined}];function addRegion(lo,hi,fifthShift){if(lo.compare(Interval(1))<0){addRegion(Interval(1),hi,fifthShift);addRegion(lo.mul(2),Interval(2),fifthShift)}else if(hi.compare(Interval(2))>0){addRegion(Interval(1),hi.div(2),fifthShift);addRegion(lo,Interval(2),fifthShift)}else{for(const[i,r]of regions.entries()){if(!r.fifthShift&&lo.compare(r.hi)<0&&r.lo.compare(hi)<0){const lo_vs_rlo=lo.compare(r.lo);const hi_vs_rhi=hi.compare(r.hi);const maxlo=lo_vs_rlo>0?lo:r.lo;const minhi=hi_vs_rhi<0?hi:r.hi;regions.splice(i,1);if(hi_vs_rhi<0){regions.splice(i,0,{lo:minhi,hi:r.hi,fifthShift:undefined})}regions.splice(i,0,{lo:maxlo,hi:minhi,fifthShift:fifthShift,index:index});index++;if(lo_vs_rlo>0){regions.splice(i,0,{lo:r.lo,hi:maxlo,fifthShift:undefined})}if(hi_vs_rhi>0){addRegion(r.hi,hi,fifthShift)}return}}}}for(const g of spec.fifthSeq()){const f=Interval(3,2).pow(g).red();addRegion(f.div(spec.RoT),f.mul(spec.RoT),g);if(regions.every(r=>r.fifthShift!=undefined)){break}}return regions}function fjsFifthShift(a,b,spec){if(!spec){if(typeof b=="object"&&b!=null){spec=b;b=undefined}else{spec=fjsSpec}}const intv=Interval(a,b);for(const g of spec.fifthSeq()){let c=intv.div(Interval(3,2).pow(g)).reb();if(c.compare(spec.RoT)<0&&spec.RoT.recip().compare(c)<0){return g}}}function fjsComma(p,spec){if(!spec){spec=fjsSpec}p=parseInt(p);if(!pf.isPrime(p)||p<=3){throw new Error("input is not a prime interval greater than 3")}for(const g of spec.fifthSeq()){let c=Interval(p).div(Interval(3,2).pow(g)).reb();if(c.compare(spec.RoT)<0&&spec.RoT.recip().compare(c)<0){return c}}}function fjsFactor(a,b,spec){if(!spec){if(typeof b=="object"&&b!=null){spec=b;b=undefined}else{spec=fjsSpec}}const k=Interval(a,b);let ret=Interval(1);for(const[p,e]of k.factors()){ret=ret.mul(fjsComma(p,spec).pow(e))}return ret}function fjsAccidentals(a,b,spec){if(!spec){if(typeof b=="object"&&b!=null){spec=b;b=undefined}else{spec=fjsSpec}}const i=Interval(a,b);let pyi=i;let otos=[];let utos=[];for(let[p,e]of i.factors()){if(p!=2&&p!=3){pyi=pyi.div(fjsComma(p,spec).pow(e));while(e>=1){otos.push(p);e=e.sub(1)}if(e>0&&e.d==2){otos.push("sqrt("+p+")")}if(e>0&&e.d>2){otos.push("root"+e.d+"("+p+")")}while(e<=-1){utos.push(p);e=e.add(1)}if(e<0&&e.d==2){utos.push("sqrt("+p+")")}if(e<0&&e.d>2){utos.push("root"+e.d+"("+p+")")}}}const modulus=spec.hasSemiNeutrals?1:spec.hasNeutrals?2:4;if(py.isPythagorean(pyi)&&py.pyGenerator(pyi)%modulus==0){const otoStr=otos.length==0?"":"^"+otos.join(",");const utoStr=utos.length==0?"":"_"+utos.join(",");return{otos:otos,utos:utos,accStr:otoStr+utoStr,pyi:pyi}}}function fjsSymb(a,b,spec){const res=fjsAccidentals(a,b,spec);if(res){return py.pySymb(res.pyi)+res.accStr}}function fjsNote(a,b,spec){const res=fjsAccidentals(a,b,spec);if(res){return py.pyNote(res.pyi)+res.accStr}}module["exports"].FJSLike=FJSLike;module["exports"].fjsRoT=fjsRoT;module["exports"].fjsFifthSeq=fjsFifthSeq;module["exports"].fjsSpec=fjsSpec;module["exports"].nfjsRoT=nfjsRoT;module["exports"].nfjsFifthSeq=nfjsFifthSeq;module["exports"].nfjsSpec=nfjsSpec;module["exports"].fjsRegions=fjsRegions;module["exports"].fjsFifthShift=fjsFifthShift;module["exports"].fjsComma=fjsComma;module["exports"].fjsFactor=fjsFactor;module["exports"].fjsAccidentals=fjsAccidentals;module["exports"].fjsSymb=fjsSymb;module["exports"].fjsNote=fjsNote},{"./interval.js":7,"./pythagorean.js":11,"fraction.js":16,"primes-and-factors":20}],6:[function(require,module,exports){module["exports"]["Fraction"]=require("fraction.js");module["exports"]["Interval"]=require("./interval.js");Object.assign(module["exports"],require("./pythagorean.js"));Object.assign(module["exports"],require("./fjs.js"));Object.assign(module["exports"],require("./edo.js"));Object.assign(module["exports"],require("./color.js"));Object.assign(module["exports"],require("./sets.js"));Object.assign(module["exports"],require("./approx.js"));Object.assign(module["exports"],require("./english.js"));Object.assign(module["exports"],require("./parser.js"))},{"./approx.js":1,"./color.js":2,"./edo.js":3,"./english.js":4,"./fjs.js":5,"./interval.js":7,"./parser.js":8,"./pythagorean.js":11,"./sets.js":12,"fraction.js":16}],7:[function(require,module,exports){const{unBigFraction,cachedLog2,maxKey,keys,primes}=require("./utils.js");const pf=require("primes-and-factors");const bigInt=require("big-integer");const Fraction=require("fraction.js");const BigFraction=require("fraction.js/bigfraction.js");const parse=function(a,b){if(a===undefined||a===null){return{}}else if(b!==undefined){if(a==0||a<0||b==0||b<0){throw new Error("non-positive number cannot be converted into an interval")}const afs=pf.getPrimeExponentObject(Number(a));const bfs=pf.getPrimeExponentObject(Number(b));let fact={};for(const p of keys(afs,bfs)){fact[p]=BigFraction((afs[p]||0)-(bfs[p]||0))}return fact}else if(Array.isArray(a)){let fact={};if(a.length>0){let i=0;for(const p of primes()){if(i>=a.length){break}const ai=BigFraction(a[i]);if(!ai.equals(0)){fact[p]=ai}i++}}return fact}else if(typeof a=="object"){if("_fact"in a){return parse(a._fact)}else if("d"in a&&"n"in a){let sn=a["n"];if("s"in a){sn*=a["s"]}return parse(sn,a["d"])}else{let allPrimes=true;let fact={};for(const i of Object.keys(a)){allPrimes&=pf.isPrime(Number(i));const ai=BigFraction(a[i]);if(!ai.equals(0)){fact[i]=ai}}if(allPrimes){return fact}else{throw new Error("invalid arguments to Interval: "+a+", "+b)}}}else{return parse(BigFraction(a))}};function Interval(a,b){if(!(this instanceof Interval)){return new Interval(a,b)}this._fact=parse(a,b)}Interval.prototype={hasExp:function(p){if(!pf.isPrime(Number(p))){throw new Error(p+" is not prime")}return!!this._fact[p]},expOf:function(p){return unBigFraction(this.expOfBig(p))},expOfBig:function(p){return this.hasExp(p)?this._fact[p]:BigFraction(0)},factors:function(){let fs=[];for(const p in this._fact){if(!this._fact[p].equals(0n)){fs.push([parseInt(p),unBigFraction(this._fact[p])])}}return fs},factorsBig:function(){let fs=[];for(const p in this._fact){if(!this._fact[p].equals(0n)){fs.push([parseInt(p),this._fact[p]])}}return fs},mul:function(a,b){const rhs_fact=parse(a,b);let ret_fact={};for(const p of keys(this._fact,rhs_fact)){ret_fact[p]=(this._fact[p]||BigFraction(0)).add(rhs_fact[p]||BigFraction(0))}return new Interval(ret_fact)},div:function(a,b){const rhs_fact=parse(a,b);let ret_fact={};for(const p of keys(this._fact,rhs_fact)){ret_fact[p]=(this._fact[p]||BigFraction(0)).sub(rhs_fact[p]||BigFraction(0))}return new Interval(ret_fact)},recip:function(){let ret_fact={};for(const p in this._fact){ret_fact[p]=this._fact[p].neg()}return new Interval(ret_fact)},pow:function(a,b){const k=BigFraction(a,b);let ret_fact={};for(const p in this._fact){ret_fact[p]=this._fact[p].mul(k)}return new Interval(ret_fact)},root:function(a){return this.pow(1,a)},sqrt:function(){return this.root(2)},isFrac:function(){for(const p in this._fact){if(this._fact[p].d!=1n){return false}}return true},toFrac:function(){return unBigFraction(this.toFracBig())},toFracBig:function(){return BigFraction(this.toFracRaw())},toFracRaw:function(allowUnbounded){let[n,d]=[1n,1n];for(const p in this._fact){if(this._fact[p].d==1){let m=this._fact[p].s*this._fact[p].n;if((m>=4096||m<=-4096)&&!allowUnbounded){throw new Error("exponent of "+p+" too big: "+m)}if(m>0){n*=BigInt(p)**m}if(m<0){d*=BigInt(p)**(-1n*m)}}else{throw new Error("interval does not have integer exponents")}}return{s:1n,n:n,d:d}},med:function(a,b){let[f1,f2]=[this.toFracRaw(),Interval(a,b).toFracRaw()];return new Interval(f1.n+f2.n,f1.d+f2.d)},toNthRoot:function(){const{k,n}=this.toNthRootBig();return{k:unBigFraction(k),n:Number(n)}},toNthRootBig:function(){const{k,n}=this.toNthRootRaw();return{k:BigFraction(k),n:n}},toNthRootRaw:function(){const n=this.minPowFracBig();return{k:this.pow(n).toFracRaw(),n:n}},minPowFrac:function(){return Number(this.minPowFracBig())},minPowFracBig:function(){let ret=1n;for(const p in this._fact){ret=BigInt(bigInt.lcm(ret,this._fact[p].d))}return ret},toNthRootString:function(){const{k,n}=this.toNthRootBig();if(n==1){return k.toFraction()}if(n==2){return"sqrt("+k.toFraction()+")"}return"root"+n+"("+k.toFraction()+")"},valueOf:function(){let ret=1;for(const p in this._fact){ret*=p**this._fact[p].valueOf()}return ret},compare:function(a,b){try{const{n,d}=this.div(a,b).toNthRootRaw().k;const t=n-d;return(0<t)-(t<0)}catch(e){const x=this.valueOf_log();const y=Interval(a,b).valueOf_log();if(x==y){return 0}else{return(y<x)-(x<y)}}},equals:function(a,b){const rhs_fact=parse(a,b);for(const p of keys(this._fact,rhs_fact)){if(!(this._fact[p]||BigFraction(0)).equals(rhs_fact[p]||BigFraction(0))){return false}}return true},factorOut:function(a,b){const base=new Interval(a,b);const gp=maxKey(base._fact);if(isFinite(gp)){const g=(this._fact[gp]||BigFraction(0)).div(base._fact[gp]);let ret_fact={};for(const p of keys(this._fact,base._fact)){ret_fact[p]=(this._fact[p]||BigFraction(0)).sub((base._fact[p]||BigFraction(0)).mul(g))}return[unBigFraction(g),new Interval(ret_fact)]}else{return[Fraction(0),this]}},valueOf_log:function(a,b){const i=new Interval(a,b);if(a==undefined&&b==undefined||i.equals(2)){let ret=0;for(const p in this._fact){ret+=(this._fact[p]||BigFraction(0)).valueOf()*cachedLog2(p)}return ret}if(i.equals(1)){return Math.log2(this.valueOf())/0}const[base,base_log2]=[i,i.valueOf_log()];const gp=maxKey(i._fact);const g=(this._fact[gp]||BigFraction(0)).div(base._fact[gp]);let ret=g.valueOf();for(const p of keys(this._fact,base._fact)){const e=(this._fact[p]||BigFraction(0)).sub((base._fact[p]||BigFraction(0)).mul(g));ret+=e.valueOf()*cachedLog2(p)/base_log2}return ret},red:function(a,b){let base=new Interval(2);if(a!=undefined||b!=undefined){base=new Interval(a,b)}const e=Math.floor(this.valueOf_log(base));return this.div(base.pow(e))},reb:function(a,b){let base=new Interval(2);if(a!=undefined||b!=undefined){base=new Interval(a,b)}const e=Math.round(this.valueOf_log(base));return this.div(base.pow(e))},distance:function(a,b){const q=this.div(a,b);return q.compare(1)<0?q.recip():q},toCents:function(){let ret=0;for(const p in this._fact){ret+=(this._fact[p]||BigFraction(0)).mul(1200).valueOf()*cachedLog2(p)}return ret},benedettiHeight:function(){let ret=1;for(const p in this._fact){ret*=p**this._fact[p].abs().valueOf()}return ret},tenneyHD:function(){let ret=0;for(const p in this._fact){ret+=this._fact[p].abs().valueOf()*cachedLog2(p)}return ret},toMonzo:function(){const gp=maxKey(this._fact);let[ret,isFrac]=[[],true];for(const p of primes()){if(p>gp){break}ret.push(this._fact[p]||BigFraction(0));isFrac&=!this._fact[p]||this._fact[p].d==1}return ret.map(r=>isFrac?Number(r.s*r.n):unBigFraction(r))},inPrimeLimit:function(p){return 2<=p&&Object.keys(this._fact).every(pi=>pi<=p)},primeLimit:function(){return Math.max(2,...Object.keys(this._fact).map(pi=>parseInt(pi)))},inOddLimit:function(o){if(!this.isFrac()){return false}const{n,d}=this.toFracBig();return(n%2n==0n||n<=BigInt(o))&&(d%2n==0n||d<=BigInt(o))},oddLimit:function(){const{n,d}=this.toFrac();return n%2==0?d:d%2==0?n:Math.max(n,d)}};module.exports=Interval},{"./utils.js":13,"big-integer":14,"fraction.js":16,"fraction.js/bigfraction.js":15,"primes-and-factors":20}],8:[function(require,module,exports){const{mod}=require("./utils.js");const ne=require("nearley");const Fraction=require("fraction.js");const Interval=require("./interval.js");const grammar=require("./parser/grammar.js");const{ParseError,OtherError,evalExpr}=require("./parser/eval.js");const{isPythagorean,pySymb,pyNote}=require("./pythagorean.js");const{fjsSymb,fjsNote,fjsSpec,nfjsSpec}=require("./fjs.js");const{edoApprox,edoPy,updnsSymb,updnsNote}=require("./edo.js");const{colorSymb,colorNote}=require("./color.js");const{enNames}=require("./english.js");function expectedSymbols(parser){let symbs=[];const lastColumnIndex=parser.table.length-2;const lastColumn=parser.table[lastColumnIndex];const expectantStates=lastColumn.states.filter(function(state){var nextSymbol=state.rule.symbols[state.dot];return nextSymbol&&typeof nextSymbol!=="string"});const stateStacks=expectantStates.map(function(state){return parser.buildFirstStateStack(state,[])||[state]},parser);stateStacks.forEach(function(stateStack){var state=stateStack[0];var nextSymbol=state.rule.symbols[state.dot];var symbolDisplay=parser.getSymbolDisplay(nextSymbol);symbs.push(symbolDisplay)},parser);symbs=[...new Set(symbs)];symbs.sort((a,b)=>a.length-b.length);if(symbs.length>1){symbs[symbs.length-1]="or "+symbs[symbs.length-1]}return"expected "+(symbs.length>0?"a "+symbs.join(", "):"nothing")}function parseFromRule(str,start){if(start===undefined){start=grammar.ParserStart}else if(!grammar.ParserRules.some(r=>r.name==start)){throw new Error("Invalid start rule: "+start)}const rules=grammar.ParserRules.map(r=>new ne.Rule(r.name,r.symbols,r.postprocess));const parser=new ne.Parser(new ne.Grammar(rules,start));try{parser.feed(str);if(parser.results.length==0){parser.feed("$")}return parser.results}catch(err){if(err.offset!=undefined){if(err.name!="LocatedError"){err=new ParseError(expectedSymbols(parser),err.offset)}throw err.toError(str)}else{throw err}}}function parseMonzo(str){return parseFromRule(str,"monzo")[0]}function parsePySymb(str){return evalExpr(parseFromRule(str,"anyPyIntv")[0]).val}function parsePyNote(str){return evalExpr(parseFromRule(str,"anyPyNote")[0]).val}function parseFJSSymb(str,spec){if(!spec){spec=fjsSpec}const result=parseFromRule(str,"fjsLikeIntv")[0];return evalExpr(result,undefined,{fjsLikeSpecs:[spec]}).val}function parseFJSNote(str,spec){if(!spec){spec=fjsSpec}const result=parseFromRule(str,"fjsLikeNote")[0];return evalExpr(result,undefined,{fjsLikeSpecs:[spec]}).val}function parseUpdnsSymb(edo,str){const result=parseFromRule(str,"upsDnsIntv")[0];return evalExpr(result,undefined,{},{edo:edo}).val}function parseUpdnsNote(edo,str){const result=parseFromRule(str,"upsDnsNote")[0];return evalExpr(result,undefined,{},{edo:edo}).val}function parseColorSymb(str){return evalExpr(parseFromRule(str,"colorIntv")[0]).val}function parseColorNote(str){return evalExpr(parseFromRule(str,"colorNote")[0]).val}function parse(str,opts){let results=parseFromRule(str,"top1");try{for(let i=0;i<results.length;i++){const res=evalExpr(results[i].expr,results[i].refNote,opts);results[i].val=res.val;results[i].prefEDO=res.prefEDO}}catch(err){if(err.offset!=undefined){if(err.name!="LocatedError"){err=new OtherError(err.message,err.offset)}throw err.toError(str)}else{throw err}}if(results.some(d=>d.type[0]=="interval"&&d.type[1]=="symbol")){results=results.filter(d=>!(d.type[0]=="interval"&&d.type[1]!="symbol"))}if(results.some(d=>d.type[0]=="note"&&d.type[1]=="symbol")){results=results.filter(d=>!(d.type[0]=="note"&&d.type[1]!="symbol"))}if(results.length>1){console.dir("Parse was ambiguous on: '"+str+"' - full results:");console.dir(results,{depth:null})}let ret={type:results[0].type[0],intv:results[0].val,refNote:results[0].refNote,prefEDO:results[0].prefEDO};if(ret.intv.toMonzo().length<=1){let e2=ret.intv.expOf(2);if(ret.prefEDO&&e2.mul(ret.prefEDO).d!=1){delete ret.prefEDO}if(ret.prefEDO<2){delete ret.prefEDO}if(!ret.prefEDO&&(e2.d==2||e2.d==3||e2.d==4)){ret.prefEDO=12}if(!ret.prefEDO&&4<e2.d&&e2.d<=60){ret.prefEDO=e2.d}}else{delete ret.prefEDO}return ret}function parseCvt(str,opts){let{type,intv,refNote,prefEDO}=parse(str,opts);let ret={type:type};if(type=="interval"){ret.cents=intv.toCents();ret.intv=intv;ret.ref={hertz:refNote.hertz.valueOf(),intvToA4:refNote.intvToA4};try{ret.ratio=intv.toFrac();let heights={benedetti:intv.benedettiHeight(),tenney:intv.tenneyHD()};ret.height=heights}catch(_){}if(prefEDO){let e2=intv.expOf(2).mul(prefEDO);ret.edoSteps=[e2.s*e2.n,prefEDO]}ret.symb={};let fjs=fjsSymb(intv);let nfjs=fjsSymb(intv,nfjsSpec);if(fjs){ret.symb["FJS"]=fjs}if(nfjs&&nfjs!=fjs){ret.symb["NFJS"]=nfjs}if(prefEDO){let e2=intv.expOf(2).mul(prefEDO);ret.symb["ups-and-downs"]=updnsSymb(prefEDO,e2.s*e2.n).map(s=>s+"\\"+prefEDO)}if(ret.ratio){try{ret.symb["color"]=colorSymb(intv,{verbosity:1})}catch(_){}try{ret.symb["color-abbrev"]=colorSymb(intv,{verbosity:0})}catch(_){}}if(!nfjs&&isPythagorean(intv)){ret.symb["other"]=pySymb(intv)}if(intv.equals(Interval(2).sqrt())){ret.symb["other"]="TT"}const nms=enNames(intv,{prefEDO:prefEDO});if(nms.length>0){ret.english=nms}}if(type=="note"){ret.hertz=refNote.hertz.mul(intv).valueOf();const intvToA4=intv.mul(refNote.intvToA4);const closest12EDO=edoApprox(12,intvToA4);const diffTo12EDO=intvToA4.div(Interval(2).pow(closest12EDO,12)).toCents();ret.tuningMeter=updnsNote(12,mod(closest12EDO+9,12)-9).join("/")+" "+(diffTo12EDO==0?"±":diffTo12EDO>0?"+":"-")+Math.abs(diffTo12EDO).toFixed(1)+"c";ret.intvToRef=intv;if(prefEDO){let e2=intv.expOf(2).mul(prefEDO);ret.edoStepsToRef=[e2.s*e2.n,prefEDO]}ret.ref={hertz:refNote.hertz.valueOf(),intvToA4:refNote.intvToA4};ret.symb={};let fjs=fjsNote(intvToA4);if(fjs){ret.symb["FJS"]=fjs}if(prefEDO){const refEDOStepsToA4=edoPy(prefEDO,refNote.intvToA4);ret.ref.edoStepsToA4=[refEDOStepsToA4,prefEDO];let e2=intv.expOf(2).mul(prefEDO).add(refEDOStepsToA4);ret.symb["ups-and-downs"]=updnsNote(prefEDO,e2.s*e2.n).map(s=>s+"\\"+prefEDO)}if(intv.isFrac()){try{ret.symb["color"]=colorNote(intvToA4,{verbosity:1})}catch(_){}try{ret.symb["color-abbrev"]=colorNote(intvToA4,{verbosity:0})}catch(_){}}}return ret}module["exports"].parseFromRule=parseFromRule;module["exports"].parseMonzo=parseMonzo;module["exports"].parsePySymb=parsePySymb;module["exports"].parsePyNote=parsePyNote;module["exports"].parseFJSSymb=parseFJSSymb;module["exports"].parseFJSNote=parseFJSNote;module["exports"].parseUpdnsSymb=parseUpdnsSymb;module["exports"].parseUpdnsNote=parseUpdnsNote;module["exports"].parseColorSymb=parseColorSymb;module["exports"].parseColorNote=parseColorNote;module["exports"].parse=parse;module["exports"].parseCvt=parseCvt},{"./color.js":2,"./edo.js":3,"./english.js":4,"./fjs.js":5,"./interval.js":7,"./parser/eval.js":9,"./parser/grammar.js":10,"./pythagorean.js":11,"./utils.js":13,"fraction.js":16,nearley:18}],9:[function(require,module,exports){const pf=require("primes-and-factors");const Fraction=require("fraction.js");const Interval=require("../interval.js");const{pyInterval,isPerfectDeg}=require("../pythagorean.js");const{fjsFactor,fjsSpec,nfjsSpec}=require("../fjs.js");const{edoApprox,edoPy,edoHasNeutrals,edoHasSemiNeutrals}=require("../edo.js");const{colorFromSymb,colorFromNote}=require("../color.js");class LocatedError extends Error{constructor(kind,message,loc){super(message);this.name="LocatedError";this.kind=kind;this.offset=loc}toError(str){const errStr="\n"+str+"\n"+" ".repeat(this.offset)+"^\n"+this.kind+": "+this.message;let err=new Error(errStr);err.kind=this.kind;err.offset=this.offset;err.srcStr=str;return err}}class ParseError extends LocatedError{constructor(message,loc){super("Parse error",message,loc)}}class OtherError extends LocatedError{constructor(message,loc){super("Error",message,loc)}}const defaultRefNote={intvToA4:Interval(1),hertz:Interval(440)};function cbnEDOs(a,b){return a&&b?Fraction(1,a).gcd(1,b).d:undefined}function evalExpr(e,r,opts,state){if(!state){state={}}let fjsLikeSpecs=[fjsSpec,nfjsSpec];if(opts&&Array.isArray(opts.fjsLikeSpecs)&&opts.fjsLikeSpecs.length>0){fjsLikeSpecs=opts.fjsLikeSpecs}if(Array.isArray(e)){if(Array.isArray(e[0])){console.log("evalExpr: nested arrays");return evalExpr(e[0],r,opts,state)}if(e[0]=="!refIntvToA4"){return{val:(r||defaultRefNote).intvToA4}}else if(e[0]=="!refHertz"){return{val:(r||defaultRefNote).hertz}}else if(e[0]=="!med"){const arg0=evalExpr(e[1],r,opts,state).val;const arg1=evalExpr(e[2],r,opts,state).val;const loc=e[3];if(arg0.isFrac()&&arg1.isFrac()){return{val:arg0.med(arg1)}}else{throw new OtherError("One of the arguments to `med` is not a fraction",loc)}}else if(e[0]=="!cents"){const arg0=Fraction(evalExpr(e[1],r,opts,state).val).div(1200);return{val:Interval(2).pow(arg0),prefEDO:48%arg0.d==0?24%arg0.d==0?12%arg0.d==0?12:24:48:undefined}}else if(e[0]=="!edoApprox"){const arg0=evalExpr(e[1],r,opts,state).val;const arg1=evalExpr(e[2],r,opts,state).val;return{val:Interval(2).pow(edoApprox(arg1,arg0)).pow(1,arg1),prefEDO:arg1}}else if(e[0]=="!inEDO"){const arg1=evalExpr(e[2],r,opts,state).val;state.edo=arg1;const arg0=evalExpr(e[1],r,opts,state).val;return{val:Interval(2).pow(arg0).pow(1,arg1),prefEDO:arg1}}else if(e[0]=="!edoTT"){const loc=e[1];if(state.edo%2==0){return{val:state.edo/2}}else{throw new OtherError(state.edo+"-EDO does not have a tritone",loc)}}else if(e[0]=="!edoPy"){const arg0=evalExpr(e[1],r,opts,state).val;const loc=e[2];try{return{val:edoPy(state.edo,arg0)}}catch(err){throw new OtherError(err.message,loc)}}else if(e[0]=="!perfPyIntv"){const[d,loc]=[e[1],e[2]];if(isPerfectDeg(d)){return{val:pyInterval(d,0)}}else{throw new OtherError("P"+d+" is not a valid interval ("+d+" is not a perfect scale degree)",loc)}}else if(e[0]=="!nonPerfPyIntv"){const[d,o,q,loc]=[e[1],e[2],e[3],e[4]];if(!isPerfectDeg(d)){return{val:pyInterval(d,o)}}else{throw new OtherError(q+d+" is not a valid interval ("+d+" is a perfect scale degree)",loc)}}else if(e[0]=="!augOrDimPyIntv"){const[d,a,b,loc]=[e[1],e[2],e[3],e[4]];const o=Fraction(a,b);const o_np=o.add(o.s,2);return{val:isPerfectDeg(d)?pyInterval(d,o):pyInterval(d,o_np)}}else if(e[0]=="!ensureNo2Or3"){const[k,loc]=[e[1],e[2]];if(k.hasExp(2)||k.hasExp(3)){throw new OtherError("FJS accidental cannot contain a factor or 2 or 3",loc)}return{val:k}}else if(e[0]=="!fjsFactor"){const arg0=evalExpr(e[1],r,opts,state).val;const spec=e[2];return{val:fjsFactor(arg0,spec)}}else if(e[0]=="!fjsPy"){const[f,loc]=[e[1],e[2]];const spec=fjsLikeSpecs[0];return evalExpr(f(spec),r,opts,state)}else if(e[0]=="!fjsNPy"){const[f,loc]=[e[1],e[2]];const spec=fjsLikeSpecs.find(spec=>spec.hasNeutrals);if(spec){return evalExpr(f(spec),r,opts,state)}else{throw new OtherError("Neutral FJS-like interval not supported",loc)}}else if(e[0]=="!fjsSNPy"){const[f,loc]=[e[1],e[2]];const spec=fjsLikeSpecs.find(spec=>spec.hasSemiNeutrals);if(spec){return evalExpr(f(spec),r,opts,state)}else{throw new OtherError("Semi-neutral FJS-like interval not supported",loc)}}else if(e[0]=="!clrIntv"){const cs=evalExpr(e[1],r,opts,state).val;const m=evalExpr(e[2],r,opts,state).val;const pps=e[3].map(ei=>evalExpr(ei,r,opts,state).val);const ps=pps.map(pp=>pp.factors()[0][0]);const d=evalExpr(e[4],r,opts,state).val;const loc=e[5];if(pps.length>0&&!ps.every((p,i)=>i==0||p<=ps[i-1])){throw new OtherError("Invalid color prefix (non-decreasing)",loc)}if(pps.length>0&&!pps.every((pp,i)=>i==0||ps[i]!=ps[i-1]||pp.equals(pps[i-1]))){throw new OtherError("Invalid color prefix (bad repetition)",loc)}const i=pps.reduce((a,b)=>a.mul(b),Interval(1));return{val:colorFromSymb(cs,m,i,d)}}else if(e[0]=="!clrNote"){const pps=e[1].map(ei=>evalExpr(ei,r,opts,state).val);const ps=pps.map(pp=>pp.factors()[0][0]);const[pyi,loc]=[evalExpr(e[2],r,opts,state).val,e[3]];if(pps.length>0&&!ps.every((p,i)=>i==0||p<=ps[i-1])){throw new OtherError("Invalid color prefix (non-decreasing)",loc)}if(pps.length>0&&!pps.every((pp,i)=>i==0||ps[i]!=ps[i-1]||pp.equals(pps[i-1]))){throw new OtherError("Invalid color prefix (bad repetition)",loc)}const i=pps.reduce((a,b)=>a.mul(b),Interval(1));return{val:colorFromNote(i,pyi)}}else if(e[0]=="!aclrPP"){const[p,x,loc]=[e[1],e[2],e[3]];if(p==1){return{val:Interval(11).pow(x)}}if(p==3){return{val:Interval(13).pow(x)}}if(!pf.isPrime(p)){throw new OtherError("Expected a prime number",loc)}return{val:Interval(p).pow(x)}}else if(e[0]=="!clrMPs"){const[ps,loc]=[e[1].map(ei=>evalExpr(ei,r,opts,state).val),e[2]];if(ps.length>0&&!ps.every((x,i)=>i==0||x<=ps[i-1])){throw new OtherError("Invalid color multi prefix (non-decreasing)",loc)}return{val:ps.reduce((a,b)=>a*b,1)}}else if(e[0]=="!clrGenPP"){const[p,loc]=[e[1],e[2]];if(!pf.isPrime(p)){throw new OtherError(p+" is not a prime number",loc)}return{val:Interval(p)}}else if(e[0][0]=="!"){throw new LocatedError("Panic","command "+e[0]+" not defined!",0)}const args=e.slice(1).map(ei=>evalExpr(ei,r,opts,state));if(e[0]=="+"){return{val:args[0].val+args[1].val}}if(e[0]=="-"){return{val:args[0].val-args[1].val}}if(e[0]=="*"){return{val:args[0].val*args[1].val}}if(e[0]=="/"){return{val:args[0].val/args[1].val}}let ret={val:args[0].val[e[0]](...args.slice(1).map(argi=>argi.val)),prefEDO:args.map(argi=>argi.prefEDO).reduce(cbnEDOs)};if(e[0]=="pow"){ret.prefEDO=args[0].prefEDO}if(e[0]=="red"||e[0]=="reb"){if(args[1]&&args[1].equals&&args[1].equals(2)){ret.prefEDO=args[0].prefEDO}else{ret.prefEDO=undefined}}return ret}if(e instanceof Interval&&e.toMonzo().length<=1){return{val:e,prefEDO:e.expOf(2).d}}return{val:e}}module["exports"].LocatedError=LocatedError;module["exports"].ParseError=ParseError;module["exports"].OtherError=OtherError;module["exports"].defaultRefNote=defaultRefNote;module["exports"].evalExpr=evalExpr},{"../color.js":2,"../edo.js":3,"../fjs.js":5,"../interval.js":7,"../pythagorean.js":11,"fraction.js":16,"primes-and-factors":20}],10:[function(require,module,exports){(function(){function id(x){return x[0]}const Fraction=require("fraction.js");const Interval=require("../interval.js");const{pyInterval,pyNote,pyRedDeg,baseNoteIntvToA}=require("../pythagorean.js");const{fjsFactor,fjsSpec,nfjsSpec}=require("../fjs.js");const{edoPy}=require("../edo.js");const{ParseError,OtherError,defaultRefNote,evalExpr}=require("./eval.js");var grammar={Lexer:undefined,ParserRules:[{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","wschar"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"_",symbols:["_$ebnf$1"],postprocess:function(d){return null}},{name:"__$ebnf$1",symbols:["wschar"]},{name:"__$ebnf$1",symbols:["__$ebnf$1","wschar"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"__",symbols:["__$ebnf$1"],postprocess:function(d){return null}},{name:"wschar",symbols:[/[ \t\n\v\f]/],postprocess:id},{name:"top1",symbols:["_","top2","_"],postprocess:function(d){let d1=Object.assign({},d[1]);d1.refNote=defaultRefNote;return d1}},{name:"top1$string$1",symbols:[{literal:"w"},{literal:"h"},{literal:"e"},{literal:"r"},{literal:"e"}],postprocess:function joiner(d){return d.join("")}},{name:"top1$ebnf$1",symbols:["hertz"],postprocess:id},{name:"top1$ebnf$1",symbols:[],postprocess:function(d){return null}},{name:"top1",symbols:["_","top2","__","top1$string$1","__","pyNote","_",{literal:"="},"_","decimal","top1$ebnf$1","_"],postprocess:function(d){let d1=Object.assign({},d[1]);d1.refNote={};d1.refNote.intvToA4=evalExpr(d[5],defaultRefNote).val;d1.refNote.hertz=Interval(d[9]);return d1}},{name:"top1$string$2",symbols:[{literal:"w"},{literal:"h"},{literal:"e"},{literal:"r"},{literal:"e"}],postprocess:function joiner(d){return d.join("")}},{name:"top1",symbols:["_","top2","__","top1$string$2","__","pyNote","_",{literal:"="},"_","eqPyNote","_",{literal:"\\"},"_","posInt","_"],postprocess:function(d){let d1=Object.assign({},d[1]);const d5=evalExpr(d[5],defaultRefNote).val;const d9=d[9](d5);const d13=parseInt(d[13]);d1.refNote={};d1.refNote.intvToA4=d9;d1.refNote.hertz=Interval(2).pow(edoPy(d13,d9),d13).mul(440);return d1}},{name:"top2",symbols:["intvSExpr1"],postprocess:d=>({type:["interval","symbol"],expr:d[0]})},{name:"top2",symbols:["intvMExpr1"],postprocess:d=>({type:["interval","multiplicative"],expr:d[0]})},{name:"top2",symbols:["intvAExpr1"],postprocess:d=>({type:["interval","additive"],expr:d[0]})},{name:"top2",symbols:["noteSExpr1"],postprocess:d=>({type:["note","symbol"],expr:d[0]})},{name:"top2",symbols:["noteMExpr1"],postprocess:d=>({type:["note","multiplicative"],expr:d[0]})},{name:"top2",symbols:["noteAExpr1"],postprocess:d=>({type:["note","additive"],expr:d[0]})},{name:"eqPyNote",symbols:["pyNote"],postprocess:(d,loc,_)=>function(ref){let d0=evalExpr(d[0],defaultRefNote).val;if(!ref||!ref.equals(d0)){throw new ParseError("expected "+pyNote(ref),loc)}return d0}},{name:"intvMExpr1",symbols:["intvMExpr1","_",{literal:"*"},"_","intvMExpr2"],postprocess:d=>["mul",d[0],d[4]]},{name:"intvMExpr1",symbols:["intvMExpr1","_",{literal:"/"},"_","intvMExpr2"],postprocess:d=>["div",d[0],d[4]]},{name:"intvMExpr1",symbols:["noteMExpr1","_",{literal:"/"},"_","noteMExpr2"],postprocess:d=>["div",d[0],d[4]]},{name:"intvMExpr1",symbols:["intvMExpr2"],postprocess:id},{name:"intvMExpr2",symbols:["intvMExpr3","_",{literal:"^"},"_","frcExpr3"],postprocess:d=>["pow",d[0],d[4]]},{name:"intvMExpr2$string$1",symbols:[{literal:"s"},{literal:"q"},{literal:"r"},{literal:"t"}],postprocess:function joiner(d){return d.join("")}},{name:"intvMExpr2",symbols:["intvMExpr2$string$1","_",{literal:"("},"_","intvMExpr1","_",{literal:")"}],postprocess:d=>["sqrt",d[4]]},{name:"intvMExpr2$string$2",symbols:[{literal:"r"},{literal:"o"},{literal:"o"},{literal:"t"}],postprocess:function joiner(d){return d.join("")}},{name:"intvMExpr2",symbols:["intvMExpr2$string$2","posInt","_",{literal:"("},"_","intvMExpr1","_",{literal:")"}],postprocess:d=>["root",d[5],d[1]]},{name:"intvMExpr2$string$3",symbols:[{literal:"r"},{literal:"e"},{literal:"d"}],postprocess:function joiner(d){return d.join("")}},{name:"intvMExpr2",symbols:["intvMExpr2$string$3","_",{literal:"("},"_","intvMExpr1","_",{literal:")"}],postprocess:d=>["red",d[4]]},{name:"intvMExpr2$string$4",symbols:[{literal:"r"},{literal:"e"},{literal:"b"}],postprocess:function joiner(d){return d.join("")}},{name:"intvMExpr2",symbols:["intvMExpr2$string$4","_",{literal:"("},"_","intvMExpr1","_",{literal:")"}],postprocess:d=>["reb",d[4]]},{name:"intvMExpr2$string$5",symbols:[{literal:"r"},{literal:"e"},{literal:"d"}],postprocess:function joiner(d){return d.join("")}},{name:"intvMExpr2",symbols:["intvMExpr2$string$5","_",{literal:"("},"_","intvMExpr1","_",{literal:","},"_","intvMExpr1","_",{literal:")"}],postprocess:d=>["red",d[4],d[8]]},{name:"intvMExpr2$string$6",symbols:[{literal:"r"},{literal:"e"},{literal:"b"}],postprocess:function joiner(d){return d.join("")}},{name:"intvMExpr2",symbols:["intvMExpr2$string$6","_",{literal:"("},"_","intvMExpr1","_",{literal:","},"_","intvMExpr1","_",{literal:")"}],postprocess:d=>["reb",d[4],d[8]]},{name:"intvMExpr2$string$7",symbols:[{literal:"m"},{literal:"e"},{literal:"d"}],postprocess:function joiner(d){return d.join("")}},{name:"intvMExpr2",symbols:["intvMExpr2$string$7","_",{literal:"("},"_","intvMExpr1","_",{literal:","},"_","intvMExpr1","_",{literal:")"}],postprocess:(d,loc,_)=>["!med",d[4],d[8],loc]},{name:"intvMExpr2$string$8",symbols:[{literal:"a"},{literal:"p"},{literal:"p"},{literal:"r"},{literal:"o"},{literal:"x"}],postprocess:function joiner(d){return d.join("")}},{name:"intvMExpr2",symbols:["intvMExpr2$string$8","_",{literal:"("},"_","intvMExpr1","_",{literal:","},"_","posInt","_",{literal:")"}],postprocess:d=>["!edoApprox",d[4],parseInt(d[8])]},{name:"intvMExpr2",symbols:["intvSymbol"],postprocess:id},{name:"intvMExpr2",symbols:["intvMExpr3"],postprocess:id},{name:"intvMExpr3",symbols:["posInt"],postprocess:d=>Interval(d[0])},{name:"intvMExpr3",symbols:["int","_",{literal:"\\"},"_","posInt"],postprocess:d=>["!inEDO",parseInt(d[0]),parseInt(d[4])]},{name:"intvMExpr3",symbols:["intvMEDOExpr3","_",{literal:"\\"},"_","posInt"],postprocess:d=>["!inEDO",d[0],parseInt(d[4])]},{name:"intvMExpr3",symbols:[{literal:"("},"_","intvMExpr1","_",{literal:")"}],postprocess:d=>d[2]},{name:"noteMExpr1",symbols:["noteMExpr1","_",{literal:"*"},"_","intvMExpr2"],postprocess:d=>["mul",d[0],d[4]]},{name:"noteMExpr1",symbols:["intvMExpr1","_",{literal:"*"},"_","noteMExpr2"],postprocess:d=>["mul",d[0],d[4]]},{name:"noteMExpr1",symbols:["noteMExpr1","_",{literal:"/"},"_","intvMExpr2"],postprocess:d=>["div",d[0],d[4]]},{name:"noteMExpr1",symbols:["noteMExpr2"],postprocess:id},{name:"noteMExpr2$string$1",symbols:[{literal:"a"},{literal:"p"},{literal:"p"},{literal:"r"},{literal:"o"},{literal:"x"}],postprocess:function joiner(d){return d.join("")}},{name:"noteMExpr2",symbols:["noteMExpr2$string$1","_",{literal:"("},"_","noteMExpr1","_",{literal:","},"_","posInt","_",{literal:")"}],postprocess:d=>["!edoApprox",d[4],parseInt(d[8])]},{name:"noteMExpr2",symbols:["noteSymbol"],postprocess:id},{name:"noteMExpr2",symbols:["noteMEDOExpr2","_",{literal:"\\"},"_","posInt"],postprocess:d=>["!inEDO",d[0],parseInt(d[4])]},{name:"noteMExpr2",symbols:["decExpr3","hertz"],postprocess:d=>["div",Interval(d[0]),["!refHertz"]]},{name:"noteMExpr2",symbols:[{literal:"("},"_","noteMExpr1","_",{literal:")"}],postprocess:d=>d[2]},{name:"intvAExpr1",symbols:["intvAExpr1","_",{literal:"+"},"_","intvAExpr2"],postprocess:d=>["mul",d[0],d[4]]},{name:"intvAExpr1",symbols:["intvAExpr1","_",{literal:"-"},"_","intvAExpr2"],postprocess:d=>["div",d[0],d[4]]},{name:"intvAExpr1",symbols:["noteAExpr1","_",{literal:"-"},"_","noteAExpr2"],postprocess:d=>["div",d[0],d[4]]},{name:"intvAExpr1",symbols:["intvAExpr2"],postprocess:id},{name:"intvAExpr2",symbols:["intvAExpr3","_",{literal:"x"},"_","frcExpr2"],postprocess:d=>["pow",d[0],d[4]]},{name:"intvAExpr2",symbols:["frcExpr2","_",{literal:"x"},"_","intvAExpr3"],postprocess:d=>["pow",d[4],d[0]]},{name:"intvAExpr2",symbols:["intvAExpr3"],postprocess:id},{name:"intvAExpr3$string$1",symbols:[{literal:"c"},{literal:"e"},{literal:"n"},{literal:"t"},{literal:"s"}],postprocess:function joiner(d){return d.join("")}},{name:"intvAExpr3",symbols:["intvAExpr3$string$1","_",{literal:"("},"_","intvMExpr1","_",{literal:")"}],postprocess:d=>d[4]},{name:"intvAExpr3$string$2",symbols:[{literal:"r"},{literal:"e"},{literal:"d"}],postprocess:function joiner(d){return d.join("")}},{name:"intvAExpr3",symbols:["intvAExpr3$string$2","_",{literal:"("},"_","intvAExpr1","_",{literal:")"}],postprocess:d=>["red",d[4]]},{name:"intvAExpr3$string$3",symbols:[{literal:"r"},{literal:"e"},{literal:"b"}],postprocess:function joiner(d){return d.join("")}},{name:"intvAExpr3",symbols:["intvAExpr3$string$3","_",{literal:"("},"_","intvAExpr1","_",{literal:")"}],postprocess:d=>["reb",d[4]]},{name:"intvAExpr3$string$4",symbols:[{literal:"r"},{literal:"e"},{literal:"d"}],postprocess:function joiner(d){return d.join("")}},{name:"intvAExpr3",symbols:["intvAExpr3$string$4","_",{literal:"("},"_","intvAExpr1","_",{literal:","},"_","intvMExpr1","_",{literal:")"}],postprocess:d=>["red",d[4],d[8]]},{name:"intvAExpr3$string$5",symbols:[{literal:"r"},{literal:"e"},{literal:"b"}],postprocess:function joiner(d){return d.join("")}},{name:"intvAExpr3",symbols:["intvAExpr3$string$5","_",{literal:"("},"_","intvAExpr1","_",{literal:","},"_","intvMExpr1","_",{literal:")"}],postprocess:d=>["reb",d[4],d[8]]},{name:"intvAExpr3$string$6",symbols:[{literal:"a"},{literal:"p"},{literal:"p"},{literal:"r"},{literal:"o"},{literal:"x"}],postprocess:function joiner(d){return d.join("")}},{name:"intvAExpr3",symbols:["intvAExpr3$string$6","_",{literal:"("},"_","intvAExpr1","_",{literal:","},"_","posInt","_",{literal:")"}],postprocess:d=>["!edoApprox",d[4],parseInt(d[8])]},{name:"intvAExpr3",symbols:["intvSymbol"],postprocess:id},{name:"intvAExpr3",symbols:["intvAExpr4"],postprocess:id},{name:"intvAExpr4",symbols:["decExpr3",{literal:"c"}],postprocess:d=>["!cents",d[0]]},{name:"intvAExpr4",symbols:["intvAEDOExpr3","_",{literal:"\\"},"_","posInt"],postprocess:d=>["!inEDO",d[0],parseInt(d[4])]},{name:"intvAExpr4",symbols:[{literal:"("},"_","intvAExpr1","_",{literal:")"}],postprocess:d=>d[2]},{name:"noteAExpr1",symbols:["noteAExpr1","_",{literal:"+"},"_","intvAExpr2"],postprocess:d=>["mul",d[0],d[4]]},{name:"noteAExpr1",symbols:["intvAExpr1","_",{literal:"+"},"_","noteAExpr2"],postprocess:d=>["mul",d[0],d[4]]},{name:"noteAExpr1",symbols:["noteAExpr1","_",{literal:"-"},"_","intvAExpr2"],postprocess:d=>["div",d[0],d[4]]},{name:"noteAExpr1",symbols:["noteAExpr2"],postprocess:id},{name:"noteAExpr2$string$1",symbols:[{literal:"a"},{literal:"p"},{literal:"p"},{literal:"r"},{literal:"o"},{literal:"x"}],postprocess:function joiner(d){return d.join("")}},{name:"noteAExpr2",symbols:["noteAExpr2$string$1","_",{literal:"("},"_","noteAExpr1","_",{literal:","},"_","posInt","_",{literal:")"}],postprocess:d=>["!edoApprox",d[4],parseInt(d[8])]},{name:"noteAExpr2",symbols:["noteSymbol"],postprocess:id},{name:"noteAExpr2",symbols:["noteAEDOExpr2","_",{literal:"\\"},"_","posInt"],postprocess:d=>["!inEDO",d[0],parseInt(d[4])]},{name:"noteAExpr2",symbols:[{literal:"("},"_","noteAExpr1","_",{literal:")"}],postprocess:d=>d[2]},{name:"intvMEDOExpr1",symbols:["intvMEDOExpr1","_",{literal:"*"},"_","intvMEDOExpr2"],postprocess:d=>["+",d[0],d[4]]},{name:"intvMEDOExpr1",symbols:["intvMEDOExpr1","_",{literal:"/"},"_","intvMEDOExpr2"],postprocess:d=>["-",d[0],d[4]]},{name:"intvMEDOExpr1",symbols:["noteMEDOExpr1","_",{literal:"/"},"_","noteMEDOExpr2"],postprocess:d=>["-",d[0],d[4]]},{name:"intvMEDOExpr1",symbols:["intvMEDOExpr2"],postprocess:id},{name:"intvMEDOExpr2",symbols:["intvMEDOExpr3","_",{literal:"^"},"_","intExpr1"],postprocess:d=>["*",d[0],d[4]]},{name:"intvMEDOExpr2",symbols:["intvMEDOExpr3"],postprocess:id},{name:"intvMEDOExpr3",symbols:["upsDnsIntv"],postprocess:id},{name:"intvMEDOExpr3$string$1",symbols:[{literal:"T"},{literal:"T"}],postprocess:function joiner(d){return d.join("")}},{name:"intvMEDOExpr3",symbols:["intvMEDOExpr3$string$1"],postprocess:(d,loc,_)=>["!edoTT",loc]},{name:"intvMEDOExpr3",symbols:[{literal:"("},"_","intvMEDOExpr1","_",{literal:")"}],postprocess:d=>d[2]},{name:"noteMEDOExpr1",symbols:["noteMEDOExpr1","_",{literal:"*"},"_","intvMEDOExpr2"],postprocess:d=>["+",d[0],d[4]]},{name:"noteMEDOExpr1",symbols:["intvMEDOExpr1","_",{literal:"*"},"_","noteMEDOExpr2"],postprocess:d=>["+",d[0],d[4]]},{name:"noteMEDOExpr1",symbols:["noteMEDOExpr1","_",{literal:"/"},"_","intvMEDOExpr2"],postprocess:d=>["-",d[0],d[4]]},{name:"noteMEDOExpr1",symbols:["noteMEDOExpr2"],postprocess:id},{name:"noteMEDOExpr2",symbols:["upsDnsNote"],postprocess:id},{name:"noteMEDOExpr2",symbols:[{literal:"("},"_","noteMEDOExpr1","_",{literal:")"}],postprocess:d=>d[2]},{name:"intvAEDOExpr1",symbols:["intvAEDOExpr1","_",{literal:"+"},"_","intvAEDOExpr2"],postprocess:d=>["+",d[0],d[4]]},{name:"intvAEDOExpr1",symbols:["intvAEDOExpr1","_",{literal:"-"},"_","intvAEDOExpr2"],postprocess:d=>["-",d[0],d[4]]},{name:"intvAEDOExpr1",symbols:["noteAEDOExpr1","_",{literal:"-"},"_","noteAEDOExpr2"],postprocess:d=>["-",d[0],d[4]]},{name:"intvAEDOExpr1",symbols:["intvAEDOExpr2"],postprocess:id},{name:"intvAEDOExpr2",symbols:["intvAEDOExpr3","_",{literal:"x"},"_","intExpr1"],postprocess:d=>["*",d[0],d[4]]},{name:"intvAEDOExpr2",symbols:["intExpr1","_",{literal:"x"},"_","intvAEDOExpr3"],postprocess:d=>["*",d[0],d[4]]},{name:"intvAEDOExpr2",symbols:["intvAEDOExpr3"],postprocess:id},{name:"intvAEDOExpr3",symbols:[{literal:"-"},"_","intvAEDOExpr4"],postprocess:d=>["-",0,d[2]]},{name:"intvAEDOExpr3",symbols:["intvAEDOExpr4"],postprocess:id},{name:"intvAEDOExpr4",symbols:["nonNegInt"],postprocess:d=>parseInt(d[0])},{name:"intvAEDOExpr4",symbols:["upsDnsIntv"],postprocess:id},{name:"intvAEDOExpr4$string$1",symbols:[{literal:"T"},{literal:"T"}],postprocess:function joiner(d){return d.join("")}},{name:"intvAEDOExpr4",symbols:["intvAEDOExpr4$string$1"],postprocess:d=>["!edoTT"]},{name:"intvAEDOExpr4",symbols:[{literal:"("},"_","intvAEDOExpr1","_",{literal:")"}],postprocess:d=>d[2]},{name:"noteAEDOExpr1",symbols:["noteAEDOExpr1","_",{literal:"+"},"_","intvAEDOExpr2"],postprocess:d=>["+",d[0],d[4]]},{name:"noteAEDOExpr1",symbols:["intvAEDOExpr1","_",{literal:"+"},"_","noteAEDOExpr2"],postprocess:d=>["+",d[0],d[4]]},{name:"noteAEDOExpr1",symbols:["noteAEDOExpr1","_",{literal:"-"},"_","intvAEDOExpr2"],postprocess:d=>["-",d[0],d[4]]},{name:"noteAEDOExpr1",symbols:["noteAEDOExpr2"],postprocess:id},{name:"noteAEDOExpr2",symbols:["upsDnsNote"],postprocess:id},{name:"noteAEDOExpr2",symbols:[{literal:"("},"_","noteAEDOExpr1","_",{literal:")"}],postprocess:d=>d[2]},{name:"intvSExpr1$string$1",symbols:[{literal:"r"},{literal:"e"},{literal:"d"}],postprocess:function joiner(d){return d.join("")}},{name:"intvSExpr1",symbols:["intvSExpr1$string$1","_",{literal:"("},"_","intvSExpr1","_",{literal:")"}],postprocess:d=>["red",d[4]]},{name:"intvSExpr1$string$2",symbols:[{literal:"r"},{literal:"e"},{literal:"b"}],postprocess:function joiner(d){return d.join("")}},{name:"intvSExpr1",symbols:["intvSExpr1$string$2","_",{literal:"("},"_","intvSExpr1","_",{literal:")"}],postprocess:d=>["reb",d[4]]},{name:"intvSExpr1$string$3",symbols:[{literal:"r"},{literal:"e"},{literal:"d"}],postprocess:function joiner(d){return d.join("")}},{name:"intvSExpr1",symbols:["intvSExpr1$string$3","_",{literal:"("},"_","intvSExpr1","_",{literal:","},"_","intvMExpr1","_",{literal:")"}],postprocess:d=>["red",d[4],d[8]]},{name:"intvSExpr1$string$4",symbols:[{literal:"r"},{literal:"e"},{literal:"b"}],postprocess:function joiner(d){return d.join("")}},{name:"intvSExpr1",symbols:["intvSExpr1$string$4","_",{literal:"("},"_","intvSExpr1","_",{literal:","},"_","intvMExpr1","_",{literal:")"}],postprocess:d=>["reb",d[4],d[8]]},{name:"intvSExpr1$string$5",symbols:[{literal:"a"},{literal:"p"},{literal:"p"},{literal:"r"},{literal:"o"},{literal:"x"}],postprocess:function joiner(d){return d.join("")}},{name:"intvSExpr1",symbols:["intvSExpr1$string$5","_",{literal:"("},"_","intvSExpr1","_",{literal:","},"_","posInt","_",{literal:")"}],postprocess:d=>["!edoApprox",d[4],parseInt(d[8])]},{name:"intvSExpr1",symbols:["intvSExpr2"],postprocess:id},{name:"intvSExpr2",symbols:["intvSymbol"],postprocess:id},{name:"intvSExpr2",symbols:["int","_",{literal:"\\"},"_","posInt"],postprocess:d=>["!inEDO",parseInt(d[0]),parseInt(d[4])]},{name:"intvSExpr2",symbols:["upsDnsIntv","_",{literal:"\\"},"_","posInt"],postprocess:d=>["!inEDO",d[0],parseInt(d[4])]},{name:"intvSExpr2$string$1",symbols:[{literal:"T"},{literal:"T"}],postprocess:function joiner(d){return d.join("")}},{name:"intvSExpr2",symbols:["intvSExpr2$string$1","_",{literal:"\\"},"_","posInt"],postprocess:d=>["!inEDO",["!edoTT"],parseInt(d[4])]},{name:"intvSExpr2",symbols:[{literal:"("},"_","intvSExpr1","_",{literal:")"}],postprocess:d=>d[2]},{name:"noteSExpr1$string$1",symbols:[{literal:"a"},{literal:"p"},{literal:"p"},{literal:"r"},{literal:"o"},{literal:"x"}],postprocess:function joiner(d){return d.join("")}},{name:"noteSExpr1",symbols:["noteSExpr1$string$1","_",{literal:"("},"_","noteSExpr1","_",{literal:","},"_","posInt","_",{literal:")"}],postprocess:d=>["!edoApprox",d[4],parseInt(d[8])]},{name:"noteSExpr1",symbols:["noteSymbol"],postprocess:id},{name:"noteSExpr1",symbols:["upsDnsNote","_",{literal:"\\"},"_","posInt"],postprocess:d=>["!inEDO",d[0],parseInt(d[4])]},{name:"noteSExpr1",symbols:[{literal:"("},"_","noteSExpr1","_",{literal:")"}],postprocess:d=>d[2]},{name:"intvSymbol",symbols:["anyPyIntv"],postprocess:id},{name:"intvSymbol",symbols:["strictFJSLikeIntv"],postprocess:id},{name:"intvSymbol$string$1",symbols:[{literal:"F"},{literal:"J"},{literal:"S"}],postprocess:function joiner(d){return d.join("")}},{name:"intvSymbol",symbols:["intvSymbol$string$1","_",{literal:"("},"_","fjsIntv","_",{literal:")"}],postprocess:d=>d[4]},{name:"intvSymbol$string$2",symbols:[{literal:"N"},{literal:"F"},{literal:"J"},{literal:"S"}],postprocess:function joiner(d){return d.join("")}},{name:"intvSymbol",symbols:["intvSymbol$string$2","_",{literal:"("},"_","nfjsIntv","_",{literal:")"}],postprocess:d=>d[4]},{name:"intvSymbol",symbols:["colorIntv"],postprocess:id},{name:"intvSymbol",symbols:["monzo"],postprocess:id},{name:"intvSymbol$string$3",symbols:[{literal:"T"},{literal:"T"}],postprocess:function joiner(d){return d.join("")}},{name:"intvSymbol",symbols:["intvSymbol$string$3"],postprocess:_=>Interval(2).sqrt()},{name:"noteSymbol",symbols:["anyPyNote"],postprocess:id},{name:"noteSymbol",symbols:["strictFJSLikeNote"],postprocess:id},{name:"noteSymbol$string$1",symbols:[{literal:"F"},{literal:"J"},{literal:"S"}],postprocess:function joiner(d){return d.join("")}},{name:"noteSymbol",symbols:["noteSymbol$string$1","_",{literal:"("},"_","fjsNote","_",{literal:")"}],postprocess:d=>d[4]},{name:"noteSymbol$string$2",symbols:[{literal:"N"},{literal:"F"},{literal:"J"},{literal:"S"}],postprocess:function joiner(d){return d.join("")}},{name:"noteSymbol",symbols:["noteSymbol$string$2","_",{literal:"("},"_","nfjsNote","_",{literal:")"}],postprocess:d=>d[4]},{name:"noteSymbol",symbols:["colorNote"],postprocess:id},{name:"monzo",symbols:[/[\[\|]/,"monzoElts",/[\]>⟩]/],postprocess:d=>Interval(d[1])},{name:"monzoElts",symbols:["_"],postprocess:d=>[]},{name:"monzoElts",symbols:["_","frcExpr2","_"],postprocess:d=>[d[1]]},{name:"monzoElts",symbols:["_","monzoEltsCommas","_"],postprocess:d=>d[1]},{name:"monzoElts",symbols:["_","monzoEltsSpaces","_"],postprocess:d=>d[1]},{name:"monzoEltsCommas",symbols:["frcExpr2","_",{literal:","},"_","frcExpr2"],postprocess:d=>[d[0],d[4]]},{name:"monzoEltsCommas",symbols:["frcExpr2","_",{literal:","},"_","monzoEltsCommas"],postprocess:d=>[d[0]].concat(d[4])},{name:"monzoEltsSpaces",symbols:["frcExpr2","__","frcExpr2"],postprocess:d=>[d[0],d[2]]},{name:"monzoEltsSpaces",symbols:["frcExpr2","__","monzoEltsSpaces"],postprocess:d=>[d[0]].concat(d[2])},{name:"anyPyIntv",symbols:["pyIntv"],postprocess:id},{name:"anyPyIntv",symbols:["npyIntv"],postprocess:id},{name:"anyPyIntv",symbols:["snpyIntv"],postprocess:id},{name:"pyIntv",symbols:[{literal:"P"},"pyDeg"],postprocess:(d,loc,_)=>["!perfPyIntv",d[1],loc]},{name:"pyIntv",symbols:[{literal:"M"},"pyDeg"],postprocess:(d,loc,_)=>["!nonPerfPyIntv",d[1],Fraction(1,2),"M",loc]},{name:"pyIntv",symbols:[{literal:"m"},"pyDeg"],postprocess:(d,loc,_)=>["!nonPerfPyIntv",d[1],Fraction(-1,2),"m",loc]},{name:"pyIntv$ebnf$1",symbols:[{literal:"A"}]},{name:"pyIntv$ebnf$1",symbols:["pyIntv$ebnf$1",{literal:"A"}],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"pyIntv",symbols:["pyIntv$ebnf$1","pyDeg"],postprocess:(d,loc,_)=>["!augOrDimPyIntv",d[1],d[0].length,1,loc]},{name:"pyIntv$ebnf$2",symbols:[{literal:"d"}]},{name:"pyIntv$ebnf$2",symbols:["pyIntv$ebnf$2",{literal:"d"}],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"pyIntv",symbols:["pyIntv$ebnf$2","pyDeg"],postprocess:(d,loc,_)=>["!augOrDimPyIntv",d[1],-d[0].length,1,loc]},{name:"pyIntv",symbols:["posInt",{literal:"A"},"pyDeg"],postprocess:(d,loc,_)=>["!augOrDimPyIntv",d[2],d[0],1,loc]},{name:"pyIntv",symbols:["posInt",{literal:"d"},"pyDeg"],postprocess:(d,loc,_)=>["!augOrDimPyIntv",d[2],-d[0],1,loc]},{name:"npyIntv$subexpression$1",symbols:[/[nN]/],postprocess:function(d){return d.join("")}},{name:"npyIntv",symbols:["npyIntv$subexpression$1","pyDeg"],postprocess:(d,loc,_)=>["!nonPerfPyIntv",d[1],0,"n",loc]},{name:"npyIntv$string$1",symbols:[{literal:"s"},{literal:"A"}],postprocess:function joiner(d){return d.join("")}},{name:"npyIntv",symbols:["npyIntv$string$1","pyDeg"],postprocess:(d,loc,_)=>["!augOrDimPyIntv",d[1],1,2,loc]},{name:"npyIntv$string$2",symbols:[{literal:"s"},{literal:"d"}],postprocess:function joiner(d){return d.join("")}},{name:"npyIntv",symbols:["npyIntv$string$2","pyDeg"],postprocess:(d,loc,_)=>["!augOrDimPyIntv",d[1],-1,2,loc]},{name:"npyIntv$string$3",symbols:[{literal:"/"},{literal:"2"},{literal:"-"},{literal:"A"}],postprocess:function joiner(d){return d.join("")}},{name:"npyIntv",symbols:["posInt","npyIntv$string$3","pyDeg"],postprocess:(d,loc,_)=>["!augOrDimPyIntv",d[2],d[0],2,loc]},{name:"npyIntv$string$4",symbols:[{literal:"/"},{literal:"2"},{literal:"-"},{literal:"d"}],postprocess:function joiner(d){return d.join("")}},{name:"npyIntv",symbols:["posInt","npyIntv$string$4","pyDeg"],postprocess:(d,loc,_)=>["!augOrDimPyIntv",d[2],-d[0],2,loc]},{name:"snpyIntv$string$1",symbols:[{literal:"s"},{literal:"M"}],postprocess:function joiner(d){return d.join("")}},{name:"snpyIntv",symbols:["snpyIntv$string$1","pyDeg"],postprocess:(d,loc,_)=>["!nonPerfPyIntv",d[1],Fraction(1,4),"sM",loc]},{name:"snpyIntv$string$2",symbols:[{literal:"s"},{literal:"m"}],postprocess:function joiner(d){return d.join("")}},{name:"snpyIntv",symbols:["snpyIntv$string$2","pyDeg"],postprocess:(d,loc,_)=>["!nonPerfPyIntv",d[1],Fraction(-1,4),"sm",loc]},{name:"snpyIntv$string$3",symbols:[{literal:"/"},{literal:"4"},{literal:"-"},{literal:"A"}],postprocess:function joiner(d){return d.join("")}},{name:"snpyIntv",symbols:["posInt","snpyIntv$string$3","pyDeg"],postprocess:(d,loc,_)=>["!augOrDimPyIntv",d[2],d[0],4,loc]},{name:"snpyIntv$string$4",symbols:[{literal:"/"},{literal:"4"},{literal:"-"},{literal:"d"}],postprocess:function joiner(d){return d.join("")}},{name:"snpyIntv",symbols:["posInt","snpyIntv$string$4","pyDeg"],postprocess:(d,loc,_)=>["!augOrDimPyIntv",d[2],-d[0],4,loc]},{name:"pyDeg",symbols:["posInt"],postprocess:d=>parseInt(d[0])},{name:"pyDeg",symbols:[{literal:"-"},"posInt"],postprocess:d=>-parseInt(d[1])},{name:"anyPyNote",symbols:["pyNote"],postprocess:id},{name:"anyPyNote",symbols:["npyNote"],postprocess:id},{name:"pyNote",symbols:[{literal:"A"}],postprocess:_=>["recip",["!refIntvToA4"]]},{name:"pyNote$macrocall$2",symbols:[/[B-G]/]},{name:"pyNote$macrocall$3",symbols:["pyNoteNoAccs"]},{name:"pyNote$macrocall$1$ebnf$1",symbols:["int"],postprocess:id},{name:"pyNote$macrocall$1$ebnf$1",symbols:[],postprocess:function(d){return null}},{name:"pyNote$macrocall$1",symbols:["pyNote$macrocall$2","pyNote$macrocall$3","pyNote$macrocall$1$ebnf$1"],postprocess:function(d){const d2=d[2]?parseInt(d[2]):4;return["mul",["div",baseNoteIntvToA(d[0][0]),["!refIntvToA4"]],d[1][0].mul(Interval(2).pow(d2-4))]}},{name:"pyNote",symbols:["pyNote$macrocall$1"],postprocess:id},{name:"pyNote$macrocall$5",symbols:[/[A-G]/]},{name:"pyNote$macrocall$6",symbols:["pyNoteAccs"]},{name:"pyNote$macrocall$4$ebnf$1",symbols:["int"],postprocess:id},{name:"pyNote$macrocall$4$ebnf$1",symbols:[],postprocess:function(d){return null}},{name:"pyNote$macrocall$4",symbols:["pyNote$macrocall$5","pyNote$macrocall$6","pyNote$macrocall$4$ebnf$1"],postprocess:function(d){const d2=d[2]?parseInt(d[2]):4;return["mul",["div",baseNoteIntvToA(d[0][0]),["!refIntvToA4"]],d[1][0].mul(Interval(2).pow(d2-4))]}},{name:"pyNote",symbols:["pyNote$macrocall$4"],postprocess:id},{name:"pyNoteNoAccs",symbols:[],postprocess:_=>Interval(1)},{name:"pyNoteAccs$subexpression$1",symbols:[{literal:"♮"}]},{name:"pyNoteAccs$subexpression$1$string$1",symbols:[{literal:"n"},{literal:"a"},{literal:"t"}],postprocess:function joiner(d){return d.join("")}},{name:"pyNoteAccs$subexpression$1",symbols:["pyNoteAccs$subexpression$1$string$1"]},{name:"pyNoteAccs",symbols:["pyNoteAccs$subexpression$1"],postprocess:_=>Interval(1)},{name:"pyNoteAccs$ebnf$1$subexpression$1",symbols:[{literal:"♯"}]},{name:"pyNoteAccs$ebnf$1$subexpression$1",symbols:[{literal:"#"}]},{name:"pyNoteAccs$ebnf$1",symbols:["pyNoteAccs$ebnf$1$subexpression$1"]},{name:"pyNoteAccs$ebnf$1$subexpression$2",symbols:[{literal:"♯"}]},{name:"pyNoteAccs$ebnf$1$subexpression$2",symbols:[{literal:"#"}]},{name:"pyNoteAccs$ebnf$1",symbols:["pyNoteAccs$ebnf$1","pyNoteAccs$ebnf$1$subexpression$2"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"pyNoteAccs",symbols:["pyNoteAccs$ebnf$1"],postprocess:d=>pyInterval(1,d[0].length)},{name:"pyNoteAccs$ebnf$2$subexpression$1$string$1",symbols:[{literal:"\ud834"},{literal:"\udd2a"}],postprocess:function joiner(d){return d.join("")}},{name:"pyNoteAccs$ebnf$2$subexpression$1",symbols:["pyNoteAccs$ebnf$2$subexpression$1$string$1"]},{name:"pyNoteAccs$ebnf$2$subexpression$1",symbols:[{literal:"X"}]},{name:"pyNoteAccs$ebnf$2",symbols:["pyNoteAccs$ebnf$2$subexpression$1"]},{name:"pyNoteAccs$ebnf$2$subexpression$2$string$1",symbols:[{literal:"\ud834"},{literal:"\udd2a"}],postprocess:function joiner(d){return d.join("")}},{name:"pyNoteAccs$ebnf$2$subexpression$2",symbols:["pyNoteAccs$ebnf$2$subexpression$2$string$1"]},{name:"pyNoteAccs$ebnf$2$subexpression$2",symbols:[{literal:"X"}]},{name:"pyNoteAccs$ebnf$2",symbols:["pyNoteAccs$ebnf$2","pyNoteAccs$ebnf$2$subexpression$2"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"pyNoteAccs$ebnf$3",symbols:[]},{name:"pyNoteAccs$ebnf$3$subexpression$1",symbols:[{literal:"♯"}]},{name:"pyNoteAccs$ebnf$3$subexpression$1",symbols:[{literal:"#"}]},{name:"pyNoteAccs$ebnf$3",symbols:["pyNoteAccs$ebnf$3","pyNoteAccs$ebnf$3$subexpression$1"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"pyNoteAccs",symbols:["pyNoteAccs$ebnf$2","pyNoteAccs$ebnf$3"],postprocess:d=>pyInterval(1,2*d[0].length+d[1].length)},{name:"pyNoteAccs$ebnf$4$subexpression$1",symbols:[{literal:"♭"}]},{name:"pyNoteAccs$ebnf$4$subexpression$1",symbols:[{literal:"b"}]},{name:"pyNoteAccs$ebnf$4",symbols:["pyNoteAccs$ebnf$4$subexpression$1"]},{name:"pyNoteAccs$ebnf$4$subexpression$2",symbols:[{literal:"♭"}]},{name:"pyNoteAccs$ebnf$4$subexpression$2",symbols:[{literal:"b"}]},{name:"pyNoteAccs$ebnf$4",symbols:["pyNoteAccs$ebnf$4","pyNoteAccs$ebnf$4$subexpression$2"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"pyNoteAccs",symbols:["pyNoteAccs$ebnf$4"],postprocess:d=>pyInterval(-1,d[0].length)},{name:"pyNoteAccs$ebnf$5",symbols:[]},{name:"pyNoteAccs$ebnf$5$subexpression$1",symbols:[{literal:"♭"}]},{name:"pyNoteAccs$ebnf$5$subexpression$1",symbols:[{literal:"b"}]},{name:"pyNoteAccs$ebnf$5",symbols:["pyNoteAccs$ebnf$5","pyNoteAccs$ebnf$5$subexpression$1"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"pyNoteAccs$ebnf$6$string$1",symbols:[{literal:"\ud834"},{literal:"\udd2b"}],postprocess:function joiner(d){return d.join("")}},{name:"pyNoteAccs$ebnf$6",symbols:["pyNoteAccs$ebnf$6$string$1"]},{name:"pyNoteAccs$ebnf$6$string$2",symbols:[{literal:"\ud834"},{literal:"\udd2b"}],postprocess:function joiner(d){return d.join("")}},{name:"pyNoteAccs$ebnf$6",symbols:["pyNoteAccs$ebnf$6","pyNoteAccs$ebnf$6$string$2"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"pyNoteAccs",symbols:["pyNoteAccs$ebnf$5","pyNoteAccs$ebnf$6"],postprocess:d=>pyInterval(-1,2*d[0].length+d[1].length)},{name:"npyNote$macrocall$2",symbols:[/[A-G]/]},{name:"npyNote$macrocall$3",symbols:["npyNoteAccs"]},{name:"npyNote$macrocall$1$ebnf$1",symbols:["int"],postprocess:id},{name:"npyNote$macrocall$1$ebnf$1",symbols:[],postprocess:function(d){return null}},{name:"npyNote$macrocall$1",symbols:["npyNote$macrocall$2","npyNote$macrocall$3","npyNote$macrocall$1$ebnf$1"],postprocess:function(d){const d2=d[2]?parseInt(d[2]):4;return["mul",["div",baseNoteIntvToA(d[0][0]),["!refIntvToA4"]],d[1][0].mul(Interval(2).pow(d2-4))]}},{name:"npyNote",symbols:["npyNote$macrocall$1"],postprocess:id},{name:"npyNoteAccs$ebnf$1",symbols:[]},{name:"npyNoteAccs$ebnf$1$subexpression$1$string$1",symbols:[{literal:"\ud834"},{literal:"\udd2a"}],postprocess:function joiner(d){return d.join("")}},{name:"npyNoteAccs$ebnf$1$subexpression$1",symbols:["npyNoteAccs$ebnf$1$subexpression$1$string$1"]},{name:"npyNoteAccs$ebnf$1$subexpression$1",symbols:[{literal:"X"}]},{name:"npyNoteAccs$ebnf$1",symbols:["npyNoteAccs$ebnf$1","npyNoteAccs$ebnf$1$subexpression$1"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"npyNoteAccs$ebnf$2",symbols:[]},{name:"npyNoteAccs$ebnf$2$subexpression$1",symbols:[{literal:"♯"}]},{name:"npyNoteAccs$ebnf$2$subexpression$1",symbols:[{literal:"#"}]},{name:"npyNoteAccs$ebnf$2",symbols:["npyNoteAccs$ebnf$2","npyNoteAccs$ebnf$2$subexpression$1"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"npyNoteAccs$ebnf$3$subexpression$1$string$1",symbols:[{literal:"\ud834"},{literal:"\udd32"}],postprocess:function joiner(d){return d.join("")}},{name:"npyNoteAccs$ebnf$3$subexpression$1",symbols:["npyNoteAccs$ebnf$3$subexpression$1$string$1"]},{name:"npyNoteAccs$ebnf$3$subexpression$1",symbols:[{literal:"t"}]},{name:"npyNoteAccs$ebnf$3",symbols:["npyNoteAccs$ebnf$3$subexpression$1"]},{name:"npyNoteAccs$ebnf$3$subexpression$2$string$1",symbols:[{literal:"\ud834"},{literal:"\udd32"}],postprocess:function joiner(d){return d.join("")}},{name:"npyNoteAccs$ebnf$3$subexpression$2",symbols:["npyNoteAccs$ebnf$3$subexpression$2$string$1"]},{name:"npyNoteAccs$ebnf$3$subexpression$2",symbols:[{literal:"t"}]},{name:"npyNoteAccs$ebnf$3",symbols:["npyNoteAccs$ebnf$3","npyNoteAccs$ebnf$3$subexpression$2"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"npyNoteAccs",symbols:["npyNoteAccs$ebnf$1","npyNoteAccs$ebnf$2","npyNoteAccs$ebnf$3"],postprocess:d=>pyInterval(1,2*d[0].length+d[1].length+.5*d[2].length)},{name:"npyNoteAccs$ebnf$4$subexpression$1$string$1",symbols:[{literal:"\ud834"},{literal:"\udd33"}],postprocess:function joiner(d){return d.join("")}},{name:"npyNoteAccs$ebnf$4$subexpression$1",symbols:["npyNoteAccs$ebnf$4$subexpression$1$string$1"]},{name:"npyNoteAccs$ebnf$4$subexpression$1",symbols:[{literal:"d"}]},{name:"npyNoteAccs$ebnf$4",symbols:["npyNoteAccs$ebnf$4$subexpression$1"]},{name:"npyNoteAccs$ebnf$4$subexpression$2$string$1",symbols:[{literal:"\ud834"},{literal:"\udd33"}],postprocess:function joiner(d){return d.join("")}},{name:"npyNoteAccs$ebnf$4$subexpression$2",symbols:["npyNoteAccs$ebnf$4$subexpression$2$string$1"]},{name:"npyNoteAccs$ebnf$4$subexpression$2",symbols:[{literal:"d"}]},{name:"npyNoteAccs$ebnf$4",symbols:["npyNoteAccs$ebnf$4","npyNoteAccs$ebnf$4$subexpression$2"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"npyNoteAccs$ebnf$5",symbols:[]},{name:"npyNoteAccs$ebnf$5$subexpression$1",symbols:[{literal:"♭"}]},{name:"npyNoteAccs$ebnf$5$subexpression$1",symbols:[{literal:"b"}]},{name:"npyNoteAccs$ebnf$5",symbols:["npyNoteAccs$ebnf$5","npyNoteAccs$ebnf$5$subexpression$1"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"npyNoteAccs$ebnf$6",symbols:[]},{name:"npyNoteAccs$ebnf$6$string$1",symbols:[{literal:"\ud834"},{literal:"\udd2b"}],postprocess:function joiner(d){return d.join("")}},{name:"npyNoteAccs$ebnf$6",symbols:["npyNoteAccs$ebnf$6","npyNoteAccs$ebnf$6$string$1"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"npyNoteAccs",symbols:["npyNoteAccs$ebnf$4","npyNoteAccs$ebnf$5","npyNoteAccs$ebnf$6"],postprocess:d=>pyInterval(-1,2*d[0].length+d[1].length+.5*d[2].length)},{name:"fjsIntv",symbols:["fjsNonNeutIntv"],postprocess:d=>d[0](fjsSpec)},{name:"fjsNote",symbols:["fjsNonNeutNote"],postprocess:d=>d[0](fjsSpec)},{name:"fjsNonNeutIntv",symbols:["pyIntv"],postprocess:d=>_=>d[0]},{name:"fjsNonNeutIntv$macrocall$2",symbols:["fjsNonNeutIntv"]},{name:"fjsNonNeutIntv$macrocall$1",symbols:["fjsNonNeutIntv$macrocall$2",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"fjsNonNeutIntv$macrocall$1",symbols:["fjsNonNeutIntv$macrocall$2",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"fjsNonNeutIntv",symbols:["fjsNonNeutIntv$macrocall$1"],postprocess:id},{name:"fjsNonNeutNote",symbols:["pyNote"],postprocess:d=>_=>d[0]},{name:"fjsNonNeutNote$macrocall$2",symbols:["fjsNonNeutNote"]},{name:"fjsNonNeutNote$macrocall$1",symbols:["fjsNonNeutNote$macrocall$2",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"fjsNonNeutNote$macrocall$1",symbols:["fjsNonNeutNote$macrocall$2",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"fjsNonNeutNote",symbols:["fjsNonNeutNote$macrocall$1"],postprocess:id},{name:"nfjsIntv",symbols:["nfjsNeutIntv"],postprocess:d=>d[0](nfjsSpec)},{name:"nfjsIntv",symbols:["nfjsNonNeutIntv"],postprocess:d=>d[0](nfjsSpec)},{name:"nfjsNote",symbols:["nfjsNeutNote"],postprocess:d=>d[0](nfjsSpec)},{name:"nfjsNote",symbols:["nfjsNonNeutNote"],postprocess:d=>d[0](nfjsSpec)},{name:"nfjsNeutIntv",symbols:["npyIntv"],postprocess:d=>_=>d[0]},{name:"nfjsNeutIntv$macrocall$2",symbols:["nfjsNeutIntv"]},{name:"nfjsNeutIntv$macrocall$1",symbols:["nfjsNeutIntv$macrocall$2",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"nfjsNeutIntv$macrocall$1",symbols:["nfjsNeutIntv$macrocall$2",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"nfjsNeutIntv",symbols:["nfjsNeutIntv$macrocall$1"],postprocess:id},{name:"nfjsNonNeutIntv",symbols:["pyIntv"],postprocess:d=>_=>d[0]},{name:"nfjsNonNeutIntv$macrocall$2",symbols:["nfjsNonNeutIntv"]},{name:"nfjsNonNeutIntv$macrocall$1",symbols:["nfjsNonNeutIntv$macrocall$2",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"nfjsNonNeutIntv$macrocall$1",symbols:["nfjsNonNeutIntv$macrocall$2",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"nfjsNonNeutIntv",symbols:["nfjsNonNeutIntv$macrocall$1"],postprocess:id},{name:"nfjsNeutNote",symbols:["npyNote"],postprocess:d=>_=>d[0]},{name:"nfjsNeutNote$macrocall$2",symbols:["nfjsNeutNote"]},{name:"nfjsNeutNote$macrocall$1",symbols:["nfjsNeutNote$macrocall$2",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"nfjsNeutNote$macrocall$1",symbols:["nfjsNeutNote$macrocall$2",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"nfjsNeutNote",symbols:["nfjsNeutNote$macrocall$1"],postprocess:id},{name:"nfjsNonNeutNote",symbols:["pyNote"],postprocess:d=>_=>d[0]},{name:"nfjsNonNeutNote$macrocall$2",symbols:["nfjsNonNeutNote"]},{name:"nfjsNonNeutNote$macrocall$1",symbols:["nfjsNonNeutNote$macrocall$2",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"nfjsNonNeutNote$macrocall$1",symbols:["nfjsNonNeutNote$macrocall$2",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"nfjsNonNeutNote",symbols:["nfjsNonNeutNote$macrocall$1"],postprocess:id},{name:"fjsLikeIntv",symbols:["fjsLikeSemiNeutIntv"],postprocess:(d,loc,_)=>["!fjsSNPy",d[0],loc]},{name:"fjsLikeIntv",symbols:["fjsLikeNeutIntv"],postprocess:(d,loc,_)=>["!fjsNPy",d[0],loc]},{name:"fjsLikeIntv",symbols:["fjsLikeNonNeutIntv"],postprocess:(d,loc,_)=>["!fjsPy",d[0],loc]},{name:"fjsLikeNote",symbols:["fjsLikeNeutNote"],postprocess:(d,loc,_)=>["!fjsNPy",d[0],loc]},{name:"fjsLikeNote",symbols:["fjsLikeNonNeutNote"],postprocess:(d,loc,_)=>["!fjsPy",d[0],loc]},{name:"strictFJSLikeIntv$macrocall$2",symbols:["fjsLikeSemiNeutIntv"]},{name:"strictFJSLikeIntv$macrocall$1",symbols:["strictFJSLikeIntv$macrocall$2",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"strictFJSLikeIntv$macrocall$1",symbols:["strictFJSLikeIntv$macrocall$2",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"strictFJSLikeIntv",symbols:["strictFJSLikeIntv$macrocall$1"],postprocess:(d,loc,_)=>["!fjsSNPy",d[0],loc]},{name:"strictFJSLikeIntv$macrocall$4",symbols:["fjsLikeNeutIntv"]},{name:"strictFJSLikeIntv$macrocall$3",symbols:["strictFJSLikeIntv$macrocall$4",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"strictFJSLikeIntv$macrocall$3",symbols:["strictFJSLikeIntv$macrocall$4",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"strictFJSLikeIntv",symbols:["strictFJSLikeIntv$macrocall$3"],postprocess:(d,loc,_)=>["!fjsNPy",d[0],loc]},{name:"strictFJSLikeIntv$macrocall$6",symbols:["fjsLikeNonNeutIntv"]},{name:"strictFJSLikeIntv$macrocall$5",symbols:["strictFJSLikeIntv$macrocall$6",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"strictFJSLikeIntv$macrocall$5",symbols:["strictFJSLikeIntv$macrocall$6",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"strictFJSLikeIntv",symbols:["strictFJSLikeIntv$macrocall$5"],postprocess:(d,loc,_)=>["!fjsPy",d[0],loc]},{name:"strictFJSLikeNote$macrocall$2",symbols:["fjsLikeNeutNote"]},{name:"strictFJSLikeNote$macrocall$1",symbols:["strictFJSLikeNote$macrocall$2",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"strictFJSLikeNote$macrocall$1",symbols:["strictFJSLikeNote$macrocall$2",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"strictFJSLikeNote",symbols:["strictFJSLikeNote$macrocall$1"],postprocess:(d,loc,_)=>["!fjsNPy",d[0],loc]},{name:"strictFJSLikeNote$macrocall$4",symbols:["fjsLikeNonNeutNote"]},{name:"strictFJSLikeNote$macrocall$3",symbols:["strictFJSLikeNote$macrocall$4",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"strictFJSLikeNote$macrocall$3",symbols:["strictFJSLikeNote$macrocall$4",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"strictFJSLikeNote",symbols:["strictFJSLikeNote$macrocall$3"],postprocess:(d,loc,_)=>["!fjsPy",d[0],loc]},{name:"fjsLikeSemiNeutIntv",symbols:["snpyIntv"],postprocess:d=>_=>d[0]},{name:"fjsLikeSemiNeutIntv$macrocall$2",symbols:["fjsLikeSemiNeutIntv"]},{name:"fjsLikeSemiNeutIntv$macrocall$1",symbols:["fjsLikeSemiNeutIntv$macrocall$2",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"fjsLikeSemiNeutIntv$macrocall$1",symbols:["fjsLikeSemiNeutIntv$macrocall$2",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"fjsLikeSemiNeutIntv",symbols:["fjsLikeSemiNeutIntv$macrocall$1"],postprocess:id},{name:"fjsLikeNeutIntv",symbols:["npyIntv"],postprocess:d=>_=>d[0]},{name:"fjsLikeNeutIntv$macrocall$2",symbols:["fjsLikeNeutIntv"]},{name:"fjsLikeNeutIntv$macrocall$1",symbols:["fjsLikeNeutIntv$macrocall$2",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"fjsLikeNeutIntv$macrocall$1",symbols:["fjsLikeNeutIntv$macrocall$2",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"fjsLikeNeutIntv",symbols:["fjsLikeNeutIntv$macrocall$1"],postprocess:id},{name:"fjsLikeNonNeutIntv",symbols:["pyIntv"],postprocess:d=>_=>d[0]},{name:"fjsLikeNonNeutIntv$macrocall$2",symbols:["fjsLikeNonNeutIntv"]},{name:"fjsLikeNonNeutIntv$macrocall$1",symbols:["fjsLikeNonNeutIntv$macrocall$2",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"fjsLikeNonNeutIntv$macrocall$1",symbols:["fjsLikeNonNeutIntv$macrocall$2",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"fjsLikeNonNeutIntv",symbols:["fjsLikeNonNeutIntv$macrocall$1"],postprocess:id},{name:"fjsLikeNeutNote",symbols:["npyNote"],postprocess:d=>_=>d[0]},{name:"fjsLikeNeutNote$macrocall$2",symbols:["fjsLikeNeutNote"]},{name:"fjsLikeNeutNote$macrocall$1",symbols:["fjsLikeNeutNote$macrocall$2",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"fjsLikeNeutNote$macrocall$1",symbols:["fjsLikeNeutNote$macrocall$2",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"fjsLikeNeutNote",symbols:["fjsLikeNeutNote$macrocall$1"],postprocess:id},{name:"fjsLikeNonNeutNote",symbols:["pyNote"],postprocess:d=>_=>d[0]},{name:"fjsLikeNonNeutNote$macrocall$2",symbols:["fjsLikeNonNeutNote"]},{name:"fjsLikeNonNeutNote$macrocall$1",symbols:["fjsLikeNonNeutNote$macrocall$2",{literal:"^"},"fjsAccList"],postprocess:d=>spec=>["mul",d[0][0](spec),d[2](spec)]},{name:"fjsLikeNonNeutNote$macrocall$1",symbols:["fjsLikeNonNeutNote$macrocall$2",{literal:"_"},"fjsAccList"],postprocess:d=>spec=>["div",d[0][0](spec),d[2](spec)]},{name:"fjsLikeNonNeutNote",symbols:["fjsLikeNonNeutNote$macrocall$1"],postprocess:id},{name:"fjsAccList",symbols:["fjsAcc"],postprocess:d=>spec=>["!fjsFactor",d[0],spec]},{name:"fjsAccList",symbols:["fjsAccList",{literal:","},"fjsAcc"],postprocess:d=>spec=>["mul",d[0](spec),["!fjsFactor",d[2],spec]]},{name:"fjsAcc",symbols:["fjsAccExpr"],postprocess:(d,loc,_)=>["!ensureNo2Or3",d[0],loc]},{name:"fjsAccExpr",symbols:["posInt"],postprocess:d=>Interval(d[0])},{name:"fjsAccExpr$string$1",symbols:[{literal:"s"},{literal:"q"},{literal:"r"},{literal:"t"},{literal:"("}],postprocess:function joiner(d){return d.join("")}},{name:"fjsAccExpr",symbols:["fjsAccExpr$string$1","fjsAccExpr",{literal:")"}],postprocess:d=>d[1].sqrt()},{name:"fjsAccExpr$string$2",symbols:[{literal:"r"},{literal:"o"},{literal:"o"},{literal:"t"}],postprocess:function joiner(d){return d.join("")}},{name:"fjsAccExpr",symbols:["fjsAccExpr$string$2","posInt",{literal:"("},"fjsAccExpr",{literal:")"}],postprocess:d=>d[3].root(d[1])},{name:"fjsAccExpr",symbols:[{literal:"("},"fjsAccExpr",{literal:"^"},"frcExpr3",{literal:")"}],postprocess:d=>d[1].pow(d[3])},{name:"upsDnsIntv",symbols:["upsDns","pyIntv"],postprocess:(d,loc,_)=>["+",d[0],["!edoPy",d[1],loc]]},{name:"upsDnsIntv",symbols:["upsDns","npyIntv"],postprocess:(d,loc,_)=>["+",d[0],["!edoPy",d[1],loc]]},{name:"upsDnsIntv",symbols:["upsDns","snpyIntv"],postprocess:(d,loc,_)=>["+",d[0],["!edoPy",d[1],loc]]},{name:"upsDnsIntv",symbols:["upsDns","posInt"],postprocess:(d,loc,reject)=>(pyRedDeg(d[1])==4||pyRedDeg(d[1])==5)&&d[0]!=0?["+",d[0],["!edoPy",parseInt(d[1]),loc]]:reject},{name:"upsDnsIntv",symbols:["upsDns",{literal:"~"},"posInt"],postprocess:(d,loc,reject)=>pyRedDeg(d[2])==1?reject:pyRedDeg(d[2])==4?["+",d[0],["!edoPy",pyInterval(d[2],1,2),loc]]:pyRedDeg(d[2])==5?["+",d[0],["!edoPy",pyInterval(d[2],-1,2),loc]]:["+",d[0],["!edoPy",pyInterval(d[2],0),loc]]},{name:"upsDnsNote",symbols:["upsDns","pyNote"],postprocess:(d,loc,_)=>["+",d[0],["!edoPy",d[1],loc]]},{name:"upsDnsNote",symbols:["upsDns","npyNote"],postprocess:(d,loc,_)=>["+",d[0],["!edoPy",d[1],loc]]},{name:"upsDns",symbols:[],postprocess:d=>0},{name:"upsDns$ebnf$1",symbols:[{literal:"^"}]},{name:"upsDns$ebnf$1",symbols:["upsDns$ebnf$1",{literal:"^"}],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"upsDns",symbols:["upsDns$ebnf$1"],postprocess:d=>d[0].length},{name:"upsDns$ebnf$2",symbols:[{literal:"v"}]},{name:"upsDns$ebnf$2",symbols:["upsDns$ebnf$2",{literal:"v"}],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"upsDns",symbols:["upsDns$ebnf$2"],postprocess:d=>-d[0].length},{name:"colorIntv",symbols:["aclrIntv"],postprocess:id},{name:"colorIntv",symbols:["clrIntv"],postprocess:id},{name:"colorNote",symbols:["aclrNote"],postprocess:id},{name:"colorNote",symbols:["clrNote"],postprocess:id},{name:"aclrIntv",symbols:["aclrCos","aclrM","aclrP","aclrDeg"],postprocess:(d,loc,_)=>["!clrIntv",d[0],d[1],d[2],d[3],loc]},{name:"aclrNote",symbols:["aclrP","pyNote"],postprocess:(d,loc,_)=>["!clrNote",d[0],d[1],loc]},{name:"aclrCos",symbols:[],postprocess:d=>0},{name:"aclrCos$ebnf$1",symbols:[{literal:"c"}]},{name:"aclrCos$ebnf$1",symbols:["aclrCos$ebnf$1",{literal:"c"}],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"aclrCos",symbols:["aclrCos$ebnf$1"],postprocess:d=>d[0].length},{name:"aclrCos$string$1",symbols:[{literal:"c"},{literal:"^"}],postprocess:function joiner(d){return d.join("")}},{name:"aclrCos",symbols:["aclrCos$string$1",/[1-9]/],postprocess:d=>parseInt(d[1])},{name:"aclrCos$string$2",symbols:[{literal:"c"},{literal:"^"},{literal:"("}],postprocess:function joiner(d){return d.join("")}},{name:"aclrCos",symbols:["aclrCos$string$2","posInt",{literal:")"}],postprocess:d=>parseInt(d[1])},{name:"aclrM",symbols:[],postprocess:d=>0},{name:"aclrM$ebnf$1",symbols:[{literal:"L"}]},{name:"aclrM$ebnf$1",symbols:["aclrM$ebnf$1",{literal:"L"}],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"aclrM",symbols:["aclrM$ebnf$1"],postprocess:d=>d[0].length},{name:"aclrM$string$1",symbols:[{literal:"L"},{literal:"^"}],postprocess:function joiner(d){return d.join("")}},{name:"aclrM",symbols:["aclrM$string$1",/[1-9]/],postprocess:d=>parseInt(d[1])},{name:"aclrM$string$2",symbols:[{literal:"L"},{literal:"^"},{literal:"("}],postprocess:function joiner(d){return d.join("")}},{name:"aclrM",symbols:["aclrM$string$2","posInt",{literal:")"}],postprocess:d=>parseInt(d[1])},{name:"aclrM$ebnf$2",symbols:[{literal:"s"}]},{name:"aclrM$ebnf$2",symbols:["aclrM$ebnf$2",{literal:"s"}],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"aclrM",symbols:["aclrM$ebnf$2"],postprocess:d=>-d[0].length},{name:"aclrM$string$3",symbols:[{literal:"s"},{literal:"^"}],postprocess:function joiner(d){return d.join("")}},{name:"aclrM",symbols:["aclrM$string$3",/[1-9]/],postprocess:d=>-parseInt(d[1])},{name:"aclrM$string$4",symbols:[{literal:"s"},{literal:"^"},{literal:"("}],postprocess:function joiner(d){return d.join("")}},{name:"aclrM",symbols:["aclrM$string$4","posInt",{literal:")"}],postprocess:d=>-parseInt(d[1])},{name:"aclrP",symbols:[{literal:"w"}],postprocess:d=>[]},{name:"aclrP$ebnf$1",symbols:["aclrPP1"]},{name:"aclrP$ebnf$1",symbols:["aclrP$ebnf$1","aclrPP1"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"aclrP",symbols:["aclrP$ebnf$1"],postprocess:d=>d[0].flat(1)},{name:"aclrPP1",symbols:["aclrPP"],postprocess:d=>[d[0]]},{name:"aclrPP1",symbols:["aclrPP",{literal:"^"},/[1-9]/],postprocess:d=>Array(parseInt(d[2])).fill(d[0])},{name:"aclrPP1$string$1",symbols:[{literal:"^"},{literal:"("}],postprocess:function joiner(d){return d.join("")}},{name:"aclrPP1",symbols:["aclrPP","aclrPP1$string$1","posInt",{literal:")"}],postprocess:d=>Array(parseInt(d[2])).fill(d[0])},{name:"aclrPP",symbols:[{literal:"y"}],postprocess:d=>Interval(5)},{name:"aclrPP",symbols:[{literal:"g"}],postprocess:d=>Interval(1,5)},{name:"aclrPP",symbols:[{literal:"z"}],postprocess:d=>Interval(7)},{name:"aclrPP",symbols:[{literal:"r"}],postprocess:d=>Interval(1,7)},{name:"aclrPP$ebnf$1",symbols:[{literal:"o"}]},{name:"aclrPP$ebnf$1",symbols:["aclrPP$ebnf$1",{literal:"o"}],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"aclrPP",symbols:["posInt","aclrPP$ebnf$1"],postprocess:(d,loc,_)=>["!aclrPP",parseInt(d[0]),d[1].length,loc]},{name:"aclrPP$ebnf$2",symbols:[{literal:"u"}]},{name:"aclrPP$ebnf$2",symbols:["aclrPP$ebnf$2",{literal:"u"}],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"aclrPP",symbols:["posInt","aclrPP$ebnf$2"],postprocess:(d,loc,_)=>["!aclrPP",parseInt(d[0]),-d[1].length,loc]},{name:"aclrDeg",symbols:["posInt"],postprocess:d=>parseInt(d[0])},{name:"aclrDeg",symbols:[{literal:"-"},"posInt"],postprocess:d=>-parseInt(d[1])},{name:"clrIntv",symbols:["clrCos","clrM","clrP","aclrDeg"],postprocess:(d,loc,_)=>["!clrIntv",d[0],d[1],d[2],d[3],loc]},{name:"clrIntv",symbols:["clrCos","clrM","clrP","clrDeg"],postprocess:(d,loc,_)=>["!clrIntv",d[0],d[1],d[2],d[3],loc]},{name:"clrNote",symbols:["clrP","pyNote"],postprocess:(d,loc,_)=>["!clrNote",d[0],d[1],loc]},{name:"clrCos",symbols:[],postprocess:d=>0},{name:"clrCos$ebnf$1$string$1",symbols:[{literal:"c"},{literal:"o"}],postprocess:function joiner(d){return d.join("")}},{name:"clrCos$ebnf$1",symbols:["clrCos$ebnf$1$string$1"]},{name:"clrCos$ebnf$1$string$2",symbols:[{literal:"c"},{literal:"o"}],postprocess:function joiner(d){return d.join("")}},{name:"clrCos$ebnf$1",symbols:["clrCos$ebnf$1","clrCos$ebnf$1$string$2"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"clrCos$ebnf$2",symbols:[{literal:"-"}],postprocess:id},{name:"clrCos$ebnf$2",symbols:[],postprocess:function(d){return null}},{name:"clrCos",symbols:["clrCos$ebnf$1","clrCos$ebnf$2"],postprocess:d=>d[0].length},{name:"clrCos$string$1",symbols:[{literal:"c"},{literal:"o"}],postprocess:function joiner(d){return d.join("")}},{name:"clrCos$ebnf$3",symbols:[{literal:"-"}],postprocess:id},{name:"clrCos$ebnf$3",symbols:[],postprocess:function(d){return null}},{name:"clrCos",symbols:["clrMPs","clrCos$string$1","clrCos$ebnf$3"],postprocess:d=>d[0]},{name:"clrM",symbols:[],postprocess:d=>0},{name:"clrM$ebnf$1$string$1",symbols:[{literal:"l"},{literal:"a"}],postprocess:function joiner(d){return d.join("")}},{name:"clrM$ebnf$1",symbols:["clrM$ebnf$1$string$1"]},{name:"clrM$ebnf$1$string$2",symbols:[{literal:"l"},{literal:"a"}],postprocess:function joiner(d){return d.join("")}},{name:"clrM$ebnf$1",symbols:["clrM$ebnf$1","clrM$ebnf$1$string$2"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"clrM$ebnf$2",symbols:[{literal:"-"}],postprocess:id},{name:"clrM$ebnf$2",symbols:[],postprocess:function(d){return null}},{name:"clrM",symbols:["clrM$ebnf$1","clrM$ebnf$2"],postprocess:d=>d[0].length},{name:"clrM$string$1",symbols:[{literal:"l"},{literal:"a"}],postprocess:function joiner(d){return d.join("")}},{name:"clrM$ebnf$3",symbols:[{literal:"-"}],postprocess:id},{name:"clrM$ebnf$3",symbols:[],postprocess:function(d){return null}},{name:"clrM",symbols:["clrMPs","clrM$string$1","clrM$ebnf$3"],postprocess:d=>d[0]},{name:"clrM$ebnf$4$string$1",symbols:[{literal:"s"},{literal:"a"}],postprocess:function joiner(d){return d.join("")}},{name:"clrM$ebnf$4",symbols:["clrM$ebnf$4$string$1"]},{name:"clrM$ebnf$4$string$2",symbols:[{literal:"s"},{literal:"a"}],postprocess:function joiner(d){return d.join("")}},{name:"clrM$ebnf$4",symbols:["clrM$ebnf$4","clrM$ebnf$4$string$2"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"clrM$ebnf$5",symbols:[{literal:"-"}],postprocess:id},{name:"clrM$ebnf$5",symbols:[],postprocess:function(d){return null}},{name:"clrM",symbols:["clrM$ebnf$4","clrM$ebnf$5"],postprocess:d=>-d[0].length},{name:"clrM$string$2",symbols:[{literal:"s"},{literal:"a"}],postprocess:function joiner(d){return d.join("")}},{name:"clrM$ebnf$6",symbols:[{literal:"-"}],postprocess:id},{name:"clrM$ebnf$6",symbols:[],postprocess:function(d){return null}},{name:"clrM",symbols:["clrMPs","clrM$string$2","clrM$ebnf$6"],postprocess:d=>["-",0,d[0]]},{name:"clrP$string$1",symbols:[{literal:"w"},{literal:"a"}],postprocess:function joiner(d){return d.join("")}},{name:"clrP",symbols:["clrP$string$1"],postprocess:d=>[]},{name:"clrP$string$2",symbols:[{literal:"i"},{literal:"l"},{literal:"o"}],postprocess:function joiner(d){return d.join("")}},{name:"clrP",symbols:["clrP$string$2"],postprocess:d=>[Interval(11)]},{name:"clrP$string$3",symbols:[{literal:"i"},{literal:"s"},{literal:"o"}],postprocess:function joiner(d){return d.join("")}},{name:"clrP",symbols:["clrP$string$3"],postprocess:d=>[Interval(17)]},{name:"clrP$string$4",symbols:[{literal:"i"},{literal:"n"},{literal:"o"}],postprocess:function joiner(d){return d.join("")}},{name:"clrP",symbols:["clrP$string$4"],postprocess:d=>[Interval(19)]},{name:"clrP$string$5",symbols:[{literal:"i"},{literal:"n"},{literal:"u"}],postprocess:function joiner(d){return d.join("")}},{name:"clrP",symbols:["clrP$string$5"],postprocess:d=>[Interval(1,19)]},{name:"clrP",symbols:["clrPPs"],postprocess:id},{name:"clrPPs$ebnf$1",symbols:["clrPPsMid1"],postprocess:id},{name:"clrPPs$ebnf$1",symbols:[],postprocess:function(d){return null}},{name:"clrPPs",symbols:["clrPPs$ebnf$1","clrPPsMid3","clrPPsEnd"],postprocess:d=>(d[0]||[]).concat(d[1]).concat(d[2])},{name:"clrPPs",symbols:["clrPPsEnd"],postprocess:id},{name:"clrPPsEnd",symbols:["clrPP"],postprocess:d=>[d[0]]},{name:"clrPPsEnd",symbols:["clrPP","clrPPsEnd"],postprocess:d=>[d[0]].concat(d[1])},{name:"clrPPsEnd",symbols:["clrMPs","clrPPsEnd"],postprocess:d=>d[1].map(i=>["pow",i,d[0]])},{name:"clrPPsMid1",symbols:["clrPPsMid1","clrPPsMid2"],postprocess:d=>d[0].concat(d[1])},{name:"clrPPsMid1",symbols:["clrPPsMid2"],postprocess:id},{name:"clrPPsMid2",symbols:["clrPP"],postprocess:d=>[d[0]]},{name:"clrPPsMid2",symbols:["clrPPsMid3"],postprocess:id},{name:"clrPPsMid3$string$1",symbols:[{literal:"-"},{literal:"a"}],postprocess:function joiner(d){return d.join("")}},{name:"clrPPsMid3",symbols:["clrMPs","clrPPsMid1","clrPPsMid3$string$1"],postprocess:d=>d[1].map(i=>["pow",i,d[0]])},{name:"clrPP$string$1",symbols:[{literal:"y"},{literal:"o"}],postprocess:function joiner(d){return d.join("")}},{name:"clrPP",symbols:["clrPP$string$1"],postprocess:d=>Interval(5)},{name:"clrPP$string$2",symbols:[{literal:"g"},{literal:"u"}],postprocess:function joiner(d){return d.join("")}},{name:"clrPP",symbols:["clrPP$string$2"],postprocess:d=>Interval(1,5)},{name:"clrPP$string$3",symbols:[{literal:"z"},{literal:"o"}],postprocess:function joiner(d){return d.join("")}},{name:"clrPP",symbols:["clrPP$string$3"],postprocess:d=>Interval(7)},{name:"clrPP$string$4",symbols:[{literal:"r"},{literal:"u"}],postprocess:function joiner(d){return d.join("")}},{name:"clrPP",symbols:["clrPP$string$4"],postprocess:d=>Interval(1,7)},{name:"clrPP$string$5",symbols:[{literal:"l"},{literal:"o"}],postprocess:function joiner(d){return d.join("")}},{name:"clrPP",symbols:["clrPP$string$5"],postprocess:d=>Interval(11)},{name:"clrPP$string$6",symbols:[{literal:"l"},{literal:"u"}],postprocess:function joiner(d){return d.join("")}},{name:"clrPP",symbols:["clrPP$string$6"],postprocess:d=>Interval(1,11)},{name:"clrPP",symbols:["clrGenPP",{literal:"o"}],postprocess:d=>d[0]},{name:"clrPP",symbols:["clrGenPP",{literal:"u"}],postprocess:d=>["recip",d[0]]},{name:"clrDeg$string$1",symbols:[{literal:"n"},{literal:"e"},{literal:"g"},{literal:"a"},{literal:"t"},{literal:"i"},{literal:"v"},{literal:"e"}],postprocess:function joiner(d){return d.join("")}},{name:"clrDeg",symbols:["__","clrDeg$string$1","clrPosDeg"],postprocess:d=>["*",-1,d[2]]},{name:"clrDeg",symbols:["__",{literal:"-"},"clrOrdinalDeg"],postprocess:d=>["*",-1,d[2]]},{name:"clrDeg",symbols:["clrPosDeg"],postprocess:id},{name:"clrPosDeg$string$1",symbols:[{literal:"u"},{literal:"n"},{literal:"i"},{literal:"s"},{literal:"o"},{literal:"n"}],postprocess:function joiner(d){return d.join("")}},{name:"clrPosDeg",symbols:["__","clrPosDeg$string$1"],postprocess:d=>1},{name:"clrPosDeg$string$2",symbols:[{literal:"o"},{literal:"c"},{literal:"t"},{literal:"a"},{literal:"v"},{literal:"e"}],postprocess:function joiner(d){return d.join("")}},{name:"clrPosDeg",symbols:["__","clrPosDeg$string$2"],postprocess:d=>8},{name:"clrPosDeg",symbols:["__","clrOrdinalDeg"],postprocess:d=>d[1]},{name:"clrOrdinalDeg$string$1",symbols:[{literal:"1"},{literal:"s"},{literal:"n"}],postprocess:function joiner(d){return d.join("")}},{name:"clrOrdinalDeg",symbols:["clrOrdinalDeg$string$1"],postprocess:d=>1},{name:"clrOrdinalDeg$string$2",symbols:[{literal:"8"},{literal:"v"},{literal:"e"}],postprocess:function joiner(d){return d.join("")}},{name:"clrOrdinalDeg",symbols:["clrOrdinalDeg$string$2"],postprocess:d=>8},{name:"clrOrdinalDeg",symbols:["ordinal"],postprocess:d=>parseInt(d[0])},{name:"clrMPs$ebnf$1",symbols:["clrMP"]},{name:"clrMPs$ebnf$1",symbols:["clrMPs$ebnf$1","clrMP"],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"clrMPs",symbols:["clrMPs$ebnf$1"],postprocess:(d,loc,_)=>["!clrMPs",d[0],loc]},{name:"clrMP$string$1",symbols:[{literal:"b"},{literal:"i"}],postprocess:function joiner(d){return d.join("")}},{name:"clrMP",symbols:["clrMP$string$1"],postprocess:d=>2},{name:"clrMP$string$2",symbols:[{literal:"t"},{literal:"r"},{literal:"i"}],postprocess:function joiner(d){return d.join("")}},{name:"clrMP",symbols:["clrMP$string$2"],postprocess:d=>3},{name:"clrMP$string$3",symbols:[{literal:"q"},{literal:"u"},{literal:"a"},{literal:"d"}],postprocess:function joiner(d){return d.join("")}},{name:"clrMP",symbols:["clrMP$string$3"],postprocess:d=>4},{name:"clrMP$string$4",symbols:[{literal:"q"},{literal:"u"},{literal:"i"},{literal:"n"}],postprocess:function joiner(d){return d.join("")}},{name:"clrMP",symbols:["clrMP$string$4"],postprocess:d=>5},{name:"clrMP$string$5",symbols:[{literal:"s"},{literal:"e"},{literal:"p"}],postprocess:function joiner(d){return d.join("")}},{name:"clrMP",symbols:["clrMP$string$5"],postprocess:d=>7},{name:"clrMP$string$6",symbols:[{literal:"l"},{literal:"e"}],postprocess:function joiner(d){return d.join("")}},{name:"clrMP",symbols:["clrMP$string$6"],postprocess:d=>11},{name:"clrMP",symbols:["clrGenPP",{literal:"e"}],postprocess:d=>["valueOf",d[0]]},{name:"clrGenPP",symbols:["clrTens","clrOnes"],postprocess:(d,loc,_)=>["!clrGenPP",d[0]+d[1],loc]},{name:"clrTens",symbols:[],postprocess:d=>10},{name:"clrTens$string$1",symbols:[{literal:"t"},{literal:"w"},{literal:"e"}],postprocess:function joiner(d){return d.join("")}},{name:"clrTens",symbols:["clrTens$string$1"],postprocess:d=>20},{name:"clrTens$string$2",symbols:[{literal:"t"},{literal:"h"},{literal:"i"}],postprocess:function joiner(d){return d.join("")}},{name:"clrTens",symbols:["clrTens$string$2"],postprocess:d=>30},{name:"clrTens$string$3",symbols:[{literal:"f"},{literal:"o"}],postprocess:function joiner(d){return d.join("")}},{name:"clrTens",symbols:["clrTens$string$3"],postprocess:d=>40},{name:"clrTens$string$4",symbols:[{literal:"f"},{literal:"i"}],postprocess:function joiner(d){return d.join("")}},{name:"clrTens",symbols:["clrTens$string$4"],postprocess:d=>50},{name:"clrTens$string$5",symbols:[{literal:"s"},{literal:"i"}],postprocess:function joiner(d){return d.join("")}},{name:"clrTens",symbols:["clrTens$string$5"],postprocess:d=>60},{name:"clrOnes",symbols:[{literal:"w"}],postprocess:d=>1},{name:"clrOnes$string$1",symbols:[{literal:"t"},{literal:"h"}],postprocess:function joiner(d){return d.join("")}},{name:"clrOnes",symbols:["clrOnes$string$1"],postprocess:d=>3},{name:"clrOnes",symbols:[{literal:"s"}],postprocess:d=>7},{name:"clrOnes",symbols:[{literal:"n"}],postprocess:d=>9},{name:"frcExpr1",symbols:["frcExpr1","_",{literal:"+"},"_","frcExpr2"],postprocess:d=>d[0].add(d[4])},{name:"frcExpr1",symbols:["frcExpr1","_",{literal:"-"},"_","frcExpr2"],postprocess:d=>d[0].sub(d[4])},{name:"frcExpr1",symbols:["frcExpr2"],postprocess:id},{name:"frcExpr2",symbols:["frcExpr2","_",{literal:"*"},"_","frcExpr3"],postprocess:d=>d[0].mul(d[4])},{name:"frcExpr2",symbols:["frcExpr2","_",{literal:"/"},"_","locFrcExpr3"],postprocess:function(d){try{return d[0].div(d[4][0])}catch(err){throw new OtherError("Division by zero",d[4][1])}}},{name:"frcExpr2",symbols:["frcExpr3"],postprocess:id},{name:"frcExpr3",symbols:[{literal:"-"},"_","frcExpr4"],postprocess:d=>d[2].neg()},{name:"frcExpr3",symbols:["frcExpr4"],postprocess:id},{name:"frcExpr4",symbols:["frcExpr5","_",{literal:"^"},"_","intExpr3"],postprocess:d=>d[0].pow(d[4])},{name:"frcExpr4",symbols:["frcExpr5"],postprocess:id},{name:"frcExpr5",symbols:["nonNegInt"],postprocess:d=>Fraction(d[0])},{name:"frcExpr5",symbols:[{literal:"("},"_","frcExpr1","_",{literal:")"}],postprocess:d=>d[2]},{name:"locFrcExpr3",symbols:["frcExpr3"],postprocess:(d,loc,_)=>[d[0],loc]},{name:"intExpr1",symbols:["intExpr1","_",{literal:"+"},"_","intExpr2"],postprocess:d=>d[0]+d[4]},{name:"intExpr1",symbols:["intExpr1","_",{literal:"-"},"_","intExpr2"],postprocess:d=>d[0]-d[4]},{name:"intExpr1",symbols:["intExpr2"],postprocess:id},{name:"intExpr2",symbols:["intExpr2","_",{literal:"*"},"_","intExpr3"],postprocess:d=>d[0]*d[4]},{name:"intExpr2",symbols:["intExpr3"],postprocess:id},{name:"intExpr3",symbols:[{literal:"-"},"_","intExpr4"],postprocess:d=>-d[2]},{name:"intExpr3",symbols:["intExpr4"],postprocess:id},{name:"intExpr4",symbols:["intExpr5","_",{literal:"^"},"_","posInt"],postprocess:d=>Math.pow(d[0],d[4])},{name:"intExpr4",symbols:["intExpr5"],postprocess:id},{name:"intExpr5",symbols:["nonNegInt"],postprocess:d=>parseInt(d[0])},{name:"intExpr5",symbols:[{literal:"("},"_","intExpr1","_",{literal:")"}],postprocess:d=>d[2]},{name:"decExpr1",symbols:["decExpr1","_",{literal:"+"},"_","decExpr2"],postprocess:d=>d[0].add(d[4])},{name:"decExpr1",symbols:["decExpr1","_",{literal:"-"},"_","decExpr2"],postprocess:d=>d[0].sub(d[4])},{name:"decExpr1",symbols:["decExpr2"],postprocess:id},{name:"decExpr2",symbols:["decExpr2","_",{literal:"*"},"_","decExpr3"],postprocess:d=>d[0].mul(d[4])},{name:"decExpr2",symbols:["decExpr2","_",{literal:"/"},"_","locDecExpr3"],postprocess:function(d){try{return d[0].div(d[4][0])}catch(err){throw new OtherError("Division by zero",d[4][1])}}},{name:"decExpr2",symbols:["decExpr3"],postprocess:id},{name:"decExpr3",symbols:["decimal"],postprocess:d=>Fraction(d[0])},{name:"decExpr3",symbols:[{literal:"("},"_","decExpr1","_",{literal:")"}],postprocess:d=>d[2]},{name:"locDecExpr3",symbols:["decExpr3"],postprocess:(d,loc,_)=>[d[0],loc]},{name:"posInt$ebnf$1",symbols:[]},{name:"posInt$ebnf$1",symbols:["posInt$ebnf$1",/[0-9]/],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"posInt",symbols:[/[1-9]/,"posInt$ebnf$1"],postprocess:d=>d[0]+d[1].join("")},{name:"nonNegInt",symbols:[{literal:"0"}],postprocess:_=>"0"},{name:"nonNegInt",symbols:["posInt"],postprocess:id},{name:"int$ebnf$1",symbols:[{literal:"-"}],postprocess:id},{name:"int$ebnf$1",symbols:[],postprocess:function(d){return null}},{name:"int",symbols:["int$ebnf$1","nonNegInt"],postprocess:d=>(d[0]||"")+d[1]},{name:"decimal$ebnf$1",symbols:[{literal:"-"}],postprocess:id},{name:"decimal$ebnf$1",symbols:[],postprocess:function(d){return null}},{name:"decimal$ebnf$2",symbols:[/[0-9]/]},{name:"decimal$ebnf$2",symbols:["decimal$ebnf$2",/[0-9]/],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"decimal$ebnf$3$subexpression$1$ebnf$1",symbols:[]},{name:"decimal$ebnf$3$subexpression$1$ebnf$1",symbols:["decimal$ebnf$3$subexpression$1$ebnf$1",/[0-9]/],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"decimal$ebnf$3$subexpression$1$ebnf$2$subexpression$1$ebnf$1",symbols:[/[0-9]/]},{name:"decimal$ebnf$3$subexpression$1$ebnf$2$subexpression$1$ebnf$1",symbols:["decimal$ebnf$3$subexpression$1$ebnf$2$subexpression$1$ebnf$1",/[0-9]/],postprocess:function arrpush(d){return d[0].concat([d[1]])}},{name:"decimal$ebnf$3$subexpression$1$ebnf$2$subexpression$1",symbols:[{literal:"("},"decimal$ebnf$3$subexpression$1$ebnf$2$subexpression$1$ebnf$1",{literal:")"}]},{name:"decimal$ebnf$3$subexpression$1$ebnf$2",symbols:["decimal$ebnf$3$subexpression$1$ebnf$2$subexpression$1"],postprocess:id},{name:"decimal$ebnf$3$subexpression$1$ebnf$2",symbols:[],postprocess:function(d){return null}},{name:"decimal$ebnf$3$subexpression$1",symbols:[{literal:"."},"decimal$ebnf$3$subexpression$1$ebnf$1","decimal$ebnf$3$subexpression$1$ebnf$2"]},{name:"decimal$ebnf$3",symbols:["decimal$ebnf$3$subexpression$1"],postprocess:id},{name:"decimal$ebnf$3",symbols:[],postprocess:function(d){return null}},{name:"decimal",symbols:["decimal$ebnf$1","decimal$ebnf$2","decimal$ebnf$3"],postprocess:d=>(d[0]||"")+d[1].join("")+(d[2]?"."+d[2][1].join("")+(d[2][2]?"("+d[2][2][1].join("")+")":""):"")},{name:"hertz$string$1",symbols:[{literal:"h"},{literal:"z"}],postprocess:function joiner(d){return d.join("")}},{name:"hertz",symbols:["hertz$string$1"]},{name:"hertz$string$2",symbols:[{literal:"H"},{literal:"z"}],postprocess:function joiner(d){return d.join("")}},{name:"hertz",symbols:["hertz$string$2"]},{name:"ordinal$string$1",symbols:[{literal:"1"},{literal:"s"},{literal:"t"}],postprocess:function joiner(d){return d.join("")}},{name:"ordinal",symbols:["ordinal$string$1"],postprocess:d=>"1"},{name:"ordinal$string$2",symbols:[{literal:"2"},{literal:"n"},{literal:"d"}],postprocess:function joiner(d){return d.join("")}},{name:"ordinal",symbols:["ordinal$string$2"],postprocess:d=>"2"},{name:"ordinal$string$3",symbols:[{literal:"3"},{literal:"r"},{literal:"d"}],postprocess:function joiner(d){return d.join("")}},{name:"ordinal",symbols:["ordinal$string$3"],postprocess:d=>"3"},{name:"ordinal$string$4",symbols:[{literal:"t"},{literal:"h"}],postprocess:function joiner(d){return d.join("")}},{name:"ordinal",symbols:[/[4-9]/,"ordinal$string$4"],postprocess:d=>d[0]},{name:"ordinal$ebnf$1",symbols:["posInt"],postprocess:id},{name:"ordinal$ebnf$1",symbols:[],postprocess:function(d){return null}},{name:"ordinal$string$5",symbols:[{literal:"t"},{literal:"h"}],postprocess:function joiner(d){return d.join("")}},{name:"ordinal",symbols:["ordinal$ebnf$1",{literal:"1"},/[0-9]/,"ordinal$string$5"],postprocess:d=>(d[0]||"")+"1"+d[2]},{name:"ordinal$ebnf$2",symbols:["posInt"],postprocess:id},{name:"ordinal$ebnf$2",symbols:[],postprocess:function(d){return null}},{name:"ordinal",symbols:["ordinal$ebnf$2",/[2-9]/,"ordinalOnesDigit"],postprocess:d=>(d[0]||"")+d[1]+d[2]},{name:"ordinal",symbols:["posInt",{literal:"0"},"ordinalOnesDigit"],postprocess:d=>d[0]+"0"+d[2]},{name:"ordinalOnesDigit$string$1",symbols:[{literal:"0"},{literal:"t"},{literal:"h"}],postprocess:function joiner(d){return d.join("")}},{name:"ordinalOnesDigit",symbols:["ordinalOnesDigit$string$1"],postprocess:d=>"0"},{name:"ordinalOnesDigit$string$2",symbols:[{literal:"1"},{literal:"s"},{literal:"t"}],postprocess:function joiner(d){return d.join("")}},{name:"ordinalOnesDigit",symbols:["ordinalOnesDigit$string$2"],postprocess:d=>"1"},{name:"ordinalOnesDigit$string$3",symbols:[{literal:"2"},{literal:"n"},{literal:"d"}],postprocess:function joiner(d){return d.join("")}},{name:"ordinalOnesDigit",symbols:["ordinalOnesDigit$string$3"],postprocess:d=>"2"},{name:"ordinalOnesDigit$string$4",symbols:[{literal:"3"},{literal:"r"},{literal:"d"}],postprocess:function joiner(d){return d.join("")}},{name:"ordinalOnesDigit",symbols:["ordinalOnesDigit$string$4"],postprocess:d=>"3"},{name:"ordinalOnesDigit$string$5",symbols:[{literal:"t"},{literal:"h"}],postprocess:function joiner(d){return d.join("")}},{name:"ordinalOnesDigit",symbols:[/[4-9]/,"ordinalOnesDigit$string$5"],postprocess:d=>d[0]}],ParserStart:"top1"};if(typeof module!=="undefined"&&typeof module.exports!=="undefined"){module.exports=grammar}else{window.grammar=grammar}})()},{"../edo.js":3,"../fjs.js":5,"../interval.js":7,"../pythagorean.js":11,"./eval.js":9,"fraction.js":16}],11:[function(require,module,exports){const{mod}=require("./utils.js");const pf=require("primes-and-factors");const ntw=require("number-to-words");const Fraction=require("fraction.js");const Interval=require("./interval.js");function pyInterval(d,a,b){if(d==0){throw new Error("Pythagorean interval cannot have a degree of zero")}const ox4=Fraction(a,b).mul(4*Math.sign(d));if(ox4.d!=1){throw new Error("offset does not have denominator 1, 2, or 4")}const zd=d-Math.sign(d);const ng=mod(zd*4+3,7)-3;const g=ng*2+ox4.s*ox4.n*7;return Interval({2:Fraction(g,4).sub((zd-g)/7).neg(),3:Fraction(g,4)})}const pyA1=pyInterval(1,1);function isPythagorean(a,b){const i=new Interval(a,b);return i.toMonzo().length<=2&&i.expOf(3).mul(4).d==1&&i.expOf(2).add(i.expOf(3)).d==1}function pyGenerator(a,b){const i=new Interval(a,b);const g=i.expOf(3).mul(4);if(g.d!=1){throw new Error("interval is not pythagorean")}return g.s*g.n}function pyOctaves(a,b){const i=new Interval(a,b);const p=i.expOf(2).add(i.expOf(3));if(p.d!=1){throw new Error("interval is not pythagorean")}return p.s*p.n}function pyDegree(a,b){const zd=pyZDegree(a,b);return zd==0?1:zd+Math.sign(zd)}function pyZDegree(a,b){const i=new Interval(a,b);const g=pyGenerator(i);const p=pyOctaves(i);return g+p*7}function pyOffset(a,b){const i=new Interval(a,b);const g=pyGenerator(i);const p=pyOctaves(i);const zd=g+p*7;const szd=zd==0?1:Math.sign(zd);return Fraction(szd*(2*Math.floor((4*g+3)/7)-g),4)}function pyRedDeg(d){return mod(d-Math.sign(d),7)+1}function isPerfectDeg(d){return pyRedDeg(d)==1||pyRedDeg(d)==4||pyRedDeg(d)==5}function case2(n,a,b){if(n==0||!n){return a}return b}function case3(n,a,b,c){if(n==0||!n){return a}if(n==1){return b}return c}function pyQuality(a,b,opts){if(!opts&&typeof b=="object"&&b!=null){opts=b;b=undefined}const{verbosity}=opts||{};let o=pyOffset(a,b);if(isPerfectDeg(pyDegree(a,b))){if(o==0){return case2(verbosity,"P","perfect")}}else{if(o==0){return case2(verbosity,"n","neutral")}if(o==.25){return case2(verbosity,"sM","semi-major")}if(o==.5){return case2(verbosity,"M","major")}if(o==-.25){return case2(verbosity,"sm","semi-minor")}if(o==-.5){return case2(verbosity,"m","minor")}o=o.sub(o.s,2)}if(o==.5){return case3(verbosity,"sA","semi-aug","semi-augmented")}if(o==1){return case3(verbosity,"A","aug","augmented")}if(o==-.5){return case3(verbosity,"sd","semi-dim","semi-diminished")}if(o==-1){return case3(verbosity,"d","dim","diminished")}if(o==2&&verbosity==2){return"doubly augmented"}if(o==-2&&verbosity==2){return"doubly diminished"}if(o>0&&o.d==1){return o.n+case3(verbosity,"A","-aug","-augmented")}if(o>0&&o.d!=1){return o.toFraction()+case3(verbosity,"-A","-aug","-augmented")}if(o<0&&o.d==1){return o.n+case3(verbosity,"d","-dim","-diminished")}if(o<0&&o.d!=1){return o.neg().toFraction()+case3(verbosity,"-d","-dim","-diminished")}}function pyDegreeString(d,verbosity){if(verbosity==0||!verbosity){return d}if(verbosity==1){if(Math.abs(d)==1){return"1sn"}if(Math.abs(d)==1){return"8ve"}return ntw.toOrdinal(Math.abs(d))}if(Math.abs(d)==1){return"unison"}if(Math.abs(d)==1){return"octave"}return ntw.toWordsOrdinal(Math.abs(d))}function pySymb(a,b,opts){if(!opts&&typeof b=="object"&&b!=null){opts=b;b=undefined}const{verbosity}=opts||{};const d=pyDegree(a,b);const d_str=case2(verbosity,""," ")+pyDegreeString(d,verbosity);const inv_str=verbosity&&d<0?" (inverted)":"";return pyQuality(a,b,opts)+d_str+inv_str}function baseNoteIntvToA(x){if(x=="C"){return pyInterval(-6,.5)}if(x=="D"){return pyInterval(-5,0)}if(x=="E"){return pyInterval(-4,0)}if(x=="F"){return pyInterval(-3,.5)}if(x=="G"){return pyInterval(-2,.5)}if(x=="A"){return Interval(1)}if(x=="B"){return pyInterval(2,.5)}}function octaveOfIntvToA4(a,b){const intvToA4=Interval(a,b);const intvToC4=intvToA4.div(baseNoteIntvToA("C"));return 4+Math.floor(intvToC4.valueOf_log(2))}function pyNote(intvToA4,useASCII){const intvToF4=Interval(intvToA4).div(baseNoteIntvToA("F"));if(!isPythagorean(intvToF4)||intvToF4["3"]&&intvToF4["3"].d!=1){throw new Error("interval is not a non-neutral pythagorean interval")}const e3=intvToF4.expOf(3).s*intvToF4.expOf(3).n;const zd=mod(4*e3,7);let o=Math.floor(e3/7);let octave=octaveOfIntvToA4(intvToA4);if(octave==4){octave=""}let baseNote;if(zd==0){baseNote="F"}if(zd==1){baseNote="G"}if(zd==2){baseNote="A"}if(zd==3){baseNote="B"}if(zd==4){baseNote="C"}if(zd==5){baseNote="D"}if(zd==6){baseNote="E"}let accidentals="";if(o==0&&baseNote=="A"&&octave!=""){accidentals+="♮"}while(o>1){accidentals+=useASCII?"X":"𝄪";o-=2}if(o==1){accidentals+=useASCII?"#":"♯"}while(o<-1){if(useASCII){accidentals+="b";o+=1}else{accidentals+="𝄫";o+=2}}if(o==-1){accidentals+=useASCII?"b":"♭"}return baseNote+accidentals+octave}module["exports"].pyInterval=pyInterval;module["exports"].pyA1=pyA1;module["exports"].isPythagorean=isPythagorean;module["exports"].pyGenerator=pyGenerator;module["exports"].pyOctaves=pyOctaves;module["exports"].pyDegree=pyDegree;module["exports"].pyZDegree=pyZDegree;module["exports"].pyOffset=pyOffset;module["exports"].pyRedDeg=pyRedDeg;module["exports"].isPerfectDeg=isPerfectDeg;module["exports"].pyQuality=pyQuality;module["exports"].pyDegreeString=pyDegreeString;module["exports"].pySymb=pySymb;module["exports"].baseNoteIntvToA=baseNoteIntvToA;module["exports"].octaveOfIntvToA4=octaveOfIntvToA4;module["exports"].pyNote=pyNote},{"./interval.js":7,"./utils.js":13,"fraction.js":16,"number-to-words":19,"primes-and-factors":20}],12:[function(require,module,exports){const{cachedLog2}=require("./utils.js");const Fraction=require("fraction.js");const Interval=require("./interval.js");function*signPerms(intv){const intv_fact=intv.factors();for(let bits=0;bits<1<<intv_fact.length;bits++){let[i,fact,logval]=[0,{},0];for(const[p,e]of intv_fact){fact[p]=e.mul((bits&1<<i)==0?1:-1);logval+=fact[p].valueOf()*cachedLog2(p);i++}yield[Interval(fact),logval]}}function*ratioPermsByNo2sHeight(startOdd,endOdd,opts){if(startOdd==undefined||startOdd<1||endOdd<-1){throw new Error("Invalid arguments to ratiosByNo2sHeight: startOdd = "+start+", endOdd = "+end)}const start=Math.ceil((startOdd-1)/2);const end=Math.floor((endOdd-1)/2);if(opts==undefined){opts={}}const{primeLimit}=opts;for(let h=start;!isFinite(end)||h<end;h++){const i=Interval(2*h+1);if(primeLimit&&!i.inPrimeLimit(primeLimit)){continue}yield[i,signPerms(i)]}}function*redRatiosByNo2sHeight(start,end,opts){const{oddLimit}=opts==undefined?{}:opts;for(const[i,perms]of ratioPermsByNo2sHeight(start,end,opts)){for(const[j_no2s,j_no2s_logval]of perms){const j=j_no2s.red();if(oddLimit&&!j.inOddLimit(oddLimit)){continue}yield j.toFrac()}}}function*rebRatiosByNo2sHeight(start,end,opts){const{oddLimit}=opts==undefined?{}:opts;for(const[i,perms]of ratioPermsByNo2sHeight(start,end,opts)){for(const[j_no2s,j_no2s_logval]of perms){const j=j_no2s.reb();if(oddLimit&&!j.inOddLimit(oddLimit)){continue}yield j.toFrac()}}}function*ratioPermsByHeight(start,end,opts){if(start==undefined||start<1||end<-1){throw new Error("Invalid arguments to ratiosByHeight: start = "+start+", end = "+end)}if(opts==undefined){opts={}}let{primeLimit,oddLimit}=opts;for(let h=Math.ceil(start);!isFinite(end)||h<end;h++){const i=Interval(h);if(primeLimit&&!i.inPrimeLimit(primeLimit)){continue}function*perms(){for(const[j,j_logval]of signPerms(i)){if(oddLimit&&!j.inOddLimit(oddLimit)){continue}yield[j,j_logval]}}yield[i,perms()]}}function*ratiosByHeight(start,end,opts){for(const[i,perms]of ratioPermsByHeight(start,end,opts)){for(const[j,j_logval]of perms){yield j.toFrac()}}}function*ratiosWithDenom(d,opts){if(!isFinite(d)||d<1){throw new Error("Invalid argument to ratiosWithDenom: d = "+d)}if(opts==undefined){opts={}}let{primeLimit,oddLimit,lo,hi}=opts;lo=Interval(lo==undefined?1:lo);hi=Interval(hi==undefined?2:hi);if(oddLimit&&d%2!=0&&d>oddLimit){return}const nLo=Math.ceil(lo.mul(d).valueOf());const nHi=Math.floor(hi.mul(d).valueOf());for(let n=nLo;n<=nHi;n++){const r=Fraction(n,d);if(r.d!=d){continue}if(oddLimit&&r.n%2!=0&&r.n>oddLimit){continue}if(primeLimit&&!Interval(r).inPrimeLimit(primeLimit)){continue}yield r}}function*ratiosWithNumer(n,opts){if(!isFinite(n)||n<1){throw new Error("Invalid argument to ratiosWithNumer: n = "+n)}if(opts==undefined){opts={}}let{primeLimit,oddLimit,lo,hi}=opts;lo=Interval(lo==undefined?1:lo);hi=Interval(hi==undefined?2:hi);if(oddLimit&&n%2!=0&&n>oddLimit){return}const dLo=Math.ceil(hi.recip().mul(n).valueOf());const dHi=Math.floor(lo.recip().mul(n).valueOf());for(let d=dHi;d>=dLo;d--){const r=Fraction(n,d);if(r.n!=n){continue}if(oddLimit&&r.d%2!=0&&r.d>oddLimit){continue}if(primeLimit&&!Interval(r).inPrimeLimit(primeLimit)){continue}yield r}}function*ratiosByDenom(start,end,opts){if(start==undefined||start<1||end<-1){throw new Error("Invalid arguments to ratiosByDenom: start = "+start+", end = "+end)}if(opts==undefined){opts={}}let{primeLimit,oddLimit,lo,hi}=opts;lo=Interval(lo==undefined?1:lo);hi=Interval(hi==undefined?2:hi);for(let d=start;!isFinite(end)||d<end;d++){for(const r of ratiosWithDenom(d,opts)){yield r}}}function*ratiosByNumer(start,end,opts){if(start==undefined||start<1||end<-1){throw new Error("Invalid arguments to ratiosByNumer: start = "+start+", end = "+end)}if(opts==undefined){opts={}}let{primeLimit,oddLimit,lo,hi}=opts;lo=Interval(lo==undefined?1:lo);hi=Interval(hi==undefined?2:hi);for(let n=start;!isFinite(end)||n<end;n++){for(const r of ratiosWithNumer(n,opts)){yield r}}}function*ratiosByDenomSorted(start,end,opts){if(start==undefined||start<1||end<-1){throw new Error("Invalid arguments to ratiosByDenom: start = "+start+", end = "+end)}if(opts==undefined){opts={}}let{primeLimit,oddLimit,lo,hi}=opts;lo=Interval(lo==undefined?1:lo);hi=Interval(hi==undefined?2:hi);let ret=[];for(let d=start;!isFinite(end)||d<end;d++){let i=0;for(const r of ratiosWithDenom(d,opts)){let added=false;for(;!added&&i<ret.length;i++){if(r.compare(ret[i])<0){ret.splice(i,0,r);added=true}}if(!added){ret.push(r)}}}for(const r of ret){yield r}}function*ratiosByNumerSorted(start,end,opts){if(start==undefined||start<1||end<-1){throw new Error("Invalid arguments to ratiosByDenom: start = "+start+", end = "+end)}if(opts==undefined){opts={}}let{primeLimit,oddLimit,lo,hi}=opts;lo=Interval(lo==undefined?1:lo);hi=Interval(hi==undefined?2:hi);let ret=[];for(let n=start;!isFinite(end)||n<end;n++){let i=0;for(const r of ratiosWithNumer(n,opts)){let added=false;for(;!added&&i<ret.length;i++){if(r.compare(ret[i])<0){ret.splice(i,0,r);added=true}}if(!added){ret.push(r)}}}for(const r of ret){yield r}}function*newRatiosInOddLimit(oddLimit,opts){if(oddLimit==undefined||oddLimit%2==0||oddLimit<1){throw new Error("Invalid argument to newRatiosInOddLimit: oddLimit = "+oddLimit)}if(opts==undefined){opts={}}let{unsorted}=opts;const ropts=Object.assign({},opts,{oddLimit:oddLimit,unsorted:undefined});let ret=[];for(const r of ratiosWithDenom(oddLimit,ropts)){if(unsorted){yield r}else{ret.push(r)}}let i=0;for(const r of ratiosWithNumer(oddLimit,ropts)){if(r.equals(1)){continue}if(unsorted){yield r}else{let added=false;for(;!added&&i<ret.length;i++){if(r.compare(ret[i])<0){ret.splice(i,0,r);added=true}}if(!added){ret.push(r)}}}if(!unsorted){for(const r of ret){yield r}}}function*ratiosInOddLimit(oddLimit,opts){if(opts==undefined){opts={}}let{primeLimit,lo,hi}=opts;lo=Interval(lo==undefined?1:lo);hi=Interval(hi==undefined?2:hi);for(let o=1;o<=oddLimit;o+=2){for(const r of newRatiosInOddLimit(o,opts)){yield r}}}function*ratiosInOddLimitSorted(oddLimit,opts){if(opts==undefined){opts={}}let{primeLimit,lo,hi}=opts;lo=Interval(lo==undefined?1:lo);hi=Interval(hi==undefined?2:hi);let ret=[];for(let o=1;o<=oddLimit;o+=2){let i=0;for(const r of newRatiosInOddLimit(o,Object.assign({},opts,{unsorted:false}))){let added=false;for(;!added&&i<ret.length;i++){if(r.compare(ret[i])<0){ret.splice(i,0,r);added=true}}if(!added){ret.push(r)}}}for(const r of ret){yield r}}module.exports.ratioPermsByNo2sHeight=ratioPermsByNo2sHeight;module.exports.redRatiosByNo2sHeight=redRatiosByNo2sHeight;module.exports.rebRatiosByNo2sHeight=rebRatiosByNo2sHeight;module.exports.ratioPermsByHeight=ratioPermsByHeight;module.exports.ratiosByHeight=ratiosByHeight;module.exports.ratiosWithDenom=ratiosWithDenom;module.exports.ratiosWithNumer=ratiosWithNumer;module.exports.ratiosByDenom=ratiosByDenom;module.exports.ratiosByNumer=ratiosByNumer;module.exports.ratiosByDenomSorted=ratiosByDenomSorted;module.exports.ratiosByNumerSorted=ratiosByNumerSorted;module.exports.newRatiosInOddLimit=newRatiosInOddLimit;module.exports.ratiosInOddLimit=ratiosInOddLimit;module.exports.ratiosInOddLimitSorted=ratiosInOddLimitSorted},{"./interval.js":7,"./utils.js":13,"fraction.js":16}],13:[function(require,module,exports){const pf=require("primes-and-factors");const Fraction=require("fraction.js");function mod(a,n){return(a%n+n)%n}function fractionalPart(n){const nSplit=(n+"").split(".");const decimalPlaces=nSplit.length>1?nSplit[1].length:0;return(n-Math.round(n)).toFixed(decimalPlaces)}let cached_logs={};function cachedLog2(i){let entry=cached_logs[i];if(entry==undefined){entry=Math.log2(i);cached_logs[i]=entry}return entry}function unBigFraction(fr){return Fraction(Number(fr.s*fr.n),Number(fr.d))}function maxKey(a){let max=-Infinity;for(const i in a){max=Math.max(i,max)}return max}function*keys(a,b){for(const i in a){yield i}for(const i in b){if(a[i]==undefined){yield i}}}function*primes(){yield*[2,3,5,7,11,13,17,19,23];for(let i=29;true;i+=6){if(pf.isPrime(i)){yield i}if(pf.isPrime(i+2)){yield i+2}}}module.exports.mod=mod;module.exports.fractionalPart=fractionalPart;module.exports.cachedLog2=cachedLog2;module.exports.unBigFraction=unBigFraction;module.exports.maxKey=maxKey;module.exports.keys=keys;module.exports.primes=primes},{"fraction.js":16,"primes-and-factors":20}],14:[function(require,module,exports){var bigInt=function(undefined){"use strict";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),DEFAULT_ALPHABET="0123456789abcdefghijklmnopqrstuvwxyz";var supportsNativeBigInt=typeof BigInt==="function";function Integer(v,radix,alphabet,caseSensitive){if(typeof v==="undefined")return Integer[0];if(typeof radix!=="undefined")return+radix===10&&!alphabet?parseValue(v):parseBase(v,radix,alphabet,caseSensitive);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function NativeBigInt(value){this.value=value}NativeBigInt.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;NativeBigInt.prototype.add=function(v){return new NativeBigInt(this.value+parseValue(v).value)};NativeBigInt.prototype.plus=NativeBigInt.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value==="number"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r==="number"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;NativeBigInt.prototype.subtract=function(v){return new NativeBigInt(this.value-parseValue(v).value)};NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value)};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};NativeBigInt.prototype.abs=function(){return new NativeBigInt(this.value>=0?this.value:-this.value)};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;NativeBigInt.prototype.multiply=function(v){return new NativeBigInt(this.value*parseValue(v).value)};NativeBigInt.prototype.times=NativeBigInt.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base}r[i+l]=carry}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};NativeBigInt.prototype.square=function(v){return new NativeBigInt(this.value*this.value)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);if(supportsNativeBigInt){return[new NativeBigInt(self.value/n.value),new NativeBigInt(self.value%n.value)]}var a=self.value,b=n.value;var quotient;if(b===0)throw new Error("Cannot divide by zero");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient==="number"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient==="number"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod==="number"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};NativeBigInt.prototype.over=NativeBigInt.prototype.divide=function(v){return new NativeBigInt(this.value/parseValue(v).value)};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=function(v){return new NativeBigInt(this.value%parseValue(v).value)};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error("The exponent "+n.toString()+" is too large.");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;NativeBigInt.prototype.pow=function(v){var n=parseValue(v);var a=this.value,b=n.value;var _0=BigInt(0),_1=BigInt(1),_2=BigInt(2);if(b===_0)return Integer[1];if(a===_0)return Integer[0];if(a===_1)return Integer[1];if(a===BigInt(-1))return n.isEven()?Integer[1]:Integer[-1];if(n.isNegative())return new NativeBigInt(_0);var x=this;var y=Integer[1];while(true){if((b&_1)===_1){y=y.times(x);--b}if(b===_0)break;b/=_2;x=x.square()}return y};BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error("Cannot take modPow with modulus 0");var r=Integer[1],base=this.mod(mod);if(exp.isNegative()){exp=exp.multiply(Integer[-1]);base=base.modInv(mod)}while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};NativeBigInt.prototype.compareAbs=function(v){var a=this.value;var b=parseValue(v).value;a=a>=0?a:-a;b=b>=0?b:-b;return a===b?0:a>b?1:-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;NativeBigInt.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var a=this.value;var b=parseValue(v).value;return a===b?0:a>b?1:-1};NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};NativeBigInt.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};NativeBigInt.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive;BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative;BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1)};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0)};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);if(n.isZero())return false;if(n.isUnit())return true;if(n.compareAbs(2)===0)return this.isEven();return this.mod(n).isZero()};NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.isUnit()||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next}return false}return true}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,3,5,7,11,13,17,19,23,29,31,37]);var logN=Math.log(2)*bits.toJSNumber();var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2))}return millerRabinTest(n,a)};NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations,rng){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2),rng))}return millerRabinTest(n,a)};NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.isZero()){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.isUnit())throw new Error(this.toString()+" and "+n.toString()+" are not co-prime");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1))};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1))};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return Math.abs(n)<=BASE}BigInteger.prototype.shiftLeft=function(v){var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+" is too large for shifting.")}if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(v){var remQuo;var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+" is too large for shifting.")}if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit))}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v==="number"?v|LOBMASK_I:typeof v==="bigint"?v|BigInt(LOBMASK_I):v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2}}return{p:bigInt(1),e:0}}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1))}if(n.compareTo(bigInt(0))===0){return bigInt(0)}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))};NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b,rng){a=parseValue(a);b=parseValue(b);var usedRNG=rng||Math.random;var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(usedRNG()*range));var digits=toBase(range,BASE).value;var result=[],restricted=true;for(var i=0;i<digits.length;i++){var top=restricted?digits[i]:BASE;var digit=truncate(usedRNG()*top);result.push(digit);if(digit<top)restricted=false}return low.add(Integer.fromArray(result,BASE,false))}var parseBase=function(text,base,alphabet,caseSensitive){alphabet=alphabet||DEFAULT_ALPHABET;text=String(text);if(!caseSensitive){text=text.toLowerCase();alphabet=alphabet.toLowerCase()}var length=text.length;var i;var absBase=Math.abs(base);var alphabetValues={};for(i=0;i<alphabet.length;i++){alphabetValues[alphabet[i]]=i}for(i=0;i<length;i++){var c=text[i];if(c==="-")continue;if(c in alphabetValues){if(alphabetValues[c]>=absBase){if(c==="1"&&absBase===1)continue;throw new Error(c+" is not a valid digit in base "+base+".")}}}base=parseValue(base);var digits=[];var isNegative=text[0]==="-";for(i=isNegative?1:0;i<text.length;i++){var c=text[i];if(c in alphabetValues)digits.push(parseValue(alphabetValues[c]));else if(c==="<"){var start=i;do{i++}while(text[i]!==">"&&i<text.length);digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+" is not a valid character")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit,alphabet){alphabet=alphabet||DEFAULT_ALPHABET;if(digit<alphabet.length){return alphabet[digit]}return"<"+digit+">"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error("Cannot convert nonzero numbers to base 0.")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(n.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false}}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs()}if(base.isUnit()){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(n.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:neg}}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(digit.toJSNumber())}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg}}function toBaseString(n,base,alphabet){var arr=toBase(n,base);return(arr.isNegative?"-":"")+arr.value.map(function(x){return stringify(x,alphabet)}).join("")}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)};NativeBigInt.prototype.toArray=function(radix){return toBase(this,radix)};BigInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix,alphabet);var v=this.value,l=v.length,str=String(v[--l]),zeros="0000000",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?"-":"";return sign+str};SmallInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix,alphabet);return String(this.value)};NativeBigInt.prototype.toString=SmallInteger.prototype.toString;NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return supportsNativeBigInt?new NativeBigInt(BigInt(x)):new SmallInteger(x);throw new Error("Invalid integer: "+v)}var sign=v[0]==="-";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error("Invalid integer: "+split.join("e"));if(split.length===2){var exp=split[1];if(exp[0]==="+")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error("Invalid integer: "+exp+" is not a valid exponent.");var text=split[0];var decimalPlace=text.indexOf(".");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error("Cannot include negative exponent part for integers");text+=new Array(exp+1).join("0");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error("Invalid integer: "+v);if(supportsNativeBigInt){return new NativeBigInt(BigInt(sign?"-"+v:v))}var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(supportsNativeBigInt){return new NativeBigInt(BigInt(v))}if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+" is not an integer.");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v==="number"){return parseNumberValue(v)}if(typeof v==="string"){return parseStringValue(v)}if(typeof v==="bigint"){return new NativeBigInt(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=parseValue(i);if(i>0)Integer[-i]=parseValue(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger||x instanceof NativeBigInt};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!=="undefined"&&module.hasOwnProperty("exports")){module.exports=bigInt}if(typeof define==="function"&&define.amd){define(function(){return bigInt})}},{}],15:[function(require,module,exports){(function(root){"use strict";if(!BigInt)BigInt=function(n){return n};const C_ONE=BigInt(1);const C_ZERO=BigInt(0);const C_TEN=BigInt(10);const C_TWO=BigInt(2);const C_FIVE=BigInt(5);const MAX_CYCLE_LEN=BigInt(2e3);const P={s:C_ONE,n:C_ZERO,d:C_ONE};function createError(name){function errorConstructor(){const temp=Error.apply(this,arguments);temp["name"]=this["name"]=name;this["stack"]=temp["stack"];this["message"]=temp["message"]}function IntermediateInheritor(){}IntermediateInheritor.prototype=Error.prototype;errorConstructor.prototype=new IntermediateInheritor;return errorConstructor}const DivisionByZero=Fraction["DivisionByZero"]=createError("DivisionByZero");const InvalidParameter=Fraction["InvalidParameter"]=createError("InvalidParameter");function assign(n,s){try{n=BigInt(n)}catch(e){throw new InvalidParameter}return n*s}const parse=function(p1,p2){let n=C_ZERO,d=C_ONE,s=C_ONE;if(p1===undefined||p1===null){}else if(p2!==undefined){n=BigInt(p1);d=BigInt(p2);s=n*d}else if(typeof p1==="object"){if("d"in p1&&"n"in p1){n=BigInt(p1["n"]);d=BigInt(p1["d"]);if("s"in p1)n*=BigInt(p1["s"])}else if(0 in p1){n=BigInt(p1[0]);if(1 in p1)d=BigInt(p1[1])}else if(p1 instanceof BigInt){n=BigInt(p1)}else{throw new InvalidParameter}s=n*d}else if(typeof p1==="bigint"){n=p1;s=p1;d=BigInt(1)}else if(typeof p1==="number"){if(isNaN(p1)){throw new InvalidParameter}if(p1<0){s=-C_ONE;p1=-p1}if(p1%1===0){n=BigInt(p1)}else if(p1>0){let z=1;let A=0,B=1;let C=1,D=1;let N=1e7;if(p1>=1){z=10**Math.floor(1+Math.log10(p1));p1/=z}while(B<=N&&D<=N){let M=(A+C)/(B+D);if(p1===M){if(B+D<=N){n=A+C;d=B+D}else if(D>B){n=C;d=D}else{n=A;d=B}break}else{if(p1>M){A+=C;B+=D}else{C+=A;D+=B}if(B>N){n=C;d=D}else{n=A;d=B}}}n=BigInt(n)*BigInt(z);d=BigInt(d)}else if(isNaN(p1)){d=n=NaN}}else if(typeof p1==="string"){let ndx=0;let v=C_ZERO,w=C_ZERO,x=C_ZERO,y=C_ONE,z=C_ONE;let match=p1.match(/\d+|./g);if(match===null)throw new InvalidParameter;if(match[ndx]==="-"){s=-C_ONE;ndx++}else if(match[ndx]==="+"){ndx++}if(match.length===ndx+1){w=assign(match[ndx++],s)}else if(match[ndx+1]==="."||match[ndx]==="."){if(match[ndx]!=="."){v=assign(match[ndx++],s)}ndx++;if(ndx+1===match.length||match[ndx+1]==="("&&match[ndx+3]===")"||match[ndx+1]==="'"&&match[ndx+3]==="'"){w=assign(match[ndx],s);y=C_TEN**BigInt(match[ndx].length);ndx++}if(match[ndx]==="("&&match[ndx+2]===")"||match[ndx]==="'"&&match[ndx+2]==="'"){x=assign(match[ndx+1],s);z=C_TEN**BigInt(match[ndx+1].length)-C_ONE;ndx+=3}}else if(match[ndx+1]==="/"||match[ndx+1]===":"){w=assign(match[ndx],s);y=assign(match[ndx+2],C_ONE);ndx+=3}else if(match[ndx+3]==="/"&&match[ndx+1]===" "){v=assign(match[ndx],s);w=assign(match[ndx+2],s);y=assign(match[ndx+4],C_ONE);ndx+=5}if(match.length<=ndx){d=y*z;s=n=x+d*v+z*w}else{throw new InvalidParameter}}else{throw new InvalidParameter}if(d===C_ZERO){throw new DivisionByZero}P["s"]=s<C_ZERO?-C_ONE:C_ONE;P["n"]=n<C_ZERO?-n:n;P["d"]=d<C_ZERO?-d:d};function modpow(b,e,m){let r=C_ONE;for(;e>C_ZERO;b=b*b%m,e>>=C_ONE){if(e&C_ONE){r=r*b%m}}return r}function cycleLen(n,d){for(;d%C_TWO===C_ZERO;d/=C_TWO){}for(;d%C_FIVE===C_ZERO;d/=C_FIVE){}if(d===C_ONE)return C_ZERO;let rem=C_TEN%d;let t=C_ONE;for(;rem!==C_ONE;t++){rem=rem*C_TEN%d;if(t>MAX_CYCLE_LEN)return C_ZERO}return t}function cycleStart(n,d,len){let rem1=C_ONE;let rem2=modpow(C_TEN,len,d);for(let t=0;t<300;t++){if(rem1===rem2)return BigInt(t);rem1=rem1*C_TEN%d;rem2=rem2*C_TEN%d}return 0}function gcd(a,b){if(!a)return b;if(!b)return a;while(1){a%=b;if(!a)return b;b%=a;if(!b)return a}}function Fraction(a,b){if(!(this instanceof Fraction)){return new Fraction(a,b)}parse(a,b);a=gcd(P["d"],P["n"]);this["s"]=P["s"];this["n"]=P["n"]/a|C_ZERO;this["d"]=P["d"]/a|C_ZERO}Fraction.prototype={s:C_ONE,n:C_ZERO,d:C_ONE,abs:function(){return new Fraction(this["n"],this["d"])},neg:function(){return new Fraction(-this["s"]*this["n"],this["d"])},add:function(a,b){parse(a,b);return new Fraction(this["s"]*this["n"]*P["d"]+P["s"]*this["d"]*P["n"],this["d"]*P["d"])},sub:function(a,b){parse(a,b);return new Fraction(this["s"]*this["n"]*P["d"]-P["s"]*this["d"]*P["n"],this["d"]*P["d"])},mul:function(a,b){parse(a,b);return new Fraction(this["s"]*P["s"]*this["n"]*P["n"],this["d"]*P["d"])},div:function(a,b){parse(a,b);return new Fraction(this["s"]*P["s"]*this["n"]*P["d"],this["d"]*P["n"])},clone:function(){return new Fraction(this)},mod:function(a,b){if(a===undefined){return new Fraction(this["s"]*this["n"]%this["d"],1)}parse(a,b);if(0===P["n"]&&0===this["d"]){Fraction(0,0)}return new Fraction(this["s"]*(P["d"]*this["n"])%(P["n"]*this["d"]),P["d"]*this["d"])},gcd:function(a,b){parse(a,b);return new Fraction(gcd(P["n"],this["n"])*gcd(P["d"],this["d"]),P["d"]*this["d"])},lcm:function(a,b){parse(a,b);if(P["n"]===C_ZERO&&this["n"]===C_ZERO){return new Fraction}return new Fraction(P["n"]*this["n"],gcd(P["n"],this["n"])*gcd(P["d"],this["d"]))},inverse:function(){return new Fraction(this["s"]*this["d"],this["n"])},pow:function(m){if(m<0){return new Fraction((this["s"]*this["d"])**BigInt(-m),this["n"]**BigInt(-m))}else{return new Fraction((this["s"]*this["n"])**BigInt(+m),this["d"]**BigInt(+m))}},equals:function(a,b){parse(a,b);return this["s"]*this["n"]*P["d"]===P["s"]*P["n"]*this["d"]},compare:function(a,b){parse(a,b);let t=this["s"]*this["n"]*P["d"]-P["s"]*P["n"]*this["d"];return(C_ZERO<t)-(t<C_ZERO)},ceil:function(places){places=10**Number(places||0);return new Fraction(Math.ceil(places*Number(this["s"]*this["n"])/Number(this["d"])),places)},floor:function(places){places=10**Number(places||0);return new Fraction(Math.floor(places*Number(this["s"]*this["n"])/Number(this["d"])),places)},round:function(places){places=10**Number(places||0);return new Fraction(Math.round(places*Number(this["s"]*this["n"])/Number(this["d"])),places)},divisible:function(a,b){parse(a,b);return!(!(P["n"]*this["d"])||this["n"]*P["d"]%(P["n"]*this["d"]))},valueOf:function(){return Number(this["s"]*this["n"])/Number(this["d"])},toString:function(dec){let g;let N=this["n"];let D=this["d"];dec=dec||15;let cycLen=cycleLen(N,D);let cycOff=cycleStart(N,D,cycLen);let str=this["s"]<C_ZERO?"-":"";str+=N/D|C_ZERO;N%=D;N*=C_TEN;if(N)str+=".";if(cycLen){for(let i=cycOff;i--;){str+=N/D|C_ZERO;N%=D;N*=C_TEN}str+="(";for(let i=cycLen;i--;){str+=N/D|C_ZERO;N%=D;N*=C_TEN}str+=")"}else{for(let i=dec;N&&i--;){str+=N/D|C_ZERO;N%=D;N*=C_TEN}}return str},toFraction:function(excludeWhole){let n=this["n"];let d=this["d"];let str=this["s"]<C_ZERO?"-":"";if(d===C_ONE){str+=n}else{let whole=n/d|C_ZERO;if(excludeWhole&&whole>C_ZERO){str+=whole;str+=" ";n%=d}str+=n;str+="/";str+=d}return str},toLatex:function(excludeWhole){let n=this["n"];let d=this["d"];let str=this["s"]<C_ZERO?"-":"";if(d===C_ONE){str+=n}else{let whole=n/d|C_ZERO;if(excludeWhole&&whole>C_ZERO){str+=whole;n%=d}str+="\\frac{";str+=n;str+="}{";str+=d;str+="}"}return str},toContinued:function(){let a=this["n"];let b=this["d"];let res=[];do{res.push(a/b|C_ZERO);let t=a%b;a=b;b=t}while(a!==C_ONE);return res},simplify:function(eps){let cont=this["abs"]()["toContinued"]();eps=eps||.001;function rec(a){if(a.length===1)return new Fraction(a[0]);return rec(a.slice(1))["inverse"]()["add"](a[0])}for(let i=0;i<cont.length;i++){let tmp=rec(cont.slice(0,i+1));if(tmp["sub"](this["abs"]())["abs"]().valueOf()<eps){return tmp["mul"](this["s"])}}return this}};if(typeof define==="function"&&define["amd"]){define([],function(){return Fraction})}else if(typeof exports==="object"){Object.defineProperty(exports,"__esModule",{value:true});Fraction["default"]=Fraction;Fraction["Fraction"]=Fraction;module["exports"]=Fraction}else{root["Fraction"]=Fraction}})(this)},{}],16:[function(require,module,exports){(function(root){"use strict";var MAX_CYCLE_LEN=2e3;var P={s:1,n:0,d:1};function createError(name){function errorConstructor(){var temp=Error.apply(this,arguments);temp["name"]=this["name"]=name;this["stack"]=temp["stack"];this["message"]=temp["message"]}function IntermediateInheritor(){}IntermediateInheritor.prototype=Error.prototype;errorConstructor.prototype=new IntermediateInheritor;return errorConstructor}var DivisionByZero=Fraction["DivisionByZero"]=createError("DivisionByZero");var InvalidParameter=Fraction["InvalidParameter"]=createError("InvalidParameter");function assign(n,s){if(isNaN(n=parseInt(n,10))){throwInvalidParam()}return n*s}function throwInvalidParam(){throw new InvalidParameter}var parse=function(p1,p2){var n=0,d=1,s=1;var v=0,w=0,x=0,y=1,z=1;var A=0,B=1;var C=1,D=1;var N=1e7;var M;if(p1===undefined||p1===null){}else if(p2!==undefined){n=p1;d=p2;s=n*d}else switch(typeof p1){case"object":{if("d"in p1&&"n"in p1){n=p1["n"];d=p1["d"];if("s"in p1)n*=p1["s"]}else if(0 in p1){n=p1[0];if(1 in p1)d=p1[1]}else{throwInvalidParam()}s=n*d;break}case"number":{if(p1<0){s=p1;p1=-p1}if(p1%1===0){n=p1}else if(p1>0){if(p1>=1){z=Math.pow(10,Math.floor(1+Math.log(p1)/Math.LN10));p1/=z}while(B<=N&&D<=N){M=(A+C)/(B+D);if(p1===M){if(B+D<=N){n=A+C;d=B+D}else if(D>B){n=C;d=D}else{n=A;d=B}break}else{if(p1>M){A+=C;B+=D}else{C+=A;D+=B}if(B>N){n=C;d=D}else{n=A;d=B}}}n*=z}else if(isNaN(p1)||isNaN(p2)){d=n=NaN}break}case"string":{B=p1.match(/\d+|./g);if(B===null)throwInvalidParam();if(B[A]==="-"){s=-1;A++}else if(B[A]==="+"){A++}if(B.length===A+1){w=assign(B[A++],s)}else if(B[A+1]==="."||B[A]==="."){if(B[A]!=="."){v=assign(B[A++],s)}A++;if(A+1===B.length||B[A+1]==="("&&B[A+3]===")"||B[A+1]==="'"&&B[A+3]==="'"){w=assign(B[A],s);y=Math.pow(10,B[A].length);A++}if(B[A]==="("&&B[A+2]===")"||B[A]==="'"&&B[A+2]==="'"){x=assign(B[A+1],s);z=Math.pow(10,B[A+1].length)-1;A+=3}}else if(B[A+1]==="/"||B[A+1]===":"){w=assign(B[A],s);y=assign(B[A+2],1);A+=3}else if(B[A+3]==="/"&&B[A+1]===" "){v=assign(B[A],s);w=assign(B[A+2],s);y=assign(B[A+4],1);A+=5}if(B.length<=A){d=y*z;s=n=x+d*v+z*w;break}}default:throwInvalidParam()}if(d===0){throw new DivisionByZero}P["s"]=s<0?-1:1;P["n"]=Math.abs(n);P["d"]=Math.abs(d)};function modpow(b,e,m){var r=1;for(;e>0;b=b*b%m,e>>=1){if(e&1){r=r*b%m}}return r}function cycleLen(n,d){for(;d%2===0;d/=2){}for(;d%5===0;d/=5){}if(d===1)return 0;var rem=10%d;var t=1;for(;rem!==1;t++){rem=rem*10%d;if(t>MAX_CYCLE_LEN)return 0}return t}function cycleStart(n,d,len){var rem1=1;var rem2=modpow(10,len,d);for(var t=0;t<300;t++){if(rem1===rem2)return t;rem1=rem1*10%d;rem2=rem2*10%d}return 0}function gcd(a,b){if(!a)return b;if(!b)return a;while(1){a%=b;if(!a)return b;b%=a;if(!b)return a}}function Fraction(a,b){if(!(this instanceof Fraction)){return new Fraction(a,b)}parse(a,b);if(Fraction["REDUCE"]){a=gcd(P["d"],P["n"])}else{a=1}this["s"]=P["s"];this["n"]=P["n"]/a;this["d"]=P["d"]/a}Fraction["REDUCE"]=1;Fraction.prototype={s:1,n:0,d:1,abs:function(){return new Fraction(this["n"],this["d"])},neg:function(){return new Fraction(-this["s"]*this["n"],this["d"])},add:function(a,b){parse(a,b);return new Fraction(this["s"]*this["n"]*P["d"]+P["s"]*this["d"]*P["n"],this["d"]*P["d"])},sub:function(a,b){parse(a,b);return new Fraction(this["s"]*this["n"]*P["d"]-P["s"]*this["d"]*P["n"],this["d"]*P["d"])},mul:function(a,b){parse(a,b);return new Fraction(this["s"]*P["s"]*this["n"]*P["n"],this["d"]*P["d"])},div:function(a,b){parse(a,b);return new Fraction(this["s"]*P["s"]*this["n"]*P["d"],this["d"]*P["n"])},clone:function(){return new Fraction(this)},mod:function(a,b){if(isNaN(this["n"])||isNaN(this["d"])){return new Fraction(NaN)}if(a===undefined){return new Fraction(this["s"]*this["n"]%this["d"],1)}parse(a,b);if(0===P["n"]&&0===this["d"]){Fraction(0,0)}return new Fraction(this["s"]*(P["d"]*this["n"])%(P["n"]*this["d"]),P["d"]*this["d"])},gcd:function(a,b){parse(a,b);return new Fraction(gcd(P["n"],this["n"])*gcd(P["d"],this["d"]),P["d"]*this["d"])},lcm:function(a,b){parse(a,b);if(P["n"]===0&&this["n"]===0){return new Fraction}return new Fraction(P["n"]*this["n"],gcd(P["n"],this["n"])*gcd(P["d"],this["d"]))},ceil:function(places){places=Math.pow(10,places||0);if(isNaN(this["n"])||isNaN(this["d"])){return new Fraction(NaN)}return new Fraction(Math.ceil(places*this["s"]*this["n"]/this["d"]),places)},floor:function(places){places=Math.pow(10,places||0);if(isNaN(this["n"])||isNaN(this["d"])){return new Fraction(NaN)}return new Fraction(Math.floor(places*this["s"]*this["n"]/this["d"]),places)},round:function(places){places=Math.pow(10,places||0);if(isNaN(this["n"])||isNaN(this["d"])){return new Fraction(NaN)}return new Fraction(Math.round(places*this["s"]*this["n"]/this["d"]),places)},inverse:function(){return new Fraction(this["s"]*this["d"],this["n"])},pow:function(m){if(m<0){return new Fraction(Math.pow(this["s"]*this["d"],-m),Math.pow(this["n"],-m))}else{return new Fraction(Math.pow(this["s"]*this["n"],m),Math.pow(this["d"],m))}},equals:function(a,b){parse(a,b);return this["s"]*this["n"]*P["d"]===P["s"]*P["n"]*this["d"]},compare:function(a,b){parse(a,b);var t=this["s"]*this["n"]*P["d"]-P["s"]*P["n"]*this["d"];return(0<t)-(t<0)},simplify:function(eps){if(isNaN(this["n"])||isNaN(this["d"])){return this}var cont=this["abs"]()["toContinued"]();eps=eps||.001;function rec(a){if(a.length===1)return new Fraction(a[0]);return rec(a.slice(1))["inverse"]()["add"](a[0])}for(var i=0;i<cont.length;i++){var tmp=rec(cont.slice(0,i+1));if(tmp["sub"](this["abs"]())["abs"]().valueOf()<eps){return tmp["mul"](this["s"])}}return this},divisible:function(a,b){parse(a,b);return!(!(P["n"]*this["d"])||this["n"]*P["d"]%(P["n"]*this["d"]))},valueOf:function(){return this["s"]*this["n"]/this["d"]},toFraction:function(excludeWhole){var whole,str="";var n=this["n"];var d=this["d"];if(this["s"]<0){str+="-"}if(d===1){str+=n}else{if(excludeWhole&&(whole=Math.floor(n/d))>0){str+=whole;str+=" ";n%=d}str+=n;str+="/";str+=d}return str},toLatex:function(excludeWhole){var whole,str="";var n=this["n"];var d=this["d"];if(this["s"]<0){str+="-"}if(d===1){str+=n}else{if(excludeWhole&&(whole=Math.floor(n/d))>0){str+=whole;n%=d}str+="\\frac{";str+=n;str+="}{";str+=d;str+="}"}return str},toContinued:function(){var t;var a=this["n"];var b=this["d"];var res=[];if(isNaN(a)||isNaN(b)){return res}do{res.push(Math.floor(a/b));t=a%b;a=b;b=t}while(a!==1);return res},toString:function(dec){var g;var N=this["n"];var D=this["d"];if(isNaN(N)||isNaN(D)){return"NaN"}if(!Fraction["REDUCE"]){g=gcd(N,D);N/=g;D/=g}dec=dec||15;var cycLen=cycleLen(N,D);var cycOff=cycleStart(N,D,cycLen);var str=this["s"]===-1?"-":"";str+=N/D|0;N%=D;N*=10;if(N)str+=".";if(cycLen){for(var i=cycOff;i--;){str+=N/D|0;N%=D;N*=10}str+="(";for(var i=cycLen;i--;){str+=N/D|0;N%=D;N*=10}str+=")"}else{for(var i=dec;N&&i--;){str+=N/D|0;N%=D;N*=10}}return str}};if(typeof define==="function"&&define["amd"]){define([],function(){return Fraction})}else if(typeof exports==="object"){Object.defineProperty(Fraction,"__esModule",{value:true});Fraction["default"]=Fraction;Fraction["Fraction"]=Fraction;module["exports"]=Fraction}else{root["Fraction"]=Fraction}})(this)},{}],17:[function(require,module,exports){var MathUtils=module.exports={isOdd:function(num){return num&1===1},isEven:function(num){return num&1===0},powermod:function powermod(num,exp,mod){if(exp===1)return num%mod;if(MathUtils.isOdd(exp)){return num*powermod(num,exp-1,mod)%mod}return Math.pow(powermod(num,exp/2,mod),2)%mod},isPrime:function(num){return MathUtils.fastIsPrime(num)&&MathUtils.slowIsPrime(num)},slowIsPrime:function(num){if(MathUtils.isEven(num))return false;for(var i=3,max=Math.sqrt(num);i<max;i+=2){if(num%i===0)return false}return true},fastIsPrime:function(num){return MathUtils.powermod(3,num-1,num)===1},randomPrime:function(len){var num=Math.floor(Math.pow(10,len||3)*Math.random());if(MathUtils.isEven(num))num++;while(!MathUtils.isPrime(num))num+=2;return num},gcd:function gcd(a,b){if(b===0)return a;return gcd(b,a%b)},egcd:function eea(a,b){if(b===0)return[a,1,0];var tmp=eea(b,a%b);var ss=tmp[1],ts=tmp[2];return[tmp[0],ts,ss-Math.floor(a/b)*ts]},modularInverse:function(a,b){var arr=MathUtils.egcd(a,b);return arr[1]}}},{}],18:[function(require,module,exports){(function(root,factory){if(typeof module==="object"&&module.exports){module.exports=factory()}else{root.nearley=factory()}})(this,function(){function Rule(name,symbols,postprocess){this.id=++Rule.highestId;this.name=name;this.symbols=symbols;this.postprocess=postprocess;return this}Rule.highestId=0;Rule.prototype.toString=function(withCursorAt){var symbolSequence=typeof withCursorAt==="undefined"?this.symbols.map(getSymbolShortDisplay).join(" "):this.symbols.slice(0,withCursorAt).map(getSymbolShortDisplay).join(" ")+" ● "+this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(" ");return this.name+" → "+symbolSequence};function State(rule,dot,reference,wantedBy){this.rule=rule;this.dot=dot;this.reference=reference;this.data=[];this.wantedBy=wantedBy;this.isComplete=this.dot===rule.symbols.length}State.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)};State.prototype.nextState=function(child){var state=new State(this.rule,this.dot+1,this.reference,this.wantedBy);state.left=this;state.right=child;if(state.isComplete){state.data=state.build();state.right=undefined}return state};State.prototype.build=function(){var children=[];var node=this;do{children.push(node.right.data);node=node.left}while(node.left);children.reverse();return children};State.prototype.finish=function(){if(this.rule.postprocess){this.data=this.rule.postprocess(this.data,this.reference,Parser.fail)}};function Column(grammar,index){this.grammar=grammar;this.index=index;this.states=[];this.wants={};this.scannable=[];this.completed={}}Column.prototype.process=function(nextColumn){var states=this.states;var wants=this.wants;var completed=this.completed;for(var w=0;w<states.length;w++){var state=states[w];if(state.isComplete){state.finish();if(state.data!==Parser.fail){var wantedBy=state.wantedBy;for(var i=wantedBy.length;i--;){var left=wantedBy[i];this.complete(left,state)}if(state.reference===this.index){var exp=state.rule.name;(this.completed[exp]=this.completed[exp]||[]).push(state)}}}else{var exp=state.rule.symbols[state.dot];if(typeof exp!=="string"){this.scannable.push(state);continue}if(wants[exp]){wants[exp].push(state);if(completed.hasOwnProperty(exp)){var nulls=completed[exp];for(var i=0;i<nulls.length;i++){var right=nulls[i];this.complete(state,right)}}}else{wants[exp]=[state];this.predict(exp)}}}};Column.prototype.predict=function(exp){var rules=this.grammar.byName[exp]||[];for(var i=0;i<rules.length;i++){var r=rules[i];var wantedBy=this.wants[exp];var s=new State(r,0,this.index,wantedBy);this.states.push(s)}};Column.prototype.complete=function(left,right){var copy=left.nextState(right);this.states.push(copy)};function Grammar(rules,start){this.rules=rules;this.start=start||this.rules[0].name;var byName=this.byName={};this.rules.forEach(function(rule){if(!byName.hasOwnProperty(rule.name)){byName[rule.name]=[]}byName[rule.name].push(rule)})}Grammar.fromCompiled=function(rules,start){var lexer=rules.Lexer;if(rules.ParserStart){start=rules.ParserStart;rules=rules.ParserRules}var rules=rules.map(function(r){return new Rule(r.name,r.symbols,r.postprocess)});var g=new Grammar(rules,start);g.lexer=lexer;return g};function StreamLexer(){this.reset("")}StreamLexer.prototype.reset=function(data,state){this.buffer=data;this.index=0;this.line=state?state.line:1;this.lastLineBreak=state?-state.col:0};StreamLexer.prototype.next=function(){if(this.index<this.buffer.length){var ch=this.buffer[this.index++];if(ch==="\n"){this.line+=1;this.lastLineBreak=this.index}return{value:ch}}};StreamLexer.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}};StreamLexer.prototype.formatError=function(token,message){var buffer=this.buffer;if(typeof buffer==="string"){var lines=buffer.split("\n").slice(Math.max(0,this.line-5),this.line);var nextLineBreak=buffer.indexOf("\n",this.index);if(nextLineBreak===-1)nextLineBreak=buffer.length;var col=this.index-this.lastLineBreak;var lastLineDigits=String(this.line).length;message+=" at line "+this.line+" col "+col+":\n\n";message+=lines.map(function(line,i){return pad(this.line-lines.length+i+1,lastLineDigits)+" "+line},this).join("\n");message+="\n"+pad("",lastLineDigits+col)+"^\n";return message}else{return message+" at index "+(this.index-1)}function pad(n,length){var s=String(n);return Array(length-s.length+1).join(" ")+s}};function Parser(rules,start,options){if(rules instanceof Grammar){var grammar=rules;var options=start}else{var grammar=Grammar.fromCompiled(rules,start)}this.grammar=grammar;this.options={keepHistory:false,lexer:grammar.lexer||new StreamLexer};for(var key in options||{}){this.options[key]=options[key]}this.lexer=this.options.lexer;this.lexerState=undefined;var column=new Column(grammar,0);var table=this.table=[column];column.wants[grammar.start]=[];column.predict(grammar.start);column.process();this.current=0}Parser.fail={};Parser.prototype.feed=function(chunk){var lexer=this.lexer;lexer.reset(chunk,this.lexerState);var token;while(true){try{token=lexer.next();if(!token){break}}catch(e){var nextColumn=new Column(this.grammar,this.current+1);this.table.push(nextColumn);var err=new Error(this.reportLexerError(e));err.offset=this.current;err.token=e.token;throw err}var column=this.table[this.current];if(!this.options.keepHistory){delete this.table[this.current-1]}var n=this.current+1;var nextColumn=new Column(this.grammar,n);this.table.push(nextColumn);var literal=token.text!==undefined?token.text:token.value;var value=lexer.constructor===StreamLexer?token.value:token;var scannable=column.scannable;for(var w=scannable.length;w--;){var state=scannable[w];var expect=state.rule.symbols[state.dot];if(expect.test?expect.test(value):expect.type?expect.type===token.type:expect.literal===literal){var next=state.nextState({data:value,token:token,isToken:true,reference:n-1});nextColumn.states.push(next)}}nextColumn.process();if(nextColumn.states.length===0){var err=new Error(this.reportError(token));err.offset=this.current;err.token=token;throw err}if(this.options.keepHistory){column.lexerState=lexer.save()}this.current++}if(column){this.lexerState=lexer.save()}this.results=this.finish();return this};Parser.prototype.reportLexerError=function(lexerError){var tokenDisplay,lexerMessage;var token=lexerError.token;if(token){tokenDisplay="input "+JSON.stringify(token.text[0])+" (lexer error)";lexerMessage=this.lexer.formatError(token,"Syntax error")}else{tokenDisplay="input (lexer error)";lexerMessage=lexerError.message}return this.reportErrorCommon(lexerMessage,tokenDisplay)};Parser.prototype.reportError=function(token){var tokenDisplay=(token.type?token.type+" token: ":"")+JSON.stringify(token.value!==undefined?token.value:token);var lexerMessage=this.lexer.formatError(token,"Syntax error");return this.reportErrorCommon(lexerMessage,tokenDisplay)};Parser.prototype.reportErrorCommon=function(lexerMessage,tokenDisplay){var lines=[];lines.push(lexerMessage);var lastColumnIndex=this.table.length-2;var lastColumn=this.table[lastColumnIndex];var expectantStates=lastColumn.states.filter(function(state){var nextSymbol=state.rule.symbols[state.dot];return nextSymbol&&typeof nextSymbol!=="string"});if(expectantStates.length===0){lines.push("Unexpected "+tokenDisplay+". I did not expect any more input. Here is the state of my parse table:\n");this.displayStateStack(lastColumn.states,lines)}else{lines.push("Unexpected "+tokenDisplay+". Instead, I was expecting to see one of the following:\n");var stateStacks=expectantStates.map(function(state){return this.buildFirstStateStack(state,[])||[state]},this);stateStacks.forEach(function(stateStack){var state=stateStack[0];var nextSymbol=state.rule.symbols[state.dot];var symbolDisplay=this.getSymbolDisplay(nextSymbol);lines.push("A "+symbolDisplay+" based on:");this.displayStateStack(stateStack,lines)},this)}lines.push("");return lines.join("\n")};Parser.prototype.displayStateStack=function(stateStack,lines){var lastDisplay;var sameDisplayCount=0;for(var j=0;j<stateStack.length;j++){var state=stateStack[j];var display=state.rule.toString(state.dot);if(display===lastDisplay){sameDisplayCount++}else{if(sameDisplayCount>0){lines.push("    ^ "+sameDisplayCount+" more lines identical to this")}sameDisplayCount=0;lines.push("    "+display)}lastDisplay=display}};Parser.prototype.getSymbolDisplay=function(symbol){return getSymbolLongDisplay(symbol)};Parser.prototype.buildFirstStateStack=function(state,visited){if(visited.indexOf(state)!==-1){return null}if(state.wantedBy.length===0){return[state]}var prevState=state.wantedBy[0];var childVisited=[state].concat(visited);var childResult=this.buildFirstStateStack(prevState,childVisited);if(childResult===null){return null}return[state].concat(childResult)};Parser.prototype.save=function(){var column=this.table[this.current];column.lexerState=this.lexerState;return column};Parser.prototype.restore=function(column){var index=column.index;this.current=index;this.table[index]=column;this.table.splice(index+1);this.lexerState=column.lexerState;this.results=this.finish()};Parser.prototype.rewind=function(index){if(!this.options.keepHistory){throw new Error("set option `keepHistory` to enable rewinding")}this.restore(this.table[index])};Parser.prototype.finish=function(){var considerations=[];var start=this.grammar.start;var column=this.table[this.table.length-1];column.states.forEach(function(t){if(t.rule.name===start&&t.dot===t.rule.symbols.length&&t.reference===0&&t.data!==Parser.fail){considerations.push(t)}});return considerations.map(function(c){return c.data})};function getSymbolLongDisplay(symbol){var type=typeof symbol;if(type==="string"){return symbol}else if(type==="object"){if(symbol.literal){return JSON.stringify(symbol.literal)}else if(symbol instanceof RegExp){return"character matching "+symbol}else if(symbol.type){return symbol.type+" token"}else if(symbol.test){return"token matching "+String(symbol.test)}else{throw new Error("Unknown symbol type: "+symbol)}}}function getSymbolShortDisplay(symbol){var type=typeof symbol;if(type==="string"){return symbol}else if(type==="object"){if(symbol.literal){return JSON.stringify(symbol.literal)}else if(symbol instanceof RegExp){return symbol.toString()}else if(symbol.type){return"%"+symbol.type}else if(symbol.test){return"<"+String(symbol.test)+">"}else{throw new Error("Unknown symbol type: "+symbol)}}}return{Parser:Parser,Grammar:Grammar,Rule:Rule}})},{}],19:[function(require,module,exports){(function(global){(function(){!function(){"use strict";var e="object"==typeof self&&self.self===self&&self||"object"==typeof global&&global.global===global&&global||this,t=9007199254740991;function f(e){return!("number"!=typeof e||e!=e||e===1/0||e===-1/0)}function l(e){return"number"==typeof e&&Math.abs(e)<=t}var n=/(hundred|thousand|(m|b|tr|quadr)illion)$/,r=/teen$/,o=/y$/,i=/(zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve)$/,s={zero:"zeroth",one:"first",two:"second",three:"third",four:"fourth",five:"fifth",six:"sixth",seven:"seventh",eight:"eighth",nine:"ninth",ten:"tenth",eleven:"eleventh",twelve:"twelfth"};function h(e){return n.test(e)||r.test(e)?e+"th":o.test(e)?e.replace(o,"ieth"):i.test(e)?e.replace(i,a):e}function a(e,t){return s[t]}var u=10,d=100,p=1e3,v=1e6,b=1e9,y=1e12,c=1e15,g=9007199254740992,m=["zero","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"],w=["zero","ten","twenty","thirty","forty","fifty","sixty","seventy","eighty","ninety"];function x(e,t){var n,r=parseInt(e,10);if(!f(r))throw new TypeError("Not a finite number: "+e+" ("+typeof e+")");if(!l(r))throw new RangeError("Input is not a safe number, it’s either too large or too small.");return n=function e(t){var n,r,o=arguments[1];if(0===t)return o?o.join(" ").replace(/,$/,""):"zero";o||(o=[]);t<0&&(o.push("minus"),t=Math.abs(t));t<20?(n=0,r=m[t]):t<d?(n=t%u,r=w[Math.floor(t/u)],n&&(r+="-"+m[n],n=0)):t<p?(n=t%d,r=e(Math.floor(t/d))+" hundred"):t<v?(n=t%p,r=e(Math.floor(t/p))+" thousand,"):t<b?(n=t%v,r=e(Math.floor(t/v))+" million,"):t<y?(n=t%b,r=e(Math.floor(t/b))+" billion,"):t<c?(n=t%y,r=e(Math.floor(t/y))+" trillion,"):t<=g&&(n=t%c,r=e(Math.floor(t/c))+" quadrillion,");o.push(r);return e(n,o)}(r),t?h(n):n}var M={toOrdinal:function(e){var t=parseInt(e,10);if(!f(t))throw new TypeError("Not a finite number: "+e+" ("+typeof e+")");if(!l(t))throw new RangeError("Input is not a safe number, it’s either too large or too small.");var n=String(t),r=Math.abs(t%100),o=11<=r&&r<=13,i=n.charAt(n.length-1);return n+(o?"th":"1"===i?"st":"2"===i?"nd":"3"===i?"rd":"th")},toWords:x,toWordsOrdinal:function(e){return h(x(e))}};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=M),exports.numberToWords=M):e.numberToWords=M}()}).call(this)}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],20:[function(require,module,exports){"use strict";var primeFactor={isPrime:function isPrime(num){if(!Number.isInteger(num)||num<2)return false;if(num%2===0)return num===2;if(num%3===0)return num===3;var floorSqrt=Math.floor(Math.sqrt(num));for(var i=5;i<=floorSqrt;i+=6){if(num%i===0||num%(i+2)===0)return false}return true},calculate:function calculate(inputNum){var result=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var repeat=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;if(!Number.isInteger(inputNum))return result;var num=Math.abs(inputNum);if(num<2)return result;var theSqrt=Math.sqrt(num);var x=2;if(num%x){x=3;if(num%x){x=5;var add=2;while(num%x&&x<theSqrt){x+=add;add=6-add}}}x=x<=theSqrt?x:num;if(!repeat){var index=result.indexOf(x);if(index<0)result.push(x)}else result.push(x);return x===num?result:this.calculate(num/x,result,repeat)},getFactors:function getFactors(num){return this.calculate(num,[],true)},getUniqueFactors:function getUniqueFactors(num){return this.calculate(num,[],false)},getPrimeExponentObject:function getPrimeExponentObject(num){var factors=this.calculate(num);var countObject={};var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=factors[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var factor=_step.value;if(Number.isFinite(countObject[factor])){countObject[factor]+=1}else{countObject[factor]=1}}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}return countObject},getFrequency:function getFrequency(num){var countObject=this.getPrimeExponentObject(num);var result=[];for(var key in countObject){if({}.hasOwnProperty.call(countObject,key)){var obj={factor:Number(key),times:countObject[key]};result.push(obj)}}return result}};module.exports=primeFactor},{}]},{},[6])(6)});
